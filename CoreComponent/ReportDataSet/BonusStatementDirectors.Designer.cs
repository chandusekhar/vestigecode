//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BonusStatementDirectors")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BonusStatementDirectors : global::System.Data.DataSet {
        
        private DistributorInfoDataTable tableDistributorInfo;
        
        private PerformanceBonusDataTable tablePerformanceBonus;
        
        private DownlineInfoDataTable tableDownlineInfo;
        
        private DistributorGroupMonthlyDataTable tableDistributorGroupMonthly;
        
        private DistributorChequeVoucherDataTable tableDistributorChequeVoucher;
        
        private DistributorPayOrderInfoDataTable tableDistributorPayOrderInfo;
        
        private DistributorTotalDataTable tableDistributorTotal;
        
        private DistributorGroupMonthly1DataTable tableDistributorGroupMonthly1;
        
        private DistributorPBAmountInfoDataTable tableDistributorPBAmountInfo;
        
        private DistributorCarInfoDataTable tableDistributorCarInfo;
        
        private DistributorCurrentMnthCarInfoDataTable tableDistributorCurrentMnthCarInfo;
        
        private DistributorViaChequeInfoDataTable tableDistributorViaChequeInfo;
        
        private DistPerformanceBonusDataTable tableDistPerformanceBonus;
        
        private BonusChkVoucherDataTable tableBonusChkVoucher;
        
        private ProductVoucherDataTable tableProductVoucher;
        
        private QualPvNonPVDataTable tableQualPvNonPV;
        
        private GroupArchiveSummaryDataTable tableGroupArchiveSummary;
        
        private DistributorTFInfoDataTable tableDistributorTFInfo;
        
        private DeclarationDataTable tableDeclaration;
        
        private TotalBvAmountDataTable tableTotalBvAmount;
        
        private DistributorGiftVoucherInfoDataTable tableDistributorGiftVoucherInfo;
        
        private Voucher1DataTable tableVoucher1;
        
        private Voucher2DataTable tableVoucher2;
        
        private Voucher3DataTable tableVoucher3;
        
        private Voucher4DataTable tableVoucher4;
        
        private Voucher5DataTable tableVoucher5;
        
        private Voucher6DataTable tableVoucher6;
        
        private Voucher7DataTable tableVoucher7;
        
        private Voucher8DataTable tableVoucher8;
        
        private Voucher9DataTable tableVoucher9;
        
        private Voucher10DataTable tableVoucher10;
        
        private Voucher11DataTable tableVoucher11;
        
        private Voucher12DataTable tableVoucher12;
        
        private Voucher13DataTable tableVoucher13;
        
        private Voucher14DataTable tableVoucher14;
        
        private Voucher15DataTable tableVoucher15;
        
        private Voucher16DataTable tableVoucher16;
        
        private Voucher17DataTable tableVoucher17;
        
        private Voucher18DataTable tableVoucher18;
        
        private Voucher19DataTable tableVoucher19;
        
        private Voucher20DataTable tableVoucher20;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BonusStatementDirectors() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BonusStatementDirectors(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DistributorInfo"] != null)) {
                    base.Tables.Add(new DistributorInfoDataTable(ds.Tables["DistributorInfo"]));
                }
                if ((ds.Tables["PerformanceBonus"] != null)) {
                    base.Tables.Add(new PerformanceBonusDataTable(ds.Tables["PerformanceBonus"]));
                }
                if ((ds.Tables["DownlineInfo"] != null)) {
                    base.Tables.Add(new DownlineInfoDataTable(ds.Tables["DownlineInfo"]));
                }
                if ((ds.Tables["DistributorGroupMonthly"] != null)) {
                    base.Tables.Add(new DistributorGroupMonthlyDataTable(ds.Tables["DistributorGroupMonthly"]));
                }
                if ((ds.Tables["DistributorChequeVoucher"] != null)) {
                    base.Tables.Add(new DistributorChequeVoucherDataTable(ds.Tables["DistributorChequeVoucher"]));
                }
                if ((ds.Tables["DistributorPayOrderInfo"] != null)) {
                    base.Tables.Add(new DistributorPayOrderInfoDataTable(ds.Tables["DistributorPayOrderInfo"]));
                }
                if ((ds.Tables["DistributorTotal"] != null)) {
                    base.Tables.Add(new DistributorTotalDataTable(ds.Tables["DistributorTotal"]));
                }
                if ((ds.Tables["DistributorGroupMonthly1"] != null)) {
                    base.Tables.Add(new DistributorGroupMonthly1DataTable(ds.Tables["DistributorGroupMonthly1"]));
                }
                if ((ds.Tables["DistributorPBAmountInfo"] != null)) {
                    base.Tables.Add(new DistributorPBAmountInfoDataTable(ds.Tables["DistributorPBAmountInfo"]));
                }
                if ((ds.Tables["DistributorCarInfo"] != null)) {
                    base.Tables.Add(new DistributorCarInfoDataTable(ds.Tables["DistributorCarInfo"]));
                }
                if ((ds.Tables["DistributorCurrentMnthCarInfo"] != null)) {
                    base.Tables.Add(new DistributorCurrentMnthCarInfoDataTable(ds.Tables["DistributorCurrentMnthCarInfo"]));
                }
                if ((ds.Tables["DistributorViaChequeInfo"] != null)) {
                    base.Tables.Add(new DistributorViaChequeInfoDataTable(ds.Tables["DistributorViaChequeInfo"]));
                }
                if ((ds.Tables["DistPerformanceBonus"] != null)) {
                    base.Tables.Add(new DistPerformanceBonusDataTable(ds.Tables["DistPerformanceBonus"]));
                }
                if ((ds.Tables["BonusChkVoucher"] != null)) {
                    base.Tables.Add(new BonusChkVoucherDataTable(ds.Tables["BonusChkVoucher"]));
                }
                if ((ds.Tables["ProductVoucher"] != null)) {
                    base.Tables.Add(new ProductVoucherDataTable(ds.Tables["ProductVoucher"]));
                }
                if ((ds.Tables["QualPvNonPV"] != null)) {
                    base.Tables.Add(new QualPvNonPVDataTable(ds.Tables["QualPvNonPV"]));
                }
                if ((ds.Tables["GroupArchiveSummary"] != null)) {
                    base.Tables.Add(new GroupArchiveSummaryDataTable(ds.Tables["GroupArchiveSummary"]));
                }
                if ((ds.Tables["DistributorTFInfo"] != null)) {
                    base.Tables.Add(new DistributorTFInfoDataTable(ds.Tables["DistributorTFInfo"]));
                }
                if ((ds.Tables["Declaration"] != null)) {
                    base.Tables.Add(new DeclarationDataTable(ds.Tables["Declaration"]));
                }
                if ((ds.Tables["TotalBvAmount"] != null)) {
                    base.Tables.Add(new TotalBvAmountDataTable(ds.Tables["TotalBvAmount"]));
                }
                if ((ds.Tables["DistributorGiftVoucherInfo"] != null)) {
                    base.Tables.Add(new DistributorGiftVoucherInfoDataTable(ds.Tables["DistributorGiftVoucherInfo"]));
                }
                if ((ds.Tables["Voucher1"] != null)) {
                    base.Tables.Add(new Voucher1DataTable(ds.Tables["Voucher1"]));
                }
                if ((ds.Tables["Voucher2"] != null)) {
                    base.Tables.Add(new Voucher2DataTable(ds.Tables["Voucher2"]));
                }
                if ((ds.Tables["Voucher3"] != null)) {
                    base.Tables.Add(new Voucher3DataTable(ds.Tables["Voucher3"]));
                }
                if ((ds.Tables["Voucher4"] != null)) {
                    base.Tables.Add(new Voucher4DataTable(ds.Tables["Voucher4"]));
                }
                if ((ds.Tables["Voucher5"] != null)) {
                    base.Tables.Add(new Voucher5DataTable(ds.Tables["Voucher5"]));
                }
                if ((ds.Tables["Voucher6"] != null)) {
                    base.Tables.Add(new Voucher6DataTable(ds.Tables["Voucher6"]));
                }
                if ((ds.Tables["Voucher7"] != null)) {
                    base.Tables.Add(new Voucher7DataTable(ds.Tables["Voucher7"]));
                }
                if ((ds.Tables["Voucher8"] != null)) {
                    base.Tables.Add(new Voucher8DataTable(ds.Tables["Voucher8"]));
                }
                if ((ds.Tables["Voucher9"] != null)) {
                    base.Tables.Add(new Voucher9DataTable(ds.Tables["Voucher9"]));
                }
                if ((ds.Tables["Voucher10"] != null)) {
                    base.Tables.Add(new Voucher10DataTable(ds.Tables["Voucher10"]));
                }
                if ((ds.Tables["Voucher11"] != null)) {
                    base.Tables.Add(new Voucher11DataTable(ds.Tables["Voucher11"]));
                }
                if ((ds.Tables["Voucher12"] != null)) {
                    base.Tables.Add(new Voucher12DataTable(ds.Tables["Voucher12"]));
                }
                if ((ds.Tables["Voucher13"] != null)) {
                    base.Tables.Add(new Voucher13DataTable(ds.Tables["Voucher13"]));
                }
                if ((ds.Tables["Voucher14"] != null)) {
                    base.Tables.Add(new Voucher14DataTable(ds.Tables["Voucher14"]));
                }
                if ((ds.Tables["Voucher15"] != null)) {
                    base.Tables.Add(new Voucher15DataTable(ds.Tables["Voucher15"]));
                }
                if ((ds.Tables["Voucher16"] != null)) {
                    base.Tables.Add(new Voucher16DataTable(ds.Tables["Voucher16"]));
                }
                if ((ds.Tables["Voucher17"] != null)) {
                    base.Tables.Add(new Voucher17DataTable(ds.Tables["Voucher17"]));
                }
                if ((ds.Tables["Voucher18"] != null)) {
                    base.Tables.Add(new Voucher18DataTable(ds.Tables["Voucher18"]));
                }
                if ((ds.Tables["Voucher19"] != null)) {
                    base.Tables.Add(new Voucher19DataTable(ds.Tables["Voucher19"]));
                }
                if ((ds.Tables["Voucher20"] != null)) {
                    base.Tables.Add(new Voucher20DataTable(ds.Tables["Voucher20"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorInfoDataTable DistributorInfo {
            get {
                return this.tableDistributorInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PerformanceBonusDataTable PerformanceBonus {
            get {
                return this.tablePerformanceBonus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DownlineInfoDataTable DownlineInfo {
            get {
                return this.tableDownlineInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorGroupMonthlyDataTable DistributorGroupMonthly {
            get {
                return this.tableDistributorGroupMonthly;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorChequeVoucherDataTable DistributorChequeVoucher {
            get {
                return this.tableDistributorChequeVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorPayOrderInfoDataTable DistributorPayOrderInfo {
            get {
                return this.tableDistributorPayOrderInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorTotalDataTable DistributorTotal {
            get {
                return this.tableDistributorTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorGroupMonthly1DataTable DistributorGroupMonthly1 {
            get {
                return this.tableDistributorGroupMonthly1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorPBAmountInfoDataTable DistributorPBAmountInfo {
            get {
                return this.tableDistributorPBAmountInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorCarInfoDataTable DistributorCarInfo {
            get {
                return this.tableDistributorCarInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorCurrentMnthCarInfoDataTable DistributorCurrentMnthCarInfo {
            get {
                return this.tableDistributorCurrentMnthCarInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorViaChequeInfoDataTable DistributorViaChequeInfo {
            get {
                return this.tableDistributorViaChequeInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistPerformanceBonusDataTable DistPerformanceBonus {
            get {
                return this.tableDistPerformanceBonus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BonusChkVoucherDataTable BonusChkVoucher {
            get {
                return this.tableBonusChkVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductVoucherDataTable ProductVoucher {
            get {
                return this.tableProductVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QualPvNonPVDataTable QualPvNonPV {
            get {
                return this.tableQualPvNonPV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GroupArchiveSummaryDataTable GroupArchiveSummary {
            get {
                return this.tableGroupArchiveSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorTFInfoDataTable DistributorTFInfo {
            get {
                return this.tableDistributorTFInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeclarationDataTable Declaration {
            get {
                return this.tableDeclaration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TotalBvAmountDataTable TotalBvAmount {
            get {
                return this.tableTotalBvAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorGiftVoucherInfoDataTable DistributorGiftVoucherInfo {
            get {
                return this.tableDistributorGiftVoucherInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher1DataTable Voucher1 {
            get {
                return this.tableVoucher1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher2DataTable Voucher2 {
            get {
                return this.tableVoucher2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher3DataTable Voucher3 {
            get {
                return this.tableVoucher3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher4DataTable Voucher4 {
            get {
                return this.tableVoucher4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher5DataTable Voucher5 {
            get {
                return this.tableVoucher5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher6DataTable Voucher6 {
            get {
                return this.tableVoucher6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher7DataTable Voucher7 {
            get {
                return this.tableVoucher7;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher8DataTable Voucher8 {
            get {
                return this.tableVoucher8;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher9DataTable Voucher9 {
            get {
                return this.tableVoucher9;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher10DataTable Voucher10 {
            get {
                return this.tableVoucher10;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher11DataTable Voucher11 {
            get {
                return this.tableVoucher11;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher12DataTable Voucher12 {
            get {
                return this.tableVoucher12;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher13DataTable Voucher13 {
            get {
                return this.tableVoucher13;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher14DataTable Voucher14 {
            get {
                return this.tableVoucher14;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher15DataTable Voucher15 {
            get {
                return this.tableVoucher15;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher16DataTable Voucher16 {
            get {
                return this.tableVoucher16;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher17DataTable Voucher17 {
            get {
                return this.tableVoucher17;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher18DataTable Voucher18 {
            get {
                return this.tableVoucher18;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher19DataTable Voucher19 {
            get {
                return this.tableVoucher19;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Voucher20DataTable Voucher20 {
            get {
                return this.tableVoucher20;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BonusStatementDirectors cln = ((BonusStatementDirectors)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DistributorInfo"] != null)) {
                    base.Tables.Add(new DistributorInfoDataTable(ds.Tables["DistributorInfo"]));
                }
                if ((ds.Tables["PerformanceBonus"] != null)) {
                    base.Tables.Add(new PerformanceBonusDataTable(ds.Tables["PerformanceBonus"]));
                }
                if ((ds.Tables["DownlineInfo"] != null)) {
                    base.Tables.Add(new DownlineInfoDataTable(ds.Tables["DownlineInfo"]));
                }
                if ((ds.Tables["DistributorGroupMonthly"] != null)) {
                    base.Tables.Add(new DistributorGroupMonthlyDataTable(ds.Tables["DistributorGroupMonthly"]));
                }
                if ((ds.Tables["DistributorChequeVoucher"] != null)) {
                    base.Tables.Add(new DistributorChequeVoucherDataTable(ds.Tables["DistributorChequeVoucher"]));
                }
                if ((ds.Tables["DistributorPayOrderInfo"] != null)) {
                    base.Tables.Add(new DistributorPayOrderInfoDataTable(ds.Tables["DistributorPayOrderInfo"]));
                }
                if ((ds.Tables["DistributorTotal"] != null)) {
                    base.Tables.Add(new DistributorTotalDataTable(ds.Tables["DistributorTotal"]));
                }
                if ((ds.Tables["DistributorGroupMonthly1"] != null)) {
                    base.Tables.Add(new DistributorGroupMonthly1DataTable(ds.Tables["DistributorGroupMonthly1"]));
                }
                if ((ds.Tables["DistributorPBAmountInfo"] != null)) {
                    base.Tables.Add(new DistributorPBAmountInfoDataTable(ds.Tables["DistributorPBAmountInfo"]));
                }
                if ((ds.Tables["DistributorCarInfo"] != null)) {
                    base.Tables.Add(new DistributorCarInfoDataTable(ds.Tables["DistributorCarInfo"]));
                }
                if ((ds.Tables["DistributorCurrentMnthCarInfo"] != null)) {
                    base.Tables.Add(new DistributorCurrentMnthCarInfoDataTable(ds.Tables["DistributorCurrentMnthCarInfo"]));
                }
                if ((ds.Tables["DistributorViaChequeInfo"] != null)) {
                    base.Tables.Add(new DistributorViaChequeInfoDataTable(ds.Tables["DistributorViaChequeInfo"]));
                }
                if ((ds.Tables["DistPerformanceBonus"] != null)) {
                    base.Tables.Add(new DistPerformanceBonusDataTable(ds.Tables["DistPerformanceBonus"]));
                }
                if ((ds.Tables["BonusChkVoucher"] != null)) {
                    base.Tables.Add(new BonusChkVoucherDataTable(ds.Tables["BonusChkVoucher"]));
                }
                if ((ds.Tables["ProductVoucher"] != null)) {
                    base.Tables.Add(new ProductVoucherDataTable(ds.Tables["ProductVoucher"]));
                }
                if ((ds.Tables["QualPvNonPV"] != null)) {
                    base.Tables.Add(new QualPvNonPVDataTable(ds.Tables["QualPvNonPV"]));
                }
                if ((ds.Tables["GroupArchiveSummary"] != null)) {
                    base.Tables.Add(new GroupArchiveSummaryDataTable(ds.Tables["GroupArchiveSummary"]));
                }
                if ((ds.Tables["DistributorTFInfo"] != null)) {
                    base.Tables.Add(new DistributorTFInfoDataTable(ds.Tables["DistributorTFInfo"]));
                }
                if ((ds.Tables["Declaration"] != null)) {
                    base.Tables.Add(new DeclarationDataTable(ds.Tables["Declaration"]));
                }
                if ((ds.Tables["TotalBvAmount"] != null)) {
                    base.Tables.Add(new TotalBvAmountDataTable(ds.Tables["TotalBvAmount"]));
                }
                if ((ds.Tables["DistributorGiftVoucherInfo"] != null)) {
                    base.Tables.Add(new DistributorGiftVoucherInfoDataTable(ds.Tables["DistributorGiftVoucherInfo"]));
                }
                if ((ds.Tables["Voucher1"] != null)) {
                    base.Tables.Add(new Voucher1DataTable(ds.Tables["Voucher1"]));
                }
                if ((ds.Tables["Voucher2"] != null)) {
                    base.Tables.Add(new Voucher2DataTable(ds.Tables["Voucher2"]));
                }
                if ((ds.Tables["Voucher3"] != null)) {
                    base.Tables.Add(new Voucher3DataTable(ds.Tables["Voucher3"]));
                }
                if ((ds.Tables["Voucher4"] != null)) {
                    base.Tables.Add(new Voucher4DataTable(ds.Tables["Voucher4"]));
                }
                if ((ds.Tables["Voucher5"] != null)) {
                    base.Tables.Add(new Voucher5DataTable(ds.Tables["Voucher5"]));
                }
                if ((ds.Tables["Voucher6"] != null)) {
                    base.Tables.Add(new Voucher6DataTable(ds.Tables["Voucher6"]));
                }
                if ((ds.Tables["Voucher7"] != null)) {
                    base.Tables.Add(new Voucher7DataTable(ds.Tables["Voucher7"]));
                }
                if ((ds.Tables["Voucher8"] != null)) {
                    base.Tables.Add(new Voucher8DataTable(ds.Tables["Voucher8"]));
                }
                if ((ds.Tables["Voucher9"] != null)) {
                    base.Tables.Add(new Voucher9DataTable(ds.Tables["Voucher9"]));
                }
                if ((ds.Tables["Voucher10"] != null)) {
                    base.Tables.Add(new Voucher10DataTable(ds.Tables["Voucher10"]));
                }
                if ((ds.Tables["Voucher11"] != null)) {
                    base.Tables.Add(new Voucher11DataTable(ds.Tables["Voucher11"]));
                }
                if ((ds.Tables["Voucher12"] != null)) {
                    base.Tables.Add(new Voucher12DataTable(ds.Tables["Voucher12"]));
                }
                if ((ds.Tables["Voucher13"] != null)) {
                    base.Tables.Add(new Voucher13DataTable(ds.Tables["Voucher13"]));
                }
                if ((ds.Tables["Voucher14"] != null)) {
                    base.Tables.Add(new Voucher14DataTable(ds.Tables["Voucher14"]));
                }
                if ((ds.Tables["Voucher15"] != null)) {
                    base.Tables.Add(new Voucher15DataTable(ds.Tables["Voucher15"]));
                }
                if ((ds.Tables["Voucher16"] != null)) {
                    base.Tables.Add(new Voucher16DataTable(ds.Tables["Voucher16"]));
                }
                if ((ds.Tables["Voucher17"] != null)) {
                    base.Tables.Add(new Voucher17DataTable(ds.Tables["Voucher17"]));
                }
                if ((ds.Tables["Voucher18"] != null)) {
                    base.Tables.Add(new Voucher18DataTable(ds.Tables["Voucher18"]));
                }
                if ((ds.Tables["Voucher19"] != null)) {
                    base.Tables.Add(new Voucher19DataTable(ds.Tables["Voucher19"]));
                }
                if ((ds.Tables["Voucher20"] != null)) {
                    base.Tables.Add(new Voucher20DataTable(ds.Tables["Voucher20"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDistributorInfo = ((DistributorInfoDataTable)(base.Tables["DistributorInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorInfo != null)) {
                    this.tableDistributorInfo.InitVars();
                }
            }
            this.tablePerformanceBonus = ((PerformanceBonusDataTable)(base.Tables["PerformanceBonus"]));
            if ((initTable == true)) {
                if ((this.tablePerformanceBonus != null)) {
                    this.tablePerformanceBonus.InitVars();
                }
            }
            this.tableDownlineInfo = ((DownlineInfoDataTable)(base.Tables["DownlineInfo"]));
            if ((initTable == true)) {
                if ((this.tableDownlineInfo != null)) {
                    this.tableDownlineInfo.InitVars();
                }
            }
            this.tableDistributorGroupMonthly = ((DistributorGroupMonthlyDataTable)(base.Tables["DistributorGroupMonthly"]));
            if ((initTable == true)) {
                if ((this.tableDistributorGroupMonthly != null)) {
                    this.tableDistributorGroupMonthly.InitVars();
                }
            }
            this.tableDistributorChequeVoucher = ((DistributorChequeVoucherDataTable)(base.Tables["DistributorChequeVoucher"]));
            if ((initTable == true)) {
                if ((this.tableDistributorChequeVoucher != null)) {
                    this.tableDistributorChequeVoucher.InitVars();
                }
            }
            this.tableDistributorPayOrderInfo = ((DistributorPayOrderInfoDataTable)(base.Tables["DistributorPayOrderInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorPayOrderInfo != null)) {
                    this.tableDistributorPayOrderInfo.InitVars();
                }
            }
            this.tableDistributorTotal = ((DistributorTotalDataTable)(base.Tables["DistributorTotal"]));
            if ((initTable == true)) {
                if ((this.tableDistributorTotal != null)) {
                    this.tableDistributorTotal.InitVars();
                }
            }
            this.tableDistributorGroupMonthly1 = ((DistributorGroupMonthly1DataTable)(base.Tables["DistributorGroupMonthly1"]));
            if ((initTable == true)) {
                if ((this.tableDistributorGroupMonthly1 != null)) {
                    this.tableDistributorGroupMonthly1.InitVars();
                }
            }
            this.tableDistributorPBAmountInfo = ((DistributorPBAmountInfoDataTable)(base.Tables["DistributorPBAmountInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorPBAmountInfo != null)) {
                    this.tableDistributorPBAmountInfo.InitVars();
                }
            }
            this.tableDistributorCarInfo = ((DistributorCarInfoDataTable)(base.Tables["DistributorCarInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorCarInfo != null)) {
                    this.tableDistributorCarInfo.InitVars();
                }
            }
            this.tableDistributorCurrentMnthCarInfo = ((DistributorCurrentMnthCarInfoDataTable)(base.Tables["DistributorCurrentMnthCarInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorCurrentMnthCarInfo != null)) {
                    this.tableDistributorCurrentMnthCarInfo.InitVars();
                }
            }
            this.tableDistributorViaChequeInfo = ((DistributorViaChequeInfoDataTable)(base.Tables["DistributorViaChequeInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorViaChequeInfo != null)) {
                    this.tableDistributorViaChequeInfo.InitVars();
                }
            }
            this.tableDistPerformanceBonus = ((DistPerformanceBonusDataTable)(base.Tables["DistPerformanceBonus"]));
            if ((initTable == true)) {
                if ((this.tableDistPerformanceBonus != null)) {
                    this.tableDistPerformanceBonus.InitVars();
                }
            }
            this.tableBonusChkVoucher = ((BonusChkVoucherDataTable)(base.Tables["BonusChkVoucher"]));
            if ((initTable == true)) {
                if ((this.tableBonusChkVoucher != null)) {
                    this.tableBonusChkVoucher.InitVars();
                }
            }
            this.tableProductVoucher = ((ProductVoucherDataTable)(base.Tables["ProductVoucher"]));
            if ((initTable == true)) {
                if ((this.tableProductVoucher != null)) {
                    this.tableProductVoucher.InitVars();
                }
            }
            this.tableQualPvNonPV = ((QualPvNonPVDataTable)(base.Tables["QualPvNonPV"]));
            if ((initTable == true)) {
                if ((this.tableQualPvNonPV != null)) {
                    this.tableQualPvNonPV.InitVars();
                }
            }
            this.tableGroupArchiveSummary = ((GroupArchiveSummaryDataTable)(base.Tables["GroupArchiveSummary"]));
            if ((initTable == true)) {
                if ((this.tableGroupArchiveSummary != null)) {
                    this.tableGroupArchiveSummary.InitVars();
                }
            }
            this.tableDistributorTFInfo = ((DistributorTFInfoDataTable)(base.Tables["DistributorTFInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorTFInfo != null)) {
                    this.tableDistributorTFInfo.InitVars();
                }
            }
            this.tableDeclaration = ((DeclarationDataTable)(base.Tables["Declaration"]));
            if ((initTable == true)) {
                if ((this.tableDeclaration != null)) {
                    this.tableDeclaration.InitVars();
                }
            }
            this.tableTotalBvAmount = ((TotalBvAmountDataTable)(base.Tables["TotalBvAmount"]));
            if ((initTable == true)) {
                if ((this.tableTotalBvAmount != null)) {
                    this.tableTotalBvAmount.InitVars();
                }
            }
            this.tableDistributorGiftVoucherInfo = ((DistributorGiftVoucherInfoDataTable)(base.Tables["DistributorGiftVoucherInfo"]));
            if ((initTable == true)) {
                if ((this.tableDistributorGiftVoucherInfo != null)) {
                    this.tableDistributorGiftVoucherInfo.InitVars();
                }
            }
            this.tableVoucher1 = ((Voucher1DataTable)(base.Tables["Voucher1"]));
            if ((initTable == true)) {
                if ((this.tableVoucher1 != null)) {
                    this.tableVoucher1.InitVars();
                }
            }
            this.tableVoucher2 = ((Voucher2DataTable)(base.Tables["Voucher2"]));
            if ((initTable == true)) {
                if ((this.tableVoucher2 != null)) {
                    this.tableVoucher2.InitVars();
                }
            }
            this.tableVoucher3 = ((Voucher3DataTable)(base.Tables["Voucher3"]));
            if ((initTable == true)) {
                if ((this.tableVoucher3 != null)) {
                    this.tableVoucher3.InitVars();
                }
            }
            this.tableVoucher4 = ((Voucher4DataTable)(base.Tables["Voucher4"]));
            if ((initTable == true)) {
                if ((this.tableVoucher4 != null)) {
                    this.tableVoucher4.InitVars();
                }
            }
            this.tableVoucher5 = ((Voucher5DataTable)(base.Tables["Voucher5"]));
            if ((initTable == true)) {
                if ((this.tableVoucher5 != null)) {
                    this.tableVoucher5.InitVars();
                }
            }
            this.tableVoucher6 = ((Voucher6DataTable)(base.Tables["Voucher6"]));
            if ((initTable == true)) {
                if ((this.tableVoucher6 != null)) {
                    this.tableVoucher6.InitVars();
                }
            }
            this.tableVoucher7 = ((Voucher7DataTable)(base.Tables["Voucher7"]));
            if ((initTable == true)) {
                if ((this.tableVoucher7 != null)) {
                    this.tableVoucher7.InitVars();
                }
            }
            this.tableVoucher8 = ((Voucher8DataTable)(base.Tables["Voucher8"]));
            if ((initTable == true)) {
                if ((this.tableVoucher8 != null)) {
                    this.tableVoucher8.InitVars();
                }
            }
            this.tableVoucher9 = ((Voucher9DataTable)(base.Tables["Voucher9"]));
            if ((initTable == true)) {
                if ((this.tableVoucher9 != null)) {
                    this.tableVoucher9.InitVars();
                }
            }
            this.tableVoucher10 = ((Voucher10DataTable)(base.Tables["Voucher10"]));
            if ((initTable == true)) {
                if ((this.tableVoucher10 != null)) {
                    this.tableVoucher10.InitVars();
                }
            }
            this.tableVoucher11 = ((Voucher11DataTable)(base.Tables["Voucher11"]));
            if ((initTable == true)) {
                if ((this.tableVoucher11 != null)) {
                    this.tableVoucher11.InitVars();
                }
            }
            this.tableVoucher12 = ((Voucher12DataTable)(base.Tables["Voucher12"]));
            if ((initTable == true)) {
                if ((this.tableVoucher12 != null)) {
                    this.tableVoucher12.InitVars();
                }
            }
            this.tableVoucher13 = ((Voucher13DataTable)(base.Tables["Voucher13"]));
            if ((initTable == true)) {
                if ((this.tableVoucher13 != null)) {
                    this.tableVoucher13.InitVars();
                }
            }
            this.tableVoucher14 = ((Voucher14DataTable)(base.Tables["Voucher14"]));
            if ((initTable == true)) {
                if ((this.tableVoucher14 != null)) {
                    this.tableVoucher14.InitVars();
                }
            }
            this.tableVoucher15 = ((Voucher15DataTable)(base.Tables["Voucher15"]));
            if ((initTable == true)) {
                if ((this.tableVoucher15 != null)) {
                    this.tableVoucher15.InitVars();
                }
            }
            this.tableVoucher16 = ((Voucher16DataTable)(base.Tables["Voucher16"]));
            if ((initTable == true)) {
                if ((this.tableVoucher16 != null)) {
                    this.tableVoucher16.InitVars();
                }
            }
            this.tableVoucher17 = ((Voucher17DataTable)(base.Tables["Voucher17"]));
            if ((initTable == true)) {
                if ((this.tableVoucher17 != null)) {
                    this.tableVoucher17.InitVars();
                }
            }
            this.tableVoucher18 = ((Voucher18DataTable)(base.Tables["Voucher18"]));
            if ((initTable == true)) {
                if ((this.tableVoucher18 != null)) {
                    this.tableVoucher18.InitVars();
                }
            }
            this.tableVoucher19 = ((Voucher19DataTable)(base.Tables["Voucher19"]));
            if ((initTable == true)) {
                if ((this.tableVoucher19 != null)) {
                    this.tableVoucher19.InitVars();
                }
            }
            this.tableVoucher20 = ((Voucher20DataTable)(base.Tables["Voucher20"]));
            if ((initTable == true)) {
                if ((this.tableVoucher20 != null)) {
                    this.tableVoucher20.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BonusStatementDirectors";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BonusStatementDirectors.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDistributorInfo = new DistributorInfoDataTable();
            base.Tables.Add(this.tableDistributorInfo);
            this.tablePerformanceBonus = new PerformanceBonusDataTable();
            base.Tables.Add(this.tablePerformanceBonus);
            this.tableDownlineInfo = new DownlineInfoDataTable();
            base.Tables.Add(this.tableDownlineInfo);
            this.tableDistributorGroupMonthly = new DistributorGroupMonthlyDataTable();
            base.Tables.Add(this.tableDistributorGroupMonthly);
            this.tableDistributorChequeVoucher = new DistributorChequeVoucherDataTable();
            base.Tables.Add(this.tableDistributorChequeVoucher);
            this.tableDistributorPayOrderInfo = new DistributorPayOrderInfoDataTable();
            base.Tables.Add(this.tableDistributorPayOrderInfo);
            this.tableDistributorTotal = new DistributorTotalDataTable();
            base.Tables.Add(this.tableDistributorTotal);
            this.tableDistributorGroupMonthly1 = new DistributorGroupMonthly1DataTable();
            base.Tables.Add(this.tableDistributorGroupMonthly1);
            this.tableDistributorPBAmountInfo = new DistributorPBAmountInfoDataTable();
            base.Tables.Add(this.tableDistributorPBAmountInfo);
            this.tableDistributorCarInfo = new DistributorCarInfoDataTable();
            base.Tables.Add(this.tableDistributorCarInfo);
            this.tableDistributorCurrentMnthCarInfo = new DistributorCurrentMnthCarInfoDataTable();
            base.Tables.Add(this.tableDistributorCurrentMnthCarInfo);
            this.tableDistributorViaChequeInfo = new DistributorViaChequeInfoDataTable();
            base.Tables.Add(this.tableDistributorViaChequeInfo);
            this.tableDistPerformanceBonus = new DistPerformanceBonusDataTable();
            base.Tables.Add(this.tableDistPerformanceBonus);
            this.tableBonusChkVoucher = new BonusChkVoucherDataTable();
            base.Tables.Add(this.tableBonusChkVoucher);
            this.tableProductVoucher = new ProductVoucherDataTable();
            base.Tables.Add(this.tableProductVoucher);
            this.tableQualPvNonPV = new QualPvNonPVDataTable();
            base.Tables.Add(this.tableQualPvNonPV);
            this.tableGroupArchiveSummary = new GroupArchiveSummaryDataTable();
            base.Tables.Add(this.tableGroupArchiveSummary);
            this.tableDistributorTFInfo = new DistributorTFInfoDataTable();
            base.Tables.Add(this.tableDistributorTFInfo);
            this.tableDeclaration = new DeclarationDataTable();
            base.Tables.Add(this.tableDeclaration);
            this.tableTotalBvAmount = new TotalBvAmountDataTable();
            base.Tables.Add(this.tableTotalBvAmount);
            this.tableDistributorGiftVoucherInfo = new DistributorGiftVoucherInfoDataTable();
            base.Tables.Add(this.tableDistributorGiftVoucherInfo);
            this.tableVoucher1 = new Voucher1DataTable();
            base.Tables.Add(this.tableVoucher1);
            this.tableVoucher2 = new Voucher2DataTable();
            base.Tables.Add(this.tableVoucher2);
            this.tableVoucher3 = new Voucher3DataTable();
            base.Tables.Add(this.tableVoucher3);
            this.tableVoucher4 = new Voucher4DataTable();
            base.Tables.Add(this.tableVoucher4);
            this.tableVoucher5 = new Voucher5DataTable();
            base.Tables.Add(this.tableVoucher5);
            this.tableVoucher6 = new Voucher6DataTable();
            base.Tables.Add(this.tableVoucher6);
            this.tableVoucher7 = new Voucher7DataTable();
            base.Tables.Add(this.tableVoucher7);
            this.tableVoucher8 = new Voucher8DataTable();
            base.Tables.Add(this.tableVoucher8);
            this.tableVoucher9 = new Voucher9DataTable();
            base.Tables.Add(this.tableVoucher9);
            this.tableVoucher10 = new Voucher10DataTable();
            base.Tables.Add(this.tableVoucher10);
            this.tableVoucher11 = new Voucher11DataTable();
            base.Tables.Add(this.tableVoucher11);
            this.tableVoucher12 = new Voucher12DataTable();
            base.Tables.Add(this.tableVoucher12);
            this.tableVoucher13 = new Voucher13DataTable();
            base.Tables.Add(this.tableVoucher13);
            this.tableVoucher14 = new Voucher14DataTable();
            base.Tables.Add(this.tableVoucher14);
            this.tableVoucher15 = new Voucher15DataTable();
            base.Tables.Add(this.tableVoucher15);
            this.tableVoucher16 = new Voucher16DataTable();
            base.Tables.Add(this.tableVoucher16);
            this.tableVoucher17 = new Voucher17DataTable();
            base.Tables.Add(this.tableVoucher17);
            this.tableVoucher18 = new Voucher18DataTable();
            base.Tables.Add(this.tableVoucher18);
            this.tableVoucher19 = new Voucher19DataTable();
            base.Tables.Add(this.tableVoucher19);
            this.tableVoucher20 = new Voucher20DataTable();
            base.Tables.Add(this.tableVoucher20);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePerformanceBonus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDownlineInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorGroupMonthly() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorChequeVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorPayOrderInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorGroupMonthly1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorPBAmountInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorCarInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorCurrentMnthCarInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorViaChequeInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistPerformanceBonus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBonusChkVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQualPvNonPV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGroupArchiveSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorTFInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeclaration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTotalBvAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorGiftVoucherInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher7() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher8() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher9() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher10() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher11() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher12() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher13() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher14() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher15() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher16() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher17() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher18() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher19() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoucher20() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BonusStatementDirectors ds = new BonusStatementDirectors();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DistributorInfoRowChangeEventHandler(object sender, DistributorInfoRowChangeEvent e);
        
        public delegate void PerformanceBonusRowChangeEventHandler(object sender, PerformanceBonusRowChangeEvent e);
        
        public delegate void DownlineInfoRowChangeEventHandler(object sender, DownlineInfoRowChangeEvent e);
        
        public delegate void DistributorGroupMonthlyRowChangeEventHandler(object sender, DistributorGroupMonthlyRowChangeEvent e);
        
        public delegate void DistributorChequeVoucherRowChangeEventHandler(object sender, DistributorChequeVoucherRowChangeEvent e);
        
        public delegate void DistributorPayOrderInfoRowChangeEventHandler(object sender, DistributorPayOrderInfoRowChangeEvent e);
        
        public delegate void DistributorTotalRowChangeEventHandler(object sender, DistributorTotalRowChangeEvent e);
        
        public delegate void DistributorGroupMonthly1RowChangeEventHandler(object sender, DistributorGroupMonthly1RowChangeEvent e);
        
        public delegate void DistributorPBAmountInfoRowChangeEventHandler(object sender, DistributorPBAmountInfoRowChangeEvent e);
        
        public delegate void DistributorCarInfoRowChangeEventHandler(object sender, DistributorCarInfoRowChangeEvent e);
        
        public delegate void DistributorCurrentMnthCarInfoRowChangeEventHandler(object sender, DistributorCurrentMnthCarInfoRowChangeEvent e);
        
        public delegate void DistributorViaChequeInfoRowChangeEventHandler(object sender, DistributorViaChequeInfoRowChangeEvent e);
        
        public delegate void DistPerformanceBonusRowChangeEventHandler(object sender, DistPerformanceBonusRowChangeEvent e);
        
        public delegate void BonusChkVoucherRowChangeEventHandler(object sender, BonusChkVoucherRowChangeEvent e);
        
        public delegate void ProductVoucherRowChangeEventHandler(object sender, ProductVoucherRowChangeEvent e);
        
        public delegate void QualPvNonPVRowChangeEventHandler(object sender, QualPvNonPVRowChangeEvent e);
        
        public delegate void GroupArchiveSummaryRowChangeEventHandler(object sender, GroupArchiveSummaryRowChangeEvent e);
        
        public delegate void DistributorTFInfoRowChangeEventHandler(object sender, DistributorTFInfoRowChangeEvent e);
        
        public delegate void DeclarationRowChangeEventHandler(object sender, DeclarationRowChangeEvent e);
        
        public delegate void TotalBvAmountRowChangeEventHandler(object sender, TotalBvAmountRowChangeEvent e);
        
        public delegate void DistributorGiftVoucherInfoRowChangeEventHandler(object sender, DistributorGiftVoucherInfoRowChangeEvent e);
        
        public delegate void Voucher1RowChangeEventHandler(object sender, Voucher1RowChangeEvent e);
        
        public delegate void Voucher2RowChangeEventHandler(object sender, Voucher2RowChangeEvent e);
        
        public delegate void Voucher3RowChangeEventHandler(object sender, Voucher3RowChangeEvent e);
        
        public delegate void Voucher4RowChangeEventHandler(object sender, Voucher4RowChangeEvent e);
        
        public delegate void Voucher5RowChangeEventHandler(object sender, Voucher5RowChangeEvent e);
        
        public delegate void Voucher6RowChangeEventHandler(object sender, Voucher6RowChangeEvent e);
        
        public delegate void Voucher7RowChangeEventHandler(object sender, Voucher7RowChangeEvent e);
        
        public delegate void Voucher8RowChangeEventHandler(object sender, Voucher8RowChangeEvent e);
        
        public delegate void Voucher9RowChangeEventHandler(object sender, Voucher9RowChangeEvent e);
        
        public delegate void Voucher10RowChangeEventHandler(object sender, Voucher10RowChangeEvent e);
        
        public delegate void Voucher11RowChangeEventHandler(object sender, Voucher11RowChangeEvent e);
        
        public delegate void Voucher12RowChangeEventHandler(object sender, Voucher12RowChangeEvent e);
        
        public delegate void Voucher13RowChangeEventHandler(object sender, Voucher13RowChangeEvent e);
        
        public delegate void Voucher14RowChangeEventHandler(object sender, Voucher14RowChangeEvent e);
        
        public delegate void Voucher15RowChangeEventHandler(object sender, Voucher15RowChangeEvent e);
        
        public delegate void Voucher16RowChangeEventHandler(object sender, Voucher16RowChangeEvent e);
        
        public delegate void Voucher17RowChangeEventHandler(object sender, Voucher17RowChangeEvent e);
        
        public delegate void Voucher18RowChangeEventHandler(object sender, Voucher18RowChangeEvent e);
        
        public delegate void Voucher19RowChangeEventHandler(object sender, Voucher19RowChangeEvent e);
        
        public delegate void Voucher20RowChangeEventHandler(object sender, Voucher20RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorInfoDataTable : global::System.Data.TypedTableBase<DistributorInfoRow> {
            
            private global::System.Data.DataColumn columnDistributorFirstName;
            
            private global::System.Data.DataColumn columnDistributorLastName;
            
            private global::System.Data.DataColumn columnDistributorPANNumber;
            
            private global::System.Data.DataColumn columnbusinessmonth;
            
            private global::System.Data.DataColumn columnUplineDistributorId;
            
            private global::System.Data.DataColumn columnDistributorAddress1;
            
            private global::System.Data.DataColumn columnDistributorAddress2;
            
            private global::System.Data.DataColumn columnDistributorAddress3;
            
            private global::System.Data.DataColumn columnDistributorRegistrationDate;
            
            private global::System.Data.DataColumn columnDirectorGroup;
            
            private global::System.Data.DataColumn columnlevelname;
            
            private global::System.Data.DataColumn columnHeaderAddress;
            
            private global::System.Data.DataColumn columnAddressText;
            
            private global::System.Data.DataColumn columndistributorid;
            
            private global::System.Data.DataColumn columnDistributorMobNumber;
            
            private global::System.Data.DataColumn columnDistributorFaxNumber;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnStateName;
            
            private global::System.Data.DataColumn columnLevelId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorInfoDataTable() {
                this.TableName = "DistributorInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorFirstNameColumn {
                get {
                    return this.columnDistributorFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorLastNameColumn {
                get {
                    return this.columnDistributorLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorPANNumberColumn {
                get {
                    return this.columnDistributorPANNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn businessmonthColumn {
                get {
                    return this.columnbusinessmonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UplineDistributorIdColumn {
                get {
                    return this.columnUplineDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorAddress1Column {
                get {
                    return this.columnDistributorAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorAddress2Column {
                get {
                    return this.columnDistributorAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorAddress3Column {
                get {
                    return this.columnDistributorAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorRegistrationDateColumn {
                get {
                    return this.columnDistributorRegistrationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectorGroupColumn {
                get {
                    return this.columnDirectorGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn levelnameColumn {
                get {
                    return this.columnlevelname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderAddressColumn {
                get {
                    return this.columnHeaderAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressTextColumn {
                get {
                    return this.columnAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn distributoridColumn {
                get {
                    return this.columndistributorid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorMobNumberColumn {
                get {
                    return this.columnDistributorMobNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorFaxNumberColumn {
                get {
                    return this.columnDistributorFaxNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateNameColumn {
                get {
                    return this.columnStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LevelIdColumn {
                get {
                    return this.columnLevelId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorInfoRow this[int index] {
                get {
                    return ((DistributorInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorInfoRowChangeEventHandler DistributorInfoRowChanging;
            
            public event DistributorInfoRowChangeEventHandler DistributorInfoRowChanged;
            
            public event DistributorInfoRowChangeEventHandler DistributorInfoRowDeleting;
            
            public event DistributorInfoRowChangeEventHandler DistributorInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorInfoRow(DistributorInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorInfoRow AddDistributorInfoRow(
                        string DistributorFirstName, 
                        string DistributorLastName, 
                        string DistributorPANNumber, 
                        string businessmonth, 
                        string UplineDistributorId, 
                        string DistributorAddress1, 
                        string DistributorAddress2, 
                        string DistributorAddress3, 
                        string DistributorRegistrationDate, 
                        string DirectorGroup, 
                        string levelname, 
                        string HeaderAddress, 
                        string AddressText, 
                        string distributorid, 
                        string DistributorMobNumber, 
                        string DistributorFaxNumber, 
                        string CityName, 
                        string StateName, 
                        string LevelId) {
                DistributorInfoRow rowDistributorInfoRow = ((DistributorInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorFirstName,
                        DistributorLastName,
                        DistributorPANNumber,
                        businessmonth,
                        UplineDistributorId,
                        DistributorAddress1,
                        DistributorAddress2,
                        DistributorAddress3,
                        DistributorRegistrationDate,
                        DirectorGroup,
                        levelname,
                        HeaderAddress,
                        AddressText,
                        distributorid,
                        DistributorMobNumber,
                        DistributorFaxNumber,
                        CityName,
                        StateName,
                        LevelId};
                rowDistributorInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorInfoRow);
                return rowDistributorInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorInfoDataTable cln = ((DistributorInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorFirstName = base.Columns["DistributorFirstName"];
                this.columnDistributorLastName = base.Columns["DistributorLastName"];
                this.columnDistributorPANNumber = base.Columns["DistributorPANNumber"];
                this.columnbusinessmonth = base.Columns["businessmonth"];
                this.columnUplineDistributorId = base.Columns["UplineDistributorId"];
                this.columnDistributorAddress1 = base.Columns["DistributorAddress1"];
                this.columnDistributorAddress2 = base.Columns["DistributorAddress2"];
                this.columnDistributorAddress3 = base.Columns["DistributorAddress3"];
                this.columnDistributorRegistrationDate = base.Columns["DistributorRegistrationDate"];
                this.columnDirectorGroup = base.Columns["DirectorGroup"];
                this.columnlevelname = base.Columns["levelname"];
                this.columnHeaderAddress = base.Columns["HeaderAddress"];
                this.columnAddressText = base.Columns["AddressText"];
                this.columndistributorid = base.Columns["distributorid"];
                this.columnDistributorMobNumber = base.Columns["DistributorMobNumber"];
                this.columnDistributorFaxNumber = base.Columns["DistributorFaxNumber"];
                this.columnCityName = base.Columns["CityName"];
                this.columnStateName = base.Columns["StateName"];
                this.columnLevelId = base.Columns["LevelId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorFirstName = new global::System.Data.DataColumn("DistributorFirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorFirstName);
                this.columnDistributorLastName = new global::System.Data.DataColumn("DistributorLastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorLastName);
                this.columnDistributorPANNumber = new global::System.Data.DataColumn("DistributorPANNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorPANNumber);
                this.columnbusinessmonth = new global::System.Data.DataColumn("businessmonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbusinessmonth);
                this.columnUplineDistributorId = new global::System.Data.DataColumn("UplineDistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUplineDistributorId);
                this.columnDistributorAddress1 = new global::System.Data.DataColumn("DistributorAddress1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorAddress1);
                this.columnDistributorAddress2 = new global::System.Data.DataColumn("DistributorAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorAddress2);
                this.columnDistributorAddress3 = new global::System.Data.DataColumn("DistributorAddress3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorAddress3);
                this.columnDistributorRegistrationDate = new global::System.Data.DataColumn("DistributorRegistrationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorRegistrationDate);
                this.columnDirectorGroup = new global::System.Data.DataColumn("DirectorGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectorGroup);
                this.columnlevelname = new global::System.Data.DataColumn("levelname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlevelname);
                this.columnHeaderAddress = new global::System.Data.DataColumn("HeaderAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderAddress);
                this.columnAddressText = new global::System.Data.DataColumn("AddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressText);
                this.columndistributorid = new global::System.Data.DataColumn("distributorid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistributorid);
                this.columnDistributorMobNumber = new global::System.Data.DataColumn("DistributorMobNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorMobNumber);
                this.columnDistributorFaxNumber = new global::System.Data.DataColumn("DistributorFaxNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorFaxNumber);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnStateName = new global::System.Data.DataColumn("StateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateName);
                this.columnLevelId = new global::System.Data.DataColumn("LevelId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevelId);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorInfoRow NewDistributorInfoRow() {
                return ((DistributorInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorInfoRowChanged != null)) {
                    this.DistributorInfoRowChanged(this, new DistributorInfoRowChangeEvent(((DistributorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorInfoRowChanging != null)) {
                    this.DistributorInfoRowChanging(this, new DistributorInfoRowChangeEvent(((DistributorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorInfoRowDeleted != null)) {
                    this.DistributorInfoRowDeleted(this, new DistributorInfoRowChangeEvent(((DistributorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorInfoRowDeleting != null)) {
                    this.DistributorInfoRowDeleting(this, new DistributorInfoRowChangeEvent(((DistributorInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorInfoRow(DistributorInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PerformanceBonusDataTable : global::System.Data.TypedTableBase<PerformanceBonusRow> {
            
            private global::System.Data.DataColumn columnSelfPv;
            
            private global::System.Data.DataColumn columnSelfBv;
            
            private global::System.Data.DataColumn columnBonusPercent;
            
            private global::System.Data.DataColumn columnTotalPV;
            
            private global::System.Data.DataColumn columnTotalBV;
            
            private global::System.Data.DataColumn columnCUMPV;
            
            private global::System.Data.DataColumn columnCUMBV;
            
            private global::System.Data.DataColumn columnGroupPV;
            
            private global::System.Data.DataColumn columnGroupBV;
            
            private global::System.Data.DataColumn columnTotalinWords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PerformanceBonusDataTable() {
                this.TableName = "PerformanceBonus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PerformanceBonusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PerformanceBonusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfPvColumn {
                get {
                    return this.columnSelfPv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfBvColumn {
                get {
                    return this.columnSelfBv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusPercentColumn {
                get {
                    return this.columnBonusPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPVColumn {
                get {
                    return this.columnTotalPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBVColumn {
                get {
                    return this.columnTotalBV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUMPVColumn {
                get {
                    return this.columnCUMPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUMBVColumn {
                get {
                    return this.columnCUMBV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupPVColumn {
                get {
                    return this.columnGroupPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupBVColumn {
                get {
                    return this.columnGroupBV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalinWordsColumn {
                get {
                    return this.columnTotalinWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PerformanceBonusRow this[int index] {
                get {
                    return ((PerformanceBonusRow)(this.Rows[index]));
                }
            }
            
            public event PerformanceBonusRowChangeEventHandler PerformanceBonusRowChanging;
            
            public event PerformanceBonusRowChangeEventHandler PerformanceBonusRowChanged;
            
            public event PerformanceBonusRowChangeEventHandler PerformanceBonusRowDeleting;
            
            public event PerformanceBonusRowChangeEventHandler PerformanceBonusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPerformanceBonusRow(PerformanceBonusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PerformanceBonusRow AddPerformanceBonusRow(string SelfPv, string SelfBv, string BonusPercent, string TotalPV, string TotalBV, string CUMPV, string CUMBV, string GroupPV, string GroupBV, string TotalinWords) {
                PerformanceBonusRow rowPerformanceBonusRow = ((PerformanceBonusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelfPv,
                        SelfBv,
                        BonusPercent,
                        TotalPV,
                        TotalBV,
                        CUMPV,
                        CUMBV,
                        GroupPV,
                        GroupBV,
                        TotalinWords};
                rowPerformanceBonusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPerformanceBonusRow);
                return rowPerformanceBonusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PerformanceBonusDataTable cln = ((PerformanceBonusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PerformanceBonusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelfPv = base.Columns["SelfPv"];
                this.columnSelfBv = base.Columns["SelfBv"];
                this.columnBonusPercent = base.Columns["BonusPercent"];
                this.columnTotalPV = base.Columns["TotalPV"];
                this.columnTotalBV = base.Columns["TotalBV"];
                this.columnCUMPV = base.Columns["CUMPV"];
                this.columnCUMBV = base.Columns["CUMBV"];
                this.columnGroupPV = base.Columns["GroupPV"];
                this.columnGroupBV = base.Columns["GroupBV"];
                this.columnTotalinWords = base.Columns["TotalinWords"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelfPv = new global::System.Data.DataColumn("SelfPv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfPv);
                this.columnSelfBv = new global::System.Data.DataColumn("SelfBv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfBv);
                this.columnBonusPercent = new global::System.Data.DataColumn("BonusPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusPercent);
                this.columnTotalPV = new global::System.Data.DataColumn("TotalPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPV);
                this.columnTotalBV = new global::System.Data.DataColumn("TotalBV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBV);
                this.columnCUMPV = new global::System.Data.DataColumn("CUMPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUMPV);
                this.columnCUMBV = new global::System.Data.DataColumn("CUMBV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUMBV);
                this.columnGroupPV = new global::System.Data.DataColumn("GroupPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupPV);
                this.columnGroupBV = new global::System.Data.DataColumn("GroupBV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupBV);
                this.columnTotalinWords = new global::System.Data.DataColumn("TotalinWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalinWords);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PerformanceBonusRow NewPerformanceBonusRow() {
                return ((PerformanceBonusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PerformanceBonusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PerformanceBonusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PerformanceBonusRowChanged != null)) {
                    this.PerformanceBonusRowChanged(this, new PerformanceBonusRowChangeEvent(((PerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PerformanceBonusRowChanging != null)) {
                    this.PerformanceBonusRowChanging(this, new PerformanceBonusRowChangeEvent(((PerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PerformanceBonusRowDeleted != null)) {
                    this.PerformanceBonusRowDeleted(this, new PerformanceBonusRowChangeEvent(((PerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PerformanceBonusRowDeleting != null)) {
                    this.PerformanceBonusRowDeleting(this, new PerformanceBonusRowChangeEvent(((PerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePerformanceBonusRow(PerformanceBonusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PerformanceBonusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DownlineInfoDataTable : global::System.Data.TypedTableBase<DownlineInfoRow> {
            
            private global::System.Data.DataColumn columnDistributorFirstName;
            
            private global::System.Data.DataColumn columnDistributorLastName;
            
            private global::System.Data.DataColumn columnDistributorID;
            
            private global::System.Data.DataColumn columnPV;
            
            private global::System.Data.DataColumn columnBV;
            
            private global::System.Data.DataColumn columnBonusPercent;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DownlineInfoDataTable() {
                this.TableName = "DownlineInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DownlineInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DownlineInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorFirstNameColumn {
                get {
                    return this.columnDistributorFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorLastNameColumn {
                get {
                    return this.columnDistributorLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIDColumn {
                get {
                    return this.columnDistributorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PVColumn {
                get {
                    return this.columnPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BVColumn {
                get {
                    return this.columnBV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusPercentColumn {
                get {
                    return this.columnBonusPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DownlineInfoRow this[int index] {
                get {
                    return ((DownlineInfoRow)(this.Rows[index]));
                }
            }
            
            public event DownlineInfoRowChangeEventHandler DownlineInfoRowChanging;
            
            public event DownlineInfoRowChangeEventHandler DownlineInfoRowChanged;
            
            public event DownlineInfoRowChangeEventHandler DownlineInfoRowDeleting;
            
            public event DownlineInfoRowChangeEventHandler DownlineInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDownlineInfoRow(DownlineInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DownlineInfoRow AddDownlineInfoRow(string DistributorFirstName, string DistributorLastName, string DistributorID, string PV, string BV, string BonusPercent, string Amount) {
                DownlineInfoRow rowDownlineInfoRow = ((DownlineInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorFirstName,
                        DistributorLastName,
                        DistributorID,
                        PV,
                        BV,
                        BonusPercent,
                        Amount};
                rowDownlineInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDownlineInfoRow);
                return rowDownlineInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DownlineInfoDataTable cln = ((DownlineInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DownlineInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorFirstName = base.Columns["DistributorFirstName"];
                this.columnDistributorLastName = base.Columns["DistributorLastName"];
                this.columnDistributorID = base.Columns["DistributorID"];
                this.columnPV = base.Columns["PV"];
                this.columnBV = base.Columns["BV"];
                this.columnBonusPercent = base.Columns["BonusPercent"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorFirstName = new global::System.Data.DataColumn("DistributorFirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorFirstName);
                this.columnDistributorLastName = new global::System.Data.DataColumn("DistributorLastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorLastName);
                this.columnDistributorID = new global::System.Data.DataColumn("DistributorID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorID);
                this.columnPV = new global::System.Data.DataColumn("PV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPV);
                this.columnBV = new global::System.Data.DataColumn("BV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBV);
                this.columnBonusPercent = new global::System.Data.DataColumn("BonusPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusPercent);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DownlineInfoRow NewDownlineInfoRow() {
                return ((DownlineInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DownlineInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DownlineInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DownlineInfoRowChanged != null)) {
                    this.DownlineInfoRowChanged(this, new DownlineInfoRowChangeEvent(((DownlineInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DownlineInfoRowChanging != null)) {
                    this.DownlineInfoRowChanging(this, new DownlineInfoRowChangeEvent(((DownlineInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DownlineInfoRowDeleted != null)) {
                    this.DownlineInfoRowDeleted(this, new DownlineInfoRowChangeEvent(((DownlineInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DownlineInfoRowDeleting != null)) {
                    this.DownlineInfoRowDeleting(this, new DownlineInfoRowChangeEvent(((DownlineInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDownlineInfoRow(DownlineInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DownlineInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorGroupMonthlyDataTable : global::System.Data.TypedTableBase<DistributorGroupMonthlyRow> {
            
            private global::System.Data.DataColumn columnQualifiedDirect;
            
            private global::System.Data.DataColumn columnPoints;
            
            private global::System.Data.DataColumn columnPointValue;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnBusinessMonth;
            
            private global::System.Data.DataColumn columnTotalIncome;
            
            private global::System.Data.DataColumn columnTaxDeducted;
            
            private global::System.Data.DataColumn columnQualified;
            
            private global::System.Data.DataColumn columnBonusCheque;
            
            private global::System.Data.DataColumn columnBonusChequeinWords;
            
            private global::System.Data.DataColumn columnRow;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthlyDataTable() {
                this.TableName = "DistributorGroupMonthly";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorGroupMonthlyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorGroupMonthlyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualifiedDirectColumn {
                get {
                    return this.columnQualifiedDirect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointsColumn {
                get {
                    return this.columnPoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointValueColumn {
                get {
                    return this.columnPointValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessMonthColumn {
                get {
                    return this.columnBusinessMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalIncomeColumn {
                get {
                    return this.columnTotalIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDeductedColumn {
                get {
                    return this.columnTaxDeducted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualifiedColumn {
                get {
                    return this.columnQualified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusChequeColumn {
                get {
                    return this.columnBonusCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusChequeinWordsColumn {
                get {
                    return this.columnBonusChequeinWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowColumn {
                get {
                    return this.columnRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthlyRow this[int index] {
                get {
                    return ((DistributorGroupMonthlyRow)(this.Rows[index]));
                }
            }
            
            public event DistributorGroupMonthlyRowChangeEventHandler DistributorGroupMonthlyRowChanging;
            
            public event DistributorGroupMonthlyRowChangeEventHandler DistributorGroupMonthlyRowChanged;
            
            public event DistributorGroupMonthlyRowChangeEventHandler DistributorGroupMonthlyRowDeleting;
            
            public event DistributorGroupMonthlyRowChangeEventHandler DistributorGroupMonthlyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorGroupMonthlyRow(DistributorGroupMonthlyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthlyRow AddDistributorGroupMonthlyRow(string QualifiedDirect, string Points, string PointValue, string Amount, string BusinessMonth, string TotalIncome, string TaxDeducted, string Qualified, string BonusCheque, string BonusChequeinWords, string Row) {
                DistributorGroupMonthlyRow rowDistributorGroupMonthlyRow = ((DistributorGroupMonthlyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QualifiedDirect,
                        Points,
                        PointValue,
                        Amount,
                        BusinessMonth,
                        TotalIncome,
                        TaxDeducted,
                        Qualified,
                        BonusCheque,
                        BonusChequeinWords,
                        Row};
                rowDistributorGroupMonthlyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorGroupMonthlyRow);
                return rowDistributorGroupMonthlyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorGroupMonthlyDataTable cln = ((DistributorGroupMonthlyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorGroupMonthlyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnQualifiedDirect = base.Columns["QualifiedDirect"];
                this.columnPoints = base.Columns["Points"];
                this.columnPointValue = base.Columns["PointValue"];
                this.columnAmount = base.Columns["Amount"];
                this.columnBusinessMonth = base.Columns["BusinessMonth"];
                this.columnTotalIncome = base.Columns["TotalIncome"];
                this.columnTaxDeducted = base.Columns["TaxDeducted"];
                this.columnQualified = base.Columns["Qualified"];
                this.columnBonusCheque = base.Columns["BonusCheque"];
                this.columnBonusChequeinWords = base.Columns["BonusChequeinWords"];
                this.columnRow = base.Columns["Row"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnQualifiedDirect = new global::System.Data.DataColumn("QualifiedDirect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualifiedDirect);
                this.columnPoints = new global::System.Data.DataColumn("Points", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoints);
                this.columnPointValue = new global::System.Data.DataColumn("PointValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointValue);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnBusinessMonth = new global::System.Data.DataColumn("BusinessMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessMonth);
                this.columnTotalIncome = new global::System.Data.DataColumn("TotalIncome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalIncome);
                this.columnTaxDeducted = new global::System.Data.DataColumn("TaxDeducted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDeducted);
                this.columnQualified = new global::System.Data.DataColumn("Qualified", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualified);
                this.columnBonusCheque = new global::System.Data.DataColumn("BonusCheque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusCheque);
                this.columnBonusChequeinWords = new global::System.Data.DataColumn("BonusChequeinWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusChequeinWords);
                this.columnRow = new global::System.Data.DataColumn("Row", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthlyRow NewDistributorGroupMonthlyRow() {
                return ((DistributorGroupMonthlyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorGroupMonthlyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorGroupMonthlyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorGroupMonthlyRowChanged != null)) {
                    this.DistributorGroupMonthlyRowChanged(this, new DistributorGroupMonthlyRowChangeEvent(((DistributorGroupMonthlyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorGroupMonthlyRowChanging != null)) {
                    this.DistributorGroupMonthlyRowChanging(this, new DistributorGroupMonthlyRowChangeEvent(((DistributorGroupMonthlyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorGroupMonthlyRowDeleted != null)) {
                    this.DistributorGroupMonthlyRowDeleted(this, new DistributorGroupMonthlyRowChangeEvent(((DistributorGroupMonthlyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorGroupMonthlyRowDeleting != null)) {
                    this.DistributorGroupMonthlyRowDeleting(this, new DistributorGroupMonthlyRowChangeEvent(((DistributorGroupMonthlyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorGroupMonthlyRow(DistributorGroupMonthlyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorGroupMonthlyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorChequeVoucherDataTable : global::System.Data.TypedTableBase<DistributorChequeVoucherRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnExpiryDate;
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnAmountinWords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorChequeVoucherDataTable() {
                this.TableName = "DistributorChequeVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorChequeVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorChequeVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpiryDateColumn {
                get {
                    return this.columnExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountinWordsColumn {
                get {
                    return this.columnAmountinWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorChequeVoucherRow this[int index] {
                get {
                    return ((DistributorChequeVoucherRow)(this.Rows[index]));
                }
            }
            
            public event DistributorChequeVoucherRowChangeEventHandler DistributorChequeVoucherRowChanging;
            
            public event DistributorChequeVoucherRowChangeEventHandler DistributorChequeVoucherRowChanged;
            
            public event DistributorChequeVoucherRowChangeEventHandler DistributorChequeVoucherRowDeleting;
            
            public event DistributorChequeVoucherRowChangeEventHandler DistributorChequeVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorChequeVoucherRow(DistributorChequeVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorChequeVoucherRow AddDistributorChequeVoucherRow(string Name, string IssueDate, string Amount, string ExpiryDate, string DistributorId, string AmountinWords) {
                DistributorChequeVoucherRow rowDistributorChequeVoucherRow = ((DistributorChequeVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        IssueDate,
                        Amount,
                        ExpiryDate,
                        DistributorId,
                        AmountinWords};
                rowDistributorChequeVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorChequeVoucherRow);
                return rowDistributorChequeVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorChequeVoucherDataTable cln = ((DistributorChequeVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorChequeVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnExpiryDate = base.Columns["ExpiryDate"];
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnAmountinWords = base.Columns["AmountinWords"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnExpiryDate = new global::System.Data.DataColumn("ExpiryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiryDate);
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnAmountinWords = new global::System.Data.DataColumn("AmountinWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountinWords);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorChequeVoucherRow NewDistributorChequeVoucherRow() {
                return ((DistributorChequeVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorChequeVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorChequeVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorChequeVoucherRowChanged != null)) {
                    this.DistributorChequeVoucherRowChanged(this, new DistributorChequeVoucherRowChangeEvent(((DistributorChequeVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorChequeVoucherRowChanging != null)) {
                    this.DistributorChequeVoucherRowChanging(this, new DistributorChequeVoucherRowChangeEvent(((DistributorChequeVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorChequeVoucherRowDeleted != null)) {
                    this.DistributorChequeVoucherRowDeleted(this, new DistributorChequeVoucherRowChangeEvent(((DistributorChequeVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorChequeVoucherRowDeleting != null)) {
                    this.DistributorChequeVoucherRowDeleting(this, new DistributorChequeVoucherRowChangeEvent(((DistributorChequeVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorChequeVoucherRow(DistributorChequeVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorChequeVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorPayOrderInfoDataTable : global::System.Data.TypedTableBase<DistributorPayOrderInfoRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnExpiryDate;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnChequeNumber;
            
            private global::System.Data.DataColumn columnAmountinWords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPayOrderInfoDataTable() {
                this.TableName = "DistributorPayOrderInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorPayOrderInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorPayOrderInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpiryDateColumn {
                get {
                    return this.columnExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeNumberColumn {
                get {
                    return this.columnChequeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountinWordsColumn {
                get {
                    return this.columnAmountinWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPayOrderInfoRow this[int index] {
                get {
                    return ((DistributorPayOrderInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorPayOrderInfoRowChangeEventHandler DistributorPayOrderInfoRowChanging;
            
            public event DistributorPayOrderInfoRowChangeEventHandler DistributorPayOrderInfoRowChanged;
            
            public event DistributorPayOrderInfoRowChangeEventHandler DistributorPayOrderInfoRowDeleting;
            
            public event DistributorPayOrderInfoRowChangeEventHandler DistributorPayOrderInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorPayOrderInfoRow(DistributorPayOrderInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPayOrderInfoRow AddDistributorPayOrderInfoRow(string Name, string Amount, string ExpiryDate, string IssueDate, string DistributorId, string ChequeNumber, string AmountinWords) {
                DistributorPayOrderInfoRow rowDistributorPayOrderInfoRow = ((DistributorPayOrderInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Amount,
                        ExpiryDate,
                        IssueDate,
                        DistributorId,
                        ChequeNumber,
                        AmountinWords};
                rowDistributorPayOrderInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorPayOrderInfoRow);
                return rowDistributorPayOrderInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorPayOrderInfoDataTable cln = ((DistributorPayOrderInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorPayOrderInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnAmount = base.Columns["Amount"];
                this.columnExpiryDate = base.Columns["ExpiryDate"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnChequeNumber = base.Columns["ChequeNumber"];
                this.columnAmountinWords = base.Columns["AmountinWords"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnExpiryDate = new global::System.Data.DataColumn("ExpiryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiryDate);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnChequeNumber = new global::System.Data.DataColumn("ChequeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNumber);
                this.columnAmountinWords = new global::System.Data.DataColumn("AmountinWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountinWords);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPayOrderInfoRow NewDistributorPayOrderInfoRow() {
                return ((DistributorPayOrderInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorPayOrderInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorPayOrderInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorPayOrderInfoRowChanged != null)) {
                    this.DistributorPayOrderInfoRowChanged(this, new DistributorPayOrderInfoRowChangeEvent(((DistributorPayOrderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorPayOrderInfoRowChanging != null)) {
                    this.DistributorPayOrderInfoRowChanging(this, new DistributorPayOrderInfoRowChangeEvent(((DistributorPayOrderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorPayOrderInfoRowDeleted != null)) {
                    this.DistributorPayOrderInfoRowDeleted(this, new DistributorPayOrderInfoRowChangeEvent(((DistributorPayOrderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorPayOrderInfoRowDeleting != null)) {
                    this.DistributorPayOrderInfoRowDeleting(this, new DistributorPayOrderInfoRowChangeEvent(((DistributorPayOrderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorPayOrderInfoRow(DistributorPayOrderInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorPayOrderInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorTotalDataTable : global::System.Data.TypedTableBase<DistributorTotalRow> {
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnTDSAmount;
            
            private global::System.Data.DataColumn columnBalanceUnpaid;
            
            private global::System.Data.DataColumn columnTotalIncome;
            
            private global::System.Data.DataColumn columnBonusAmountWord;
            
            private global::System.Data.DataColumn columnRsAppendWithFig;
            
            private global::System.Data.DataColumn columnTDSPercent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTotalDataTable() {
                this.TableName = "DistributorTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSAmountColumn {
                get {
                    return this.columnTDSAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceUnpaidColumn {
                get {
                    return this.columnBalanceUnpaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalIncomeColumn {
                get {
                    return this.columnTotalIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusAmountWordColumn {
                get {
                    return this.columnBonusAmountWord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RsAppendWithFigColumn {
                get {
                    return this.columnRsAppendWithFig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSPercentColumn {
                get {
                    return this.columnTDSPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTotalRow this[int index] {
                get {
                    return ((DistributorTotalRow)(this.Rows[index]));
                }
            }
            
            public event DistributorTotalRowChangeEventHandler DistributorTotalRowChanging;
            
            public event DistributorTotalRowChangeEventHandler DistributorTotalRowChanged;
            
            public event DistributorTotalRowChangeEventHandler DistributorTotalRowDeleting;
            
            public event DistributorTotalRowChangeEventHandler DistributorTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorTotalRow(DistributorTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTotalRow AddDistributorTotalRow(string Amount, string TDSAmount, string BalanceUnpaid, string TotalIncome, string BonusAmountWord, string RsAppendWithFig, string TDSPercent) {
                DistributorTotalRow rowDistributorTotalRow = ((DistributorTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Amount,
                        TDSAmount,
                        BalanceUnpaid,
                        TotalIncome,
                        BonusAmountWord,
                        RsAppendWithFig,
                        TDSPercent};
                rowDistributorTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorTotalRow);
                return rowDistributorTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorTotalDataTable cln = ((DistributorTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAmount = base.Columns["Amount"];
                this.columnTDSAmount = base.Columns["TDSAmount"];
                this.columnBalanceUnpaid = base.Columns["BalanceUnpaid"];
                this.columnTotalIncome = base.Columns["TotalIncome"];
                this.columnBonusAmountWord = base.Columns["BonusAmountWord"];
                this.columnRsAppendWithFig = base.Columns["RsAppendWithFig"];
                this.columnTDSPercent = base.Columns["TDSPercent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTDSAmount = new global::System.Data.DataColumn("TDSAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSAmount);
                this.columnBalanceUnpaid = new global::System.Data.DataColumn("BalanceUnpaid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceUnpaid);
                this.columnTotalIncome = new global::System.Data.DataColumn("TotalIncome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalIncome);
                this.columnBonusAmountWord = new global::System.Data.DataColumn("BonusAmountWord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusAmountWord);
                this.columnRsAppendWithFig = new global::System.Data.DataColumn("RsAppendWithFig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRsAppendWithFig);
                this.columnTDSPercent = new global::System.Data.DataColumn("TDSPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSPercent);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTotalRow NewDistributorTotalRow() {
                return ((DistributorTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorTotalRowChanged != null)) {
                    this.DistributorTotalRowChanged(this, new DistributorTotalRowChangeEvent(((DistributorTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorTotalRowChanging != null)) {
                    this.DistributorTotalRowChanging(this, new DistributorTotalRowChangeEvent(((DistributorTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorTotalRowDeleted != null)) {
                    this.DistributorTotalRowDeleted(this, new DistributorTotalRowChangeEvent(((DistributorTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorTotalRowDeleting != null)) {
                    this.DistributorTotalRowDeleting(this, new DistributorTotalRowChangeEvent(((DistributorTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorTotalRow(DistributorTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorGroupMonthly1DataTable : global::System.Data.TypedTableBase<DistributorGroupMonthly1Row> {
            
            private global::System.Data.DataColumn columnbusinessmonth;
            
            private global::System.Data.DataColumn columnIncome;
            
            private global::System.Data.DataColumn columnTaxDeducted;
            
            private global::System.Data.DataColumn columnTotalPV;
            
            private global::System.Data.DataColumn columnExclPV;
            
            private global::System.Data.DataColumn columnNonQualifiedPV;
            
            private global::System.Data.DataColumn columnQualifiedDirect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthly1DataTable() {
                this.TableName = "DistributorGroupMonthly1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorGroupMonthly1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorGroupMonthly1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn businessmonthColumn {
                get {
                    return this.columnbusinessmonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncomeColumn {
                get {
                    return this.columnIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDeductedColumn {
                get {
                    return this.columnTaxDeducted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPVColumn {
                get {
                    return this.columnTotalPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExclPVColumn {
                get {
                    return this.columnExclPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonQualifiedPVColumn {
                get {
                    return this.columnNonQualifiedPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualifiedDirectColumn {
                get {
                    return this.columnQualifiedDirect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthly1Row this[int index] {
                get {
                    return ((DistributorGroupMonthly1Row)(this.Rows[index]));
                }
            }
            
            public event DistributorGroupMonthly1RowChangeEventHandler DistributorGroupMonthly1RowChanging;
            
            public event DistributorGroupMonthly1RowChangeEventHandler DistributorGroupMonthly1RowChanged;
            
            public event DistributorGroupMonthly1RowChangeEventHandler DistributorGroupMonthly1RowDeleting;
            
            public event DistributorGroupMonthly1RowChangeEventHandler DistributorGroupMonthly1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorGroupMonthly1Row(DistributorGroupMonthly1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthly1Row AddDistributorGroupMonthly1Row(string businessmonth, string Income, string TaxDeducted, string TotalPV, string ExclPV, string NonQualifiedPV, string QualifiedDirect) {
                DistributorGroupMonthly1Row rowDistributorGroupMonthly1Row = ((DistributorGroupMonthly1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        businessmonth,
                        Income,
                        TaxDeducted,
                        TotalPV,
                        ExclPV,
                        NonQualifiedPV,
                        QualifiedDirect};
                rowDistributorGroupMonthly1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorGroupMonthly1Row);
                return rowDistributorGroupMonthly1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorGroupMonthly1DataTable cln = ((DistributorGroupMonthly1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorGroupMonthly1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnbusinessmonth = base.Columns["businessmonth"];
                this.columnIncome = base.Columns["Income"];
                this.columnTaxDeducted = base.Columns["TaxDeducted"];
                this.columnTotalPV = base.Columns["TotalPV"];
                this.columnExclPV = base.Columns["ExclPV"];
                this.columnNonQualifiedPV = base.Columns["NonQualifiedPV"];
                this.columnQualifiedDirect = base.Columns["QualifiedDirect"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnbusinessmonth = new global::System.Data.DataColumn("businessmonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbusinessmonth);
                this.columnIncome = new global::System.Data.DataColumn("Income", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncome);
                this.columnTaxDeducted = new global::System.Data.DataColumn("TaxDeducted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDeducted);
                this.columnTotalPV = new global::System.Data.DataColumn("TotalPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPV);
                this.columnExclPV = new global::System.Data.DataColumn("ExclPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExclPV);
                this.columnNonQualifiedPV = new global::System.Data.DataColumn("NonQualifiedPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonQualifiedPV);
                this.columnQualifiedDirect = new global::System.Data.DataColumn("QualifiedDirect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualifiedDirect);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthly1Row NewDistributorGroupMonthly1Row() {
                return ((DistributorGroupMonthly1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorGroupMonthly1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorGroupMonthly1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorGroupMonthly1RowChanged != null)) {
                    this.DistributorGroupMonthly1RowChanged(this, new DistributorGroupMonthly1RowChangeEvent(((DistributorGroupMonthly1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorGroupMonthly1RowChanging != null)) {
                    this.DistributorGroupMonthly1RowChanging(this, new DistributorGroupMonthly1RowChangeEvent(((DistributorGroupMonthly1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorGroupMonthly1RowDeleted != null)) {
                    this.DistributorGroupMonthly1RowDeleted(this, new DistributorGroupMonthly1RowChangeEvent(((DistributorGroupMonthly1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorGroupMonthly1RowDeleting != null)) {
                    this.DistributorGroupMonthly1RowDeleting(this, new DistributorGroupMonthly1RowChangeEvent(((DistributorGroupMonthly1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorGroupMonthly1Row(DistributorGroupMonthly1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorGroupMonthly1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorPBAmountInfoDataTable : global::System.Data.TypedTableBase<DistributorPBAmountInfoRow> {
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPBAmountInfoDataTable() {
                this.TableName = "DistributorPBAmountInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorPBAmountInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorPBAmountInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPBAmountInfoRow this[int index] {
                get {
                    return ((DistributorPBAmountInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorPBAmountInfoRowChangeEventHandler DistributorPBAmountInfoRowChanging;
            
            public event DistributorPBAmountInfoRowChangeEventHandler DistributorPBAmountInfoRowChanged;
            
            public event DistributorPBAmountInfoRowChangeEventHandler DistributorPBAmountInfoRowDeleting;
            
            public event DistributorPBAmountInfoRowChangeEventHandler DistributorPBAmountInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorPBAmountInfoRow(DistributorPBAmountInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPBAmountInfoRow AddDistributorPBAmountInfoRow(string DistributorId, string Amount) {
                DistributorPBAmountInfoRow rowDistributorPBAmountInfoRow = ((DistributorPBAmountInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorId,
                        Amount};
                rowDistributorPBAmountInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorPBAmountInfoRow);
                return rowDistributorPBAmountInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorPBAmountInfoDataTable cln = ((DistributorPBAmountInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorPBAmountInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPBAmountInfoRow NewDistributorPBAmountInfoRow() {
                return ((DistributorPBAmountInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorPBAmountInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorPBAmountInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorPBAmountInfoRowChanged != null)) {
                    this.DistributorPBAmountInfoRowChanged(this, new DistributorPBAmountInfoRowChangeEvent(((DistributorPBAmountInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorPBAmountInfoRowChanging != null)) {
                    this.DistributorPBAmountInfoRowChanging(this, new DistributorPBAmountInfoRowChangeEvent(((DistributorPBAmountInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorPBAmountInfoRowDeleted != null)) {
                    this.DistributorPBAmountInfoRowDeleted(this, new DistributorPBAmountInfoRowChangeEvent(((DistributorPBAmountInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorPBAmountInfoRowDeleting != null)) {
                    this.DistributorPBAmountInfoRowDeleting(this, new DistributorPBAmountInfoRowChangeEvent(((DistributorPBAmountInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorPBAmountInfoRow(DistributorPBAmountInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorPBAmountInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorCarInfoDataTable : global::System.Data.TypedTableBase<DistributorCarInfoRow> {
            
            private global::System.Data.DataColumn columnCumulativeCarFund;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnTotalPayable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarInfoDataTable() {
                this.TableName = "DistributorCarInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorCarInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorCarInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulativeCarFundColumn {
                get {
                    return this.columnCumulativeCarFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPayableColumn {
                get {
                    return this.columnTotalPayable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarInfoRow this[int index] {
                get {
                    return ((DistributorCarInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorCarInfoRowChangeEventHandler DistributorCarInfoRowChanging;
            
            public event DistributorCarInfoRowChangeEventHandler DistributorCarInfoRowChanged;
            
            public event DistributorCarInfoRowChangeEventHandler DistributorCarInfoRowDeleting;
            
            public event DistributorCarInfoRowChangeEventHandler DistributorCarInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorCarInfoRow(DistributorCarInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarInfoRow AddDistributorCarInfoRow(string CumulativeCarFund, string PaidAmount, string TotalPayable) {
                DistributorCarInfoRow rowDistributorCarInfoRow = ((DistributorCarInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CumulativeCarFund,
                        PaidAmount,
                        TotalPayable};
                rowDistributorCarInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorCarInfoRow);
                return rowDistributorCarInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorCarInfoDataTable cln = ((DistributorCarInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorCarInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCumulativeCarFund = base.Columns["CumulativeCarFund"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnTotalPayable = base.Columns["TotalPayable"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCumulativeCarFund = new global::System.Data.DataColumn("CumulativeCarFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulativeCarFund);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnTotalPayable = new global::System.Data.DataColumn("TotalPayable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayable);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarInfoRow NewDistributorCarInfoRow() {
                return ((DistributorCarInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorCarInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorCarInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorCarInfoRowChanged != null)) {
                    this.DistributorCarInfoRowChanged(this, new DistributorCarInfoRowChangeEvent(((DistributorCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorCarInfoRowChanging != null)) {
                    this.DistributorCarInfoRowChanging(this, new DistributorCarInfoRowChangeEvent(((DistributorCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorCarInfoRowDeleted != null)) {
                    this.DistributorCarInfoRowDeleted(this, new DistributorCarInfoRowChangeEvent(((DistributorCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorCarInfoRowDeleting != null)) {
                    this.DistributorCarInfoRowDeleting(this, new DistributorCarInfoRowChangeEvent(((DistributorCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorCarInfoRow(DistributorCarInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorCarInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorCurrentMnthCarInfoDataTable : global::System.Data.TypedTableBase<DistributorCurrentMnthCarInfoRow> {
            
            private global::System.Data.DataColumn columnCurrentCarBonus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCurrentMnthCarInfoDataTable() {
                this.TableName = "DistributorCurrentMnthCarInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorCurrentMnthCarInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorCurrentMnthCarInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentCarBonusColumn {
                get {
                    return this.columnCurrentCarBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCurrentMnthCarInfoRow this[int index] {
                get {
                    return ((DistributorCurrentMnthCarInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorCurrentMnthCarInfoRowChangeEventHandler DistributorCurrentMnthCarInfoRowChanging;
            
            public event DistributorCurrentMnthCarInfoRowChangeEventHandler DistributorCurrentMnthCarInfoRowChanged;
            
            public event DistributorCurrentMnthCarInfoRowChangeEventHandler DistributorCurrentMnthCarInfoRowDeleting;
            
            public event DistributorCurrentMnthCarInfoRowChangeEventHandler DistributorCurrentMnthCarInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorCurrentMnthCarInfoRow(DistributorCurrentMnthCarInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCurrentMnthCarInfoRow AddDistributorCurrentMnthCarInfoRow(string CurrentCarBonus) {
                DistributorCurrentMnthCarInfoRow rowDistributorCurrentMnthCarInfoRow = ((DistributorCurrentMnthCarInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CurrentCarBonus};
                rowDistributorCurrentMnthCarInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorCurrentMnthCarInfoRow);
                return rowDistributorCurrentMnthCarInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorCurrentMnthCarInfoDataTable cln = ((DistributorCurrentMnthCarInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorCurrentMnthCarInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCurrentCarBonus = base.Columns["CurrentCarBonus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCurrentCarBonus = new global::System.Data.DataColumn("CurrentCarBonus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentCarBonus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCurrentMnthCarInfoRow NewDistributorCurrentMnthCarInfoRow() {
                return ((DistributorCurrentMnthCarInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorCurrentMnthCarInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorCurrentMnthCarInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorCurrentMnthCarInfoRowChanged != null)) {
                    this.DistributorCurrentMnthCarInfoRowChanged(this, new DistributorCurrentMnthCarInfoRowChangeEvent(((DistributorCurrentMnthCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorCurrentMnthCarInfoRowChanging != null)) {
                    this.DistributorCurrentMnthCarInfoRowChanging(this, new DistributorCurrentMnthCarInfoRowChangeEvent(((DistributorCurrentMnthCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorCurrentMnthCarInfoRowDeleted != null)) {
                    this.DistributorCurrentMnthCarInfoRowDeleted(this, new DistributorCurrentMnthCarInfoRowChangeEvent(((DistributorCurrentMnthCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorCurrentMnthCarInfoRowDeleting != null)) {
                    this.DistributorCurrentMnthCarInfoRowDeleting(this, new DistributorCurrentMnthCarInfoRowChangeEvent(((DistributorCurrentMnthCarInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorCurrentMnthCarInfoRow(DistributorCurrentMnthCarInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorCurrentMnthCarInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorViaChequeInfoDataTable : global::System.Data.TypedTableBase<DistributorViaChequeInfoRow> {
            
            private global::System.Data.DataColumn columnViaCheque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorViaChequeInfoDataTable() {
                this.TableName = "DistributorViaChequeInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorViaChequeInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorViaChequeInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ViaChequeColumn {
                get {
                    return this.columnViaCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorViaChequeInfoRow this[int index] {
                get {
                    return ((DistributorViaChequeInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorViaChequeInfoRowChangeEventHandler DistributorViaChequeInfoRowChanging;
            
            public event DistributorViaChequeInfoRowChangeEventHandler DistributorViaChequeInfoRowChanged;
            
            public event DistributorViaChequeInfoRowChangeEventHandler DistributorViaChequeInfoRowDeleting;
            
            public event DistributorViaChequeInfoRowChangeEventHandler DistributorViaChequeInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorViaChequeInfoRow(DistributorViaChequeInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorViaChequeInfoRow AddDistributorViaChequeInfoRow(string ViaCheque) {
                DistributorViaChequeInfoRow rowDistributorViaChequeInfoRow = ((DistributorViaChequeInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ViaCheque};
                rowDistributorViaChequeInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorViaChequeInfoRow);
                return rowDistributorViaChequeInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorViaChequeInfoDataTable cln = ((DistributorViaChequeInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorViaChequeInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnViaCheque = base.Columns["ViaCheque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnViaCheque = new global::System.Data.DataColumn("ViaCheque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViaCheque);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorViaChequeInfoRow NewDistributorViaChequeInfoRow() {
                return ((DistributorViaChequeInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorViaChequeInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorViaChequeInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorViaChequeInfoRowChanged != null)) {
                    this.DistributorViaChequeInfoRowChanged(this, new DistributorViaChequeInfoRowChangeEvent(((DistributorViaChequeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorViaChequeInfoRowChanging != null)) {
                    this.DistributorViaChequeInfoRowChanging(this, new DistributorViaChequeInfoRowChangeEvent(((DistributorViaChequeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorViaChequeInfoRowDeleted != null)) {
                    this.DistributorViaChequeInfoRowDeleted(this, new DistributorViaChequeInfoRowChangeEvent(((DistributorViaChequeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorViaChequeInfoRowDeleting != null)) {
                    this.DistributorViaChequeInfoRowDeleting(this, new DistributorViaChequeInfoRowChangeEvent(((DistributorViaChequeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorViaChequeInfoRow(DistributorViaChequeInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorViaChequeInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistPerformanceBonusDataTable : global::System.Data.TypedTableBase<DistPerformanceBonusRow> {
            
            private global::System.Data.DataColumn columnPB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistPerformanceBonusDataTable() {
                this.TableName = "DistPerformanceBonus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistPerformanceBonusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistPerformanceBonusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBColumn {
                get {
                    return this.columnPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistPerformanceBonusRow this[int index] {
                get {
                    return ((DistPerformanceBonusRow)(this.Rows[index]));
                }
            }
            
            public event DistPerformanceBonusRowChangeEventHandler DistPerformanceBonusRowChanging;
            
            public event DistPerformanceBonusRowChangeEventHandler DistPerformanceBonusRowChanged;
            
            public event DistPerformanceBonusRowChangeEventHandler DistPerformanceBonusRowDeleting;
            
            public event DistPerformanceBonusRowChangeEventHandler DistPerformanceBonusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistPerformanceBonusRow(DistPerformanceBonusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistPerformanceBonusRow AddDistPerformanceBonusRow(string PB) {
                DistPerformanceBonusRow rowDistPerformanceBonusRow = ((DistPerformanceBonusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PB};
                rowDistPerformanceBonusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistPerformanceBonusRow);
                return rowDistPerformanceBonusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistPerformanceBonusDataTable cln = ((DistPerformanceBonusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistPerformanceBonusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPB = base.Columns["PB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPB = new global::System.Data.DataColumn("PB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistPerformanceBonusRow NewDistPerformanceBonusRow() {
                return ((DistPerformanceBonusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistPerformanceBonusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistPerformanceBonusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistPerformanceBonusRowChanged != null)) {
                    this.DistPerformanceBonusRowChanged(this, new DistPerformanceBonusRowChangeEvent(((DistPerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistPerformanceBonusRowChanging != null)) {
                    this.DistPerformanceBonusRowChanging(this, new DistPerformanceBonusRowChangeEvent(((DistPerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistPerformanceBonusRowDeleted != null)) {
                    this.DistPerformanceBonusRowDeleted(this, new DistPerformanceBonusRowChangeEvent(((DistPerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistPerformanceBonusRowDeleting != null)) {
                    this.DistPerformanceBonusRowDeleting(this, new DistPerformanceBonusRowChangeEvent(((DistPerformanceBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistPerformanceBonusRow(DistPerformanceBonusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistPerformanceBonusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BonusChkVoucherDataTable : global::System.Data.TypedTableBase<BonusChkVoucherRow> {
            
            private global::System.Data.DataColumn columnBonusChkVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BonusChkVoucherDataTable() {
                this.TableName = "BonusChkVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BonusChkVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BonusChkVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BonusChkVoucherColumn {
                get {
                    return this.columnBonusChkVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BonusChkVoucherRow this[int index] {
                get {
                    return ((BonusChkVoucherRow)(this.Rows[index]));
                }
            }
            
            public event BonusChkVoucherRowChangeEventHandler BonusChkVoucherRowChanging;
            
            public event BonusChkVoucherRowChangeEventHandler BonusChkVoucherRowChanged;
            
            public event BonusChkVoucherRowChangeEventHandler BonusChkVoucherRowDeleting;
            
            public event BonusChkVoucherRowChangeEventHandler BonusChkVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBonusChkVoucherRow(BonusChkVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BonusChkVoucherRow AddBonusChkVoucherRow(string BonusChkVoucher) {
                BonusChkVoucherRow rowBonusChkVoucherRow = ((BonusChkVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BonusChkVoucher};
                rowBonusChkVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBonusChkVoucherRow);
                return rowBonusChkVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BonusChkVoucherDataTable cln = ((BonusChkVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BonusChkVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBonusChkVoucher = base.Columns["BonusChkVoucher"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBonusChkVoucher = new global::System.Data.DataColumn("BonusChkVoucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusChkVoucher);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BonusChkVoucherRow NewBonusChkVoucherRow() {
                return ((BonusChkVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BonusChkVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BonusChkVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BonusChkVoucherRowChanged != null)) {
                    this.BonusChkVoucherRowChanged(this, new BonusChkVoucherRowChangeEvent(((BonusChkVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BonusChkVoucherRowChanging != null)) {
                    this.BonusChkVoucherRowChanging(this, new BonusChkVoucherRowChangeEvent(((BonusChkVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BonusChkVoucherRowDeleted != null)) {
                    this.BonusChkVoucherRowDeleted(this, new BonusChkVoucherRowChangeEvent(((BonusChkVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BonusChkVoucherRowDeleting != null)) {
                    this.BonusChkVoucherRowDeleting(this, new BonusChkVoucherRowChangeEvent(((BonusChkVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBonusChkVoucherRow(BonusChkVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BonusChkVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductVoucherDataTable : global::System.Data.TypedTableBase<ProductVoucherRow> {
            
            private global::System.Data.DataColumn columnProductVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductVoucherDataTable() {
                this.TableName = "ProductVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductVoucherColumn {
                get {
                    return this.columnProductVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductVoucherRow this[int index] {
                get {
                    return ((ProductVoucherRow)(this.Rows[index]));
                }
            }
            
            public event ProductVoucherRowChangeEventHandler ProductVoucherRowChanging;
            
            public event ProductVoucherRowChangeEventHandler ProductVoucherRowChanged;
            
            public event ProductVoucherRowChangeEventHandler ProductVoucherRowDeleting;
            
            public event ProductVoucherRowChangeEventHandler ProductVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductVoucherRow(ProductVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductVoucherRow AddProductVoucherRow(string ProductVoucher) {
                ProductVoucherRow rowProductVoucherRow = ((ProductVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductVoucher};
                rowProductVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductVoucherRow);
                return rowProductVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductVoucherDataTable cln = ((ProductVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProductVoucher = base.Columns["ProductVoucher"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProductVoucher = new global::System.Data.DataColumn("ProductVoucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductVoucher);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductVoucherRow NewProductVoucherRow() {
                return ((ProductVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductVoucherRowChanged != null)) {
                    this.ProductVoucherRowChanged(this, new ProductVoucherRowChangeEvent(((ProductVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductVoucherRowChanging != null)) {
                    this.ProductVoucherRowChanging(this, new ProductVoucherRowChangeEvent(((ProductVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductVoucherRowDeleted != null)) {
                    this.ProductVoucherRowDeleted(this, new ProductVoucherRowChangeEvent(((ProductVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductVoucherRowDeleting != null)) {
                    this.ProductVoucherRowDeleting(this, new ProductVoucherRowChangeEvent(((ProductVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductVoucherRow(ProductVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QualPvNonPVDataTable : global::System.Data.TypedTableBase<QualPvNonPVRow> {
            
            private global::System.Data.DataColumn columnTaxDeducted;
            
            private global::System.Data.DataColumn columnTotalPV;
            
            private global::System.Data.DataColumn columnExclPV;
            
            private global::System.Data.DataColumn columnNonQualifiedPV;
            
            private global::System.Data.DataColumn columnQualifiedDirect;
            
            private global::System.Data.DataColumn columnBusinessmonth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QualPvNonPVDataTable() {
                this.TableName = "QualPvNonPV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QualPvNonPVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QualPvNonPVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxDeductedColumn {
                get {
                    return this.columnTaxDeducted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPVColumn {
                get {
                    return this.columnTotalPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExclPVColumn {
                get {
                    return this.columnExclPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonQualifiedPVColumn {
                get {
                    return this.columnNonQualifiedPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualifiedDirectColumn {
                get {
                    return this.columnQualifiedDirect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessmonthColumn {
                get {
                    return this.columnBusinessmonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QualPvNonPVRow this[int index] {
                get {
                    return ((QualPvNonPVRow)(this.Rows[index]));
                }
            }
            
            public event QualPvNonPVRowChangeEventHandler QualPvNonPVRowChanging;
            
            public event QualPvNonPVRowChangeEventHandler QualPvNonPVRowChanged;
            
            public event QualPvNonPVRowChangeEventHandler QualPvNonPVRowDeleting;
            
            public event QualPvNonPVRowChangeEventHandler QualPvNonPVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQualPvNonPVRow(QualPvNonPVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QualPvNonPVRow AddQualPvNonPVRow(string TaxDeducted, string TotalPV, string ExclPV, string NonQualifiedPV, string QualifiedDirect, string Businessmonth) {
                QualPvNonPVRow rowQualPvNonPVRow = ((QualPvNonPVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TaxDeducted,
                        TotalPV,
                        ExclPV,
                        NonQualifiedPV,
                        QualifiedDirect,
                        Businessmonth};
                rowQualPvNonPVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQualPvNonPVRow);
                return rowQualPvNonPVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                QualPvNonPVDataTable cln = ((QualPvNonPVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QualPvNonPVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTaxDeducted = base.Columns["TaxDeducted"];
                this.columnTotalPV = base.Columns["TotalPV"];
                this.columnExclPV = base.Columns["ExclPV"];
                this.columnNonQualifiedPV = base.Columns["NonQualifiedPV"];
                this.columnQualifiedDirect = base.Columns["QualifiedDirect"];
                this.columnBusinessmonth = base.Columns["Businessmonth"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTaxDeducted = new global::System.Data.DataColumn("TaxDeducted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxDeducted);
                this.columnTotalPV = new global::System.Data.DataColumn("TotalPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPV);
                this.columnExclPV = new global::System.Data.DataColumn("ExclPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExclPV);
                this.columnNonQualifiedPV = new global::System.Data.DataColumn("NonQualifiedPV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonQualifiedPV);
                this.columnQualifiedDirect = new global::System.Data.DataColumn("QualifiedDirect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualifiedDirect);
                this.columnBusinessmonth = new global::System.Data.DataColumn("Businessmonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessmonth);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QualPvNonPVRow NewQualPvNonPVRow() {
                return ((QualPvNonPVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QualPvNonPVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(QualPvNonPVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QualPvNonPVRowChanged != null)) {
                    this.QualPvNonPVRowChanged(this, new QualPvNonPVRowChangeEvent(((QualPvNonPVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QualPvNonPVRowChanging != null)) {
                    this.QualPvNonPVRowChanging(this, new QualPvNonPVRowChangeEvent(((QualPvNonPVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QualPvNonPVRowDeleted != null)) {
                    this.QualPvNonPVRowDeleted(this, new QualPvNonPVRowChangeEvent(((QualPvNonPVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QualPvNonPVRowDeleting != null)) {
                    this.QualPvNonPVRowDeleting(this, new QualPvNonPVRowChangeEvent(((QualPvNonPVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQualPvNonPVRow(QualPvNonPVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QualPvNonPVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GroupArchiveSummaryDataTable : global::System.Data.TypedTableBase<GroupArchiveSummaryRow> {
            
            private global::System.Data.DataColumn columnGroupSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GroupArchiveSummaryDataTable() {
                this.TableName = "GroupArchiveSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GroupArchiveSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GroupArchiveSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupSummaryColumn {
                get {
                    return this.columnGroupSummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GroupArchiveSummaryRow this[int index] {
                get {
                    return ((GroupArchiveSummaryRow)(this.Rows[index]));
                }
            }
            
            public event GroupArchiveSummaryRowChangeEventHandler GroupArchiveSummaryRowChanging;
            
            public event GroupArchiveSummaryRowChangeEventHandler GroupArchiveSummaryRowChanged;
            
            public event GroupArchiveSummaryRowChangeEventHandler GroupArchiveSummaryRowDeleting;
            
            public event GroupArchiveSummaryRowChangeEventHandler GroupArchiveSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGroupArchiveSummaryRow(GroupArchiveSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GroupArchiveSummaryRow AddGroupArchiveSummaryRow(string GroupSummary) {
                GroupArchiveSummaryRow rowGroupArchiveSummaryRow = ((GroupArchiveSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GroupSummary};
                rowGroupArchiveSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGroupArchiveSummaryRow);
                return rowGroupArchiveSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GroupArchiveSummaryDataTable cln = ((GroupArchiveSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GroupArchiveSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGroupSummary = base.Columns["GroupSummary"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGroupSummary = new global::System.Data.DataColumn("GroupSummary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupSummary);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GroupArchiveSummaryRow NewGroupArchiveSummaryRow() {
                return ((GroupArchiveSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GroupArchiveSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GroupArchiveSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GroupArchiveSummaryRowChanged != null)) {
                    this.GroupArchiveSummaryRowChanged(this, new GroupArchiveSummaryRowChangeEvent(((GroupArchiveSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GroupArchiveSummaryRowChanging != null)) {
                    this.GroupArchiveSummaryRowChanging(this, new GroupArchiveSummaryRowChangeEvent(((GroupArchiveSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GroupArchiveSummaryRowDeleted != null)) {
                    this.GroupArchiveSummaryRowDeleted(this, new GroupArchiveSummaryRowChangeEvent(((GroupArchiveSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GroupArchiveSummaryRowDeleting != null)) {
                    this.GroupArchiveSummaryRowDeleting(this, new GroupArchiveSummaryRowChangeEvent(((GroupArchiveSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGroupArchiveSummaryRow(GroupArchiveSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GroupArchiveSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorTFInfoDataTable : global::System.Data.TypedTableBase<DistributorTFInfoRow> {
            
            private global::System.Data.DataColumn columnCumulativeTravelFund;
            
            private global::System.Data.DataColumn columnPaidTravelFund;
            
            private global::System.Data.DataColumn columnPayableTravelFund;
            
            private global::System.Data.DataColumn columnCurrentTravelFund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTFInfoDataTable() {
                this.TableName = "DistributorTFInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorTFInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorTFInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulativeTravelFundColumn {
                get {
                    return this.columnCumulativeTravelFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidTravelFundColumn {
                get {
                    return this.columnPaidTravelFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayableTravelFundColumn {
                get {
                    return this.columnPayableTravelFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentTravelFundColumn {
                get {
                    return this.columnCurrentTravelFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTFInfoRow this[int index] {
                get {
                    return ((DistributorTFInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorTFInfoRowChangeEventHandler DistributorTFInfoRowChanging;
            
            public event DistributorTFInfoRowChangeEventHandler DistributorTFInfoRowChanged;
            
            public event DistributorTFInfoRowChangeEventHandler DistributorTFInfoRowDeleting;
            
            public event DistributorTFInfoRowChangeEventHandler DistributorTFInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorTFInfoRow(DistributorTFInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTFInfoRow AddDistributorTFInfoRow(string CumulativeTravelFund, string PaidTravelFund, string PayableTravelFund, string CurrentTravelFund) {
                DistributorTFInfoRow rowDistributorTFInfoRow = ((DistributorTFInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CumulativeTravelFund,
                        PaidTravelFund,
                        PayableTravelFund,
                        CurrentTravelFund};
                rowDistributorTFInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorTFInfoRow);
                return rowDistributorTFInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorTFInfoDataTable cln = ((DistributorTFInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorTFInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCumulativeTravelFund = base.Columns["CumulativeTravelFund"];
                this.columnPaidTravelFund = base.Columns["PaidTravelFund"];
                this.columnPayableTravelFund = base.Columns["PayableTravelFund"];
                this.columnCurrentTravelFund = base.Columns["CurrentTravelFund"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCumulativeTravelFund = new global::System.Data.DataColumn("CumulativeTravelFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulativeTravelFund);
                this.columnPaidTravelFund = new global::System.Data.DataColumn("PaidTravelFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidTravelFund);
                this.columnPayableTravelFund = new global::System.Data.DataColumn("PayableTravelFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayableTravelFund);
                this.columnCurrentTravelFund = new global::System.Data.DataColumn("CurrentTravelFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTravelFund);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTFInfoRow NewDistributorTFInfoRow() {
                return ((DistributorTFInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorTFInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorTFInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorTFInfoRowChanged != null)) {
                    this.DistributorTFInfoRowChanged(this, new DistributorTFInfoRowChangeEvent(((DistributorTFInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorTFInfoRowChanging != null)) {
                    this.DistributorTFInfoRowChanging(this, new DistributorTFInfoRowChangeEvent(((DistributorTFInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorTFInfoRowDeleted != null)) {
                    this.DistributorTFInfoRowDeleted(this, new DistributorTFInfoRowChangeEvent(((DistributorTFInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorTFInfoRowDeleting != null)) {
                    this.DistributorTFInfoRowDeleting(this, new DistributorTFInfoRowChangeEvent(((DistributorTFInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorTFInfoRow(DistributorTFInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorTFInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeclarationDataTable : global::System.Data.TypedTableBase<DeclarationRow> {
            
            private global::System.Data.DataColumn columnDeclaration;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeclarationDataTable() {
                this.TableName = "Declaration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeclarationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeclarationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeclarationColumn {
                get {
                    return this.columnDeclaration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeclarationRow this[int index] {
                get {
                    return ((DeclarationRow)(this.Rows[index]));
                }
            }
            
            public event DeclarationRowChangeEventHandler DeclarationRowChanging;
            
            public event DeclarationRowChangeEventHandler DeclarationRowChanged;
            
            public event DeclarationRowChangeEventHandler DeclarationRowDeleting;
            
            public event DeclarationRowChangeEventHandler DeclarationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeclarationRow(DeclarationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeclarationRow AddDeclarationRow(string Declaration, string Quantity, string ItemName) {
                DeclarationRow rowDeclarationRow = ((DeclarationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Declaration,
                        Quantity,
                        ItemName};
                rowDeclarationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDeclarationRow);
                return rowDeclarationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DeclarationDataTable cln = ((DeclarationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DeclarationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeclaration = base.Columns["Declaration"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeclaration = new global::System.Data.DataColumn("Declaration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeclaration);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeclarationRow NewDeclarationRow() {
                return ((DeclarationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DeclarationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DeclarationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeclarationRowChanged != null)) {
                    this.DeclarationRowChanged(this, new DeclarationRowChangeEvent(((DeclarationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeclarationRowChanging != null)) {
                    this.DeclarationRowChanging(this, new DeclarationRowChangeEvent(((DeclarationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeclarationRowDeleted != null)) {
                    this.DeclarationRowDeleted(this, new DeclarationRowChangeEvent(((DeclarationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeclarationRowDeleting != null)) {
                    this.DeclarationRowDeleting(this, new DeclarationRowChangeEvent(((DeclarationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeclarationRow(DeclarationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeclarationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TotalBvAmountDataTable : global::System.Data.TypedTableBase<TotalBvAmountRow> {
            
            private global::System.Data.DataColumn columnTotalBvAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TotalBvAmountDataTable() {
                this.TableName = "TotalBvAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TotalBvAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TotalBvAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBvAmountColumn {
                get {
                    return this.columnTotalBvAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TotalBvAmountRow this[int index] {
                get {
                    return ((TotalBvAmountRow)(this.Rows[index]));
                }
            }
            
            public event TotalBvAmountRowChangeEventHandler TotalBvAmountRowChanging;
            
            public event TotalBvAmountRowChangeEventHandler TotalBvAmountRowChanged;
            
            public event TotalBvAmountRowChangeEventHandler TotalBvAmountRowDeleting;
            
            public event TotalBvAmountRowChangeEventHandler TotalBvAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTotalBvAmountRow(TotalBvAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TotalBvAmountRow AddTotalBvAmountRow(string TotalBvAmount) {
                TotalBvAmountRow rowTotalBvAmountRow = ((TotalBvAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalBvAmount};
                rowTotalBvAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTotalBvAmountRow);
                return rowTotalBvAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TotalBvAmountDataTable cln = ((TotalBvAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TotalBvAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTotalBvAmount = base.Columns["TotalBvAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTotalBvAmount = new global::System.Data.DataColumn("TotalBvAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBvAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TotalBvAmountRow NewTotalBvAmountRow() {
                return ((TotalBvAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TotalBvAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TotalBvAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TotalBvAmountRowChanged != null)) {
                    this.TotalBvAmountRowChanged(this, new TotalBvAmountRowChangeEvent(((TotalBvAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TotalBvAmountRowChanging != null)) {
                    this.TotalBvAmountRowChanging(this, new TotalBvAmountRowChangeEvent(((TotalBvAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TotalBvAmountRowDeleted != null)) {
                    this.TotalBvAmountRowDeleted(this, new TotalBvAmountRowChangeEvent(((TotalBvAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TotalBvAmountRowDeleting != null)) {
                    this.TotalBvAmountRowDeleting(this, new TotalBvAmountRowChangeEvent(((TotalBvAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTotalBvAmountRow(TotalBvAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TotalBvAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorGiftVoucherInfoDataTable : global::System.Data.TypedTableBase<DistributorGiftVoucherInfoRow> {
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnExpiryDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGiftVoucherInfoDataTable() {
                this.TableName = "DistributorGiftVoucherInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorGiftVoucherInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorGiftVoucherInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpiryDateColumn {
                get {
                    return this.columnExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGiftVoucherInfoRow this[int index] {
                get {
                    return ((DistributorGiftVoucherInfoRow)(this.Rows[index]));
                }
            }
            
            public event DistributorGiftVoucherInfoRowChangeEventHandler DistributorGiftVoucherInfoRowChanging;
            
            public event DistributorGiftVoucherInfoRowChangeEventHandler DistributorGiftVoucherInfoRowChanged;
            
            public event DistributorGiftVoucherInfoRowChangeEventHandler DistributorGiftVoucherInfoRowDeleting;
            
            public event DistributorGiftVoucherInfoRowChangeEventHandler DistributorGiftVoucherInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorGiftVoucherInfoRow(DistributorGiftVoucherInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGiftVoucherInfoRow AddDistributorGiftVoucherInfoRow(string VoucherNo, string DistributorId, string Name, string IssueDate, string ExpiryDate) {
                DistributorGiftVoucherInfoRow rowDistributorGiftVoucherInfoRow = ((DistributorGiftVoucherInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherNo,
                        DistributorId,
                        Name,
                        IssueDate,
                        ExpiryDate};
                rowDistributorGiftVoucherInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorGiftVoucherInfoRow);
                return rowDistributorGiftVoucherInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorGiftVoucherInfoDataTable cln = ((DistributorGiftVoucherInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorGiftVoucherInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnName = base.Columns["Name"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnExpiryDate = base.Columns["ExpiryDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnExpiryDate = new global::System.Data.DataColumn("ExpiryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiryDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGiftVoucherInfoRow NewDistributorGiftVoucherInfoRow() {
                return ((DistributorGiftVoucherInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorGiftVoucherInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorGiftVoucherInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorGiftVoucherInfoRowChanged != null)) {
                    this.DistributorGiftVoucherInfoRowChanged(this, new DistributorGiftVoucherInfoRowChangeEvent(((DistributorGiftVoucherInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorGiftVoucherInfoRowChanging != null)) {
                    this.DistributorGiftVoucherInfoRowChanging(this, new DistributorGiftVoucherInfoRowChangeEvent(((DistributorGiftVoucherInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorGiftVoucherInfoRowDeleted != null)) {
                    this.DistributorGiftVoucherInfoRowDeleted(this, new DistributorGiftVoucherInfoRowChangeEvent(((DistributorGiftVoucherInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorGiftVoucherInfoRowDeleting != null)) {
                    this.DistributorGiftVoucherInfoRowDeleting(this, new DistributorGiftVoucherInfoRowChangeEvent(((DistributorGiftVoucherInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorGiftVoucherInfoRow(DistributorGiftVoucherInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorGiftVoucherInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher1DataTable : global::System.Data.TypedTableBase<Voucher1Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher1DataTable() {
                this.TableName = "Voucher1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher1Row this[int index] {
                get {
                    return ((Voucher1Row)(this.Rows[index]));
                }
            }
            
            public event Voucher1RowChangeEventHandler Voucher1RowChanging;
            
            public event Voucher1RowChangeEventHandler Voucher1RowChanged;
            
            public event Voucher1RowChangeEventHandler Voucher1RowDeleting;
            
            public event Voucher1RowChangeEventHandler Voucher1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher1Row(Voucher1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher1Row AddVoucher1Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher1Row rowVoucher1Row = ((Voucher1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher1Row);
                return rowVoucher1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher1DataTable cln = ((Voucher1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher1Row NewVoucher1Row() {
                return ((Voucher1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher1RowChanged != null)) {
                    this.Voucher1RowChanged(this, new Voucher1RowChangeEvent(((Voucher1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher1RowChanging != null)) {
                    this.Voucher1RowChanging(this, new Voucher1RowChangeEvent(((Voucher1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher1RowDeleted != null)) {
                    this.Voucher1RowDeleted(this, new Voucher1RowChangeEvent(((Voucher1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher1RowDeleting != null)) {
                    this.Voucher1RowDeleting(this, new Voucher1RowChangeEvent(((Voucher1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher1Row(Voucher1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher2DataTable : global::System.Data.TypedTableBase<Voucher2Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher2DataTable() {
                this.TableName = "Voucher2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher2Row this[int index] {
                get {
                    return ((Voucher2Row)(this.Rows[index]));
                }
            }
            
            public event Voucher2RowChangeEventHandler Voucher2RowChanging;
            
            public event Voucher2RowChangeEventHandler Voucher2RowChanged;
            
            public event Voucher2RowChangeEventHandler Voucher2RowDeleting;
            
            public event Voucher2RowChangeEventHandler Voucher2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher2Row(Voucher2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher2Row AddVoucher2Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher2Row rowVoucher2Row = ((Voucher2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher2Row);
                return rowVoucher2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher2DataTable cln = ((Voucher2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher2Row NewVoucher2Row() {
                return ((Voucher2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher2RowChanged != null)) {
                    this.Voucher2RowChanged(this, new Voucher2RowChangeEvent(((Voucher2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher2RowChanging != null)) {
                    this.Voucher2RowChanging(this, new Voucher2RowChangeEvent(((Voucher2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher2RowDeleted != null)) {
                    this.Voucher2RowDeleted(this, new Voucher2RowChangeEvent(((Voucher2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher2RowDeleting != null)) {
                    this.Voucher2RowDeleting(this, new Voucher2RowChangeEvent(((Voucher2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher2Row(Voucher2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher3DataTable : global::System.Data.TypedTableBase<Voucher3Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher3DataTable() {
                this.TableName = "Voucher3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher3Row this[int index] {
                get {
                    return ((Voucher3Row)(this.Rows[index]));
                }
            }
            
            public event Voucher3RowChangeEventHandler Voucher3RowChanging;
            
            public event Voucher3RowChangeEventHandler Voucher3RowChanged;
            
            public event Voucher3RowChangeEventHandler Voucher3RowDeleting;
            
            public event Voucher3RowChangeEventHandler Voucher3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher3Row(Voucher3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher3Row AddVoucher3Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher3Row rowVoucher3Row = ((Voucher3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher3Row);
                return rowVoucher3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher3DataTable cln = ((Voucher3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher3Row NewVoucher3Row() {
                return ((Voucher3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher3RowChanged != null)) {
                    this.Voucher3RowChanged(this, new Voucher3RowChangeEvent(((Voucher3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher3RowChanging != null)) {
                    this.Voucher3RowChanging(this, new Voucher3RowChangeEvent(((Voucher3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher3RowDeleted != null)) {
                    this.Voucher3RowDeleted(this, new Voucher3RowChangeEvent(((Voucher3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher3RowDeleting != null)) {
                    this.Voucher3RowDeleting(this, new Voucher3RowChangeEvent(((Voucher3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher3Row(Voucher3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher4DataTable : global::System.Data.TypedTableBase<Voucher4Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher4DataTable() {
                this.TableName = "Voucher4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher4Row this[int index] {
                get {
                    return ((Voucher4Row)(this.Rows[index]));
                }
            }
            
            public event Voucher4RowChangeEventHandler Voucher4RowChanging;
            
            public event Voucher4RowChangeEventHandler Voucher4RowChanged;
            
            public event Voucher4RowChangeEventHandler Voucher4RowDeleting;
            
            public event Voucher4RowChangeEventHandler Voucher4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher4Row(Voucher4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher4Row AddVoucher4Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher4Row rowVoucher4Row = ((Voucher4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher4Row);
                return rowVoucher4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher4DataTable cln = ((Voucher4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher4Row NewVoucher4Row() {
                return ((Voucher4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher4RowChanged != null)) {
                    this.Voucher4RowChanged(this, new Voucher4RowChangeEvent(((Voucher4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher4RowChanging != null)) {
                    this.Voucher4RowChanging(this, new Voucher4RowChangeEvent(((Voucher4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher4RowDeleted != null)) {
                    this.Voucher4RowDeleted(this, new Voucher4RowChangeEvent(((Voucher4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher4RowDeleting != null)) {
                    this.Voucher4RowDeleting(this, new Voucher4RowChangeEvent(((Voucher4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher4Row(Voucher4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher5DataTable : global::System.Data.TypedTableBase<Voucher5Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher5DataTable() {
                this.TableName = "Voucher5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher5Row this[int index] {
                get {
                    return ((Voucher5Row)(this.Rows[index]));
                }
            }
            
            public event Voucher5RowChangeEventHandler Voucher5RowChanging;
            
            public event Voucher5RowChangeEventHandler Voucher5RowChanged;
            
            public event Voucher5RowChangeEventHandler Voucher5RowDeleting;
            
            public event Voucher5RowChangeEventHandler Voucher5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher5Row(Voucher5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher5Row AddVoucher5Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher5Row rowVoucher5Row = ((Voucher5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher5Row);
                return rowVoucher5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher5DataTable cln = ((Voucher5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher5Row NewVoucher5Row() {
                return ((Voucher5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher5RowChanged != null)) {
                    this.Voucher5RowChanged(this, new Voucher5RowChangeEvent(((Voucher5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher5RowChanging != null)) {
                    this.Voucher5RowChanging(this, new Voucher5RowChangeEvent(((Voucher5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher5RowDeleted != null)) {
                    this.Voucher5RowDeleted(this, new Voucher5RowChangeEvent(((Voucher5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher5RowDeleting != null)) {
                    this.Voucher5RowDeleting(this, new Voucher5RowChangeEvent(((Voucher5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher5Row(Voucher5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher6DataTable : global::System.Data.TypedTableBase<Voucher6Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher6DataTable() {
                this.TableName = "Voucher6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher6Row this[int index] {
                get {
                    return ((Voucher6Row)(this.Rows[index]));
                }
            }
            
            public event Voucher6RowChangeEventHandler Voucher6RowChanging;
            
            public event Voucher6RowChangeEventHandler Voucher6RowChanged;
            
            public event Voucher6RowChangeEventHandler Voucher6RowDeleting;
            
            public event Voucher6RowChangeEventHandler Voucher6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher6Row(Voucher6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher6Row AddVoucher6Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher6Row rowVoucher6Row = ((Voucher6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher6Row);
                return rowVoucher6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher6DataTable cln = ((Voucher6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher6Row NewVoucher6Row() {
                return ((Voucher6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher6RowChanged != null)) {
                    this.Voucher6RowChanged(this, new Voucher6RowChangeEvent(((Voucher6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher6RowChanging != null)) {
                    this.Voucher6RowChanging(this, new Voucher6RowChangeEvent(((Voucher6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher6RowDeleted != null)) {
                    this.Voucher6RowDeleted(this, new Voucher6RowChangeEvent(((Voucher6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher6RowDeleting != null)) {
                    this.Voucher6RowDeleting(this, new Voucher6RowChangeEvent(((Voucher6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher6Row(Voucher6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher7DataTable : global::System.Data.TypedTableBase<Voucher7Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher7DataTable() {
                this.TableName = "Voucher7";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher7DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher7DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher7Row this[int index] {
                get {
                    return ((Voucher7Row)(this.Rows[index]));
                }
            }
            
            public event Voucher7RowChangeEventHandler Voucher7RowChanging;
            
            public event Voucher7RowChangeEventHandler Voucher7RowChanged;
            
            public event Voucher7RowChangeEventHandler Voucher7RowDeleting;
            
            public event Voucher7RowChangeEventHandler Voucher7RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher7Row(Voucher7Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher7Row AddVoucher7Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher7Row rowVoucher7Row = ((Voucher7Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher7Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher7Row);
                return rowVoucher7Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher7DataTable cln = ((Voucher7DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher7DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher7Row NewVoucher7Row() {
                return ((Voucher7Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher7Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher7Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher7RowChanged != null)) {
                    this.Voucher7RowChanged(this, new Voucher7RowChangeEvent(((Voucher7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher7RowChanging != null)) {
                    this.Voucher7RowChanging(this, new Voucher7RowChangeEvent(((Voucher7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher7RowDeleted != null)) {
                    this.Voucher7RowDeleted(this, new Voucher7RowChangeEvent(((Voucher7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher7RowDeleting != null)) {
                    this.Voucher7RowDeleting(this, new Voucher7RowChangeEvent(((Voucher7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher7Row(Voucher7Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher7DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher8DataTable : global::System.Data.TypedTableBase<Voucher8Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher8DataTable() {
                this.TableName = "Voucher8";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher8DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher8DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher8Row this[int index] {
                get {
                    return ((Voucher8Row)(this.Rows[index]));
                }
            }
            
            public event Voucher8RowChangeEventHandler Voucher8RowChanging;
            
            public event Voucher8RowChangeEventHandler Voucher8RowChanged;
            
            public event Voucher8RowChangeEventHandler Voucher8RowDeleting;
            
            public event Voucher8RowChangeEventHandler Voucher8RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher8Row(Voucher8Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher8Row AddVoucher8Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher8Row rowVoucher8Row = ((Voucher8Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher8Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher8Row);
                return rowVoucher8Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher8DataTable cln = ((Voucher8DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher8DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher8Row NewVoucher8Row() {
                return ((Voucher8Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher8Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher8Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher8RowChanged != null)) {
                    this.Voucher8RowChanged(this, new Voucher8RowChangeEvent(((Voucher8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher8RowChanging != null)) {
                    this.Voucher8RowChanging(this, new Voucher8RowChangeEvent(((Voucher8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher8RowDeleted != null)) {
                    this.Voucher8RowDeleted(this, new Voucher8RowChangeEvent(((Voucher8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher8RowDeleting != null)) {
                    this.Voucher8RowDeleting(this, new Voucher8RowChangeEvent(((Voucher8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher8Row(Voucher8Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher8DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher9DataTable : global::System.Data.TypedTableBase<Voucher9Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher9DataTable() {
                this.TableName = "Voucher9";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher9DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher9DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher9Row this[int index] {
                get {
                    return ((Voucher9Row)(this.Rows[index]));
                }
            }
            
            public event Voucher9RowChangeEventHandler Voucher9RowChanging;
            
            public event Voucher9RowChangeEventHandler Voucher9RowChanged;
            
            public event Voucher9RowChangeEventHandler Voucher9RowDeleting;
            
            public event Voucher9RowChangeEventHandler Voucher9RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher9Row(Voucher9Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher9Row AddVoucher9Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher9Row rowVoucher9Row = ((Voucher9Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher9Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher9Row);
                return rowVoucher9Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher9DataTable cln = ((Voucher9DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher9DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher9Row NewVoucher9Row() {
                return ((Voucher9Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher9Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher9Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher9RowChanged != null)) {
                    this.Voucher9RowChanged(this, new Voucher9RowChangeEvent(((Voucher9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher9RowChanging != null)) {
                    this.Voucher9RowChanging(this, new Voucher9RowChangeEvent(((Voucher9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher9RowDeleted != null)) {
                    this.Voucher9RowDeleted(this, new Voucher9RowChangeEvent(((Voucher9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher9RowDeleting != null)) {
                    this.Voucher9RowDeleting(this, new Voucher9RowChangeEvent(((Voucher9Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher9Row(Voucher9Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher9DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher10DataTable : global::System.Data.TypedTableBase<Voucher10Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher10DataTable() {
                this.TableName = "Voucher10";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher10DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher10DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher10Row this[int index] {
                get {
                    return ((Voucher10Row)(this.Rows[index]));
                }
            }
            
            public event Voucher10RowChangeEventHandler Voucher10RowChanging;
            
            public event Voucher10RowChangeEventHandler Voucher10RowChanged;
            
            public event Voucher10RowChangeEventHandler Voucher10RowDeleting;
            
            public event Voucher10RowChangeEventHandler Voucher10RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher10Row(Voucher10Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher10Row AddVoucher10Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher10Row rowVoucher10Row = ((Voucher10Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher10Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher10Row);
                return rowVoucher10Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher10DataTable cln = ((Voucher10DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher10DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher10Row NewVoucher10Row() {
                return ((Voucher10Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher10Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher10Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher10RowChanged != null)) {
                    this.Voucher10RowChanged(this, new Voucher10RowChangeEvent(((Voucher10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher10RowChanging != null)) {
                    this.Voucher10RowChanging(this, new Voucher10RowChangeEvent(((Voucher10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher10RowDeleted != null)) {
                    this.Voucher10RowDeleted(this, new Voucher10RowChangeEvent(((Voucher10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher10RowDeleting != null)) {
                    this.Voucher10RowDeleting(this, new Voucher10RowChangeEvent(((Voucher10Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher10Row(Voucher10Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher10DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher11DataTable : global::System.Data.TypedTableBase<Voucher11Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher11DataTable() {
                this.TableName = "Voucher11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher11DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher11DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher11Row this[int index] {
                get {
                    return ((Voucher11Row)(this.Rows[index]));
                }
            }
            
            public event Voucher11RowChangeEventHandler Voucher11RowChanging;
            
            public event Voucher11RowChangeEventHandler Voucher11RowChanged;
            
            public event Voucher11RowChangeEventHandler Voucher11RowDeleting;
            
            public event Voucher11RowChangeEventHandler Voucher11RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher11Row(Voucher11Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher11Row AddVoucher11Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher11Row rowVoucher11Row = ((Voucher11Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher11Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher11Row);
                return rowVoucher11Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher11DataTable cln = ((Voucher11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher11DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher11Row NewVoucher11Row() {
                return ((Voucher11Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher11Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher11Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher11RowChanged != null)) {
                    this.Voucher11RowChanged(this, new Voucher11RowChangeEvent(((Voucher11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher11RowChanging != null)) {
                    this.Voucher11RowChanging(this, new Voucher11RowChangeEvent(((Voucher11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher11RowDeleted != null)) {
                    this.Voucher11RowDeleted(this, new Voucher11RowChangeEvent(((Voucher11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher11RowDeleting != null)) {
                    this.Voucher11RowDeleting(this, new Voucher11RowChangeEvent(((Voucher11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher11Row(Voucher11Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher12DataTable : global::System.Data.TypedTableBase<Voucher12Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher12DataTable() {
                this.TableName = "Voucher12";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher12DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher12DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher12Row this[int index] {
                get {
                    return ((Voucher12Row)(this.Rows[index]));
                }
            }
            
            public event Voucher12RowChangeEventHandler Voucher12RowChanging;
            
            public event Voucher12RowChangeEventHandler Voucher12RowChanged;
            
            public event Voucher12RowChangeEventHandler Voucher12RowDeleting;
            
            public event Voucher12RowChangeEventHandler Voucher12RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher12Row(Voucher12Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher12Row AddVoucher12Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher12Row rowVoucher12Row = ((Voucher12Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher12Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher12Row);
                return rowVoucher12Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher12DataTable cln = ((Voucher12DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher12DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher12Row NewVoucher12Row() {
                return ((Voucher12Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher12Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher12Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher12RowChanged != null)) {
                    this.Voucher12RowChanged(this, new Voucher12RowChangeEvent(((Voucher12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher12RowChanging != null)) {
                    this.Voucher12RowChanging(this, new Voucher12RowChangeEvent(((Voucher12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher12RowDeleted != null)) {
                    this.Voucher12RowDeleted(this, new Voucher12RowChangeEvent(((Voucher12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher12RowDeleting != null)) {
                    this.Voucher12RowDeleting(this, new Voucher12RowChangeEvent(((Voucher12Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher12Row(Voucher12Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher12DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher13DataTable : global::System.Data.TypedTableBase<Voucher13Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher13DataTable() {
                this.TableName = "Voucher13";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher13DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher13DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher13Row this[int index] {
                get {
                    return ((Voucher13Row)(this.Rows[index]));
                }
            }
            
            public event Voucher13RowChangeEventHandler Voucher13RowChanging;
            
            public event Voucher13RowChangeEventHandler Voucher13RowChanged;
            
            public event Voucher13RowChangeEventHandler Voucher13RowDeleting;
            
            public event Voucher13RowChangeEventHandler Voucher13RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher13Row(Voucher13Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher13Row AddVoucher13Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher13Row rowVoucher13Row = ((Voucher13Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher13Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher13Row);
                return rowVoucher13Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher13DataTable cln = ((Voucher13DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher13DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher13Row NewVoucher13Row() {
                return ((Voucher13Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher13Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher13Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher13RowChanged != null)) {
                    this.Voucher13RowChanged(this, new Voucher13RowChangeEvent(((Voucher13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher13RowChanging != null)) {
                    this.Voucher13RowChanging(this, new Voucher13RowChangeEvent(((Voucher13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher13RowDeleted != null)) {
                    this.Voucher13RowDeleted(this, new Voucher13RowChangeEvent(((Voucher13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher13RowDeleting != null)) {
                    this.Voucher13RowDeleting(this, new Voucher13RowChangeEvent(((Voucher13Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher13Row(Voucher13Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher13DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher14DataTable : global::System.Data.TypedTableBase<Voucher14Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher14DataTable() {
                this.TableName = "Voucher14";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher14DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher14DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher14Row this[int index] {
                get {
                    return ((Voucher14Row)(this.Rows[index]));
                }
            }
            
            public event Voucher14RowChangeEventHandler Voucher14RowChanging;
            
            public event Voucher14RowChangeEventHandler Voucher14RowChanged;
            
            public event Voucher14RowChangeEventHandler Voucher14RowDeleting;
            
            public event Voucher14RowChangeEventHandler Voucher14RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher14Row(Voucher14Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher14Row AddVoucher14Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher14Row rowVoucher14Row = ((Voucher14Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher14Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher14Row);
                return rowVoucher14Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher14DataTable cln = ((Voucher14DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher14DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher14Row NewVoucher14Row() {
                return ((Voucher14Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher14Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher14Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher14RowChanged != null)) {
                    this.Voucher14RowChanged(this, new Voucher14RowChangeEvent(((Voucher14Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher14RowChanging != null)) {
                    this.Voucher14RowChanging(this, new Voucher14RowChangeEvent(((Voucher14Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher14RowDeleted != null)) {
                    this.Voucher14RowDeleted(this, new Voucher14RowChangeEvent(((Voucher14Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher14RowDeleting != null)) {
                    this.Voucher14RowDeleting(this, new Voucher14RowChangeEvent(((Voucher14Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher14Row(Voucher14Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher14DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher15DataTable : global::System.Data.TypedTableBase<Voucher15Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher15DataTable() {
                this.TableName = "Voucher15";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher15DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher15DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher15Row this[int index] {
                get {
                    return ((Voucher15Row)(this.Rows[index]));
                }
            }
            
            public event Voucher15RowChangeEventHandler Voucher15RowChanging;
            
            public event Voucher15RowChangeEventHandler Voucher15RowChanged;
            
            public event Voucher15RowChangeEventHandler Voucher15RowDeleting;
            
            public event Voucher15RowChangeEventHandler Voucher15RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher15Row(Voucher15Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher15Row AddVoucher15Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher15Row rowVoucher15Row = ((Voucher15Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher15Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher15Row);
                return rowVoucher15Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher15DataTable cln = ((Voucher15DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher15DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher15Row NewVoucher15Row() {
                return ((Voucher15Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher15Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher15Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher15RowChanged != null)) {
                    this.Voucher15RowChanged(this, new Voucher15RowChangeEvent(((Voucher15Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher15RowChanging != null)) {
                    this.Voucher15RowChanging(this, new Voucher15RowChangeEvent(((Voucher15Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher15RowDeleted != null)) {
                    this.Voucher15RowDeleted(this, new Voucher15RowChangeEvent(((Voucher15Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher15RowDeleting != null)) {
                    this.Voucher15RowDeleting(this, new Voucher15RowChangeEvent(((Voucher15Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher15Row(Voucher15Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher15DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher16DataTable : global::System.Data.TypedTableBase<Voucher16Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher16DataTable() {
                this.TableName = "Voucher16";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher16DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher16DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher16Row this[int index] {
                get {
                    return ((Voucher16Row)(this.Rows[index]));
                }
            }
            
            public event Voucher16RowChangeEventHandler Voucher16RowChanging;
            
            public event Voucher16RowChangeEventHandler Voucher16RowChanged;
            
            public event Voucher16RowChangeEventHandler Voucher16RowDeleting;
            
            public event Voucher16RowChangeEventHandler Voucher16RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher16Row(Voucher16Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher16Row AddVoucher16Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher16Row rowVoucher16Row = ((Voucher16Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher16Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher16Row);
                return rowVoucher16Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher16DataTable cln = ((Voucher16DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher16DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher16Row NewVoucher16Row() {
                return ((Voucher16Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher16Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher16Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher16RowChanged != null)) {
                    this.Voucher16RowChanged(this, new Voucher16RowChangeEvent(((Voucher16Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher16RowChanging != null)) {
                    this.Voucher16RowChanging(this, new Voucher16RowChangeEvent(((Voucher16Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher16RowDeleted != null)) {
                    this.Voucher16RowDeleted(this, new Voucher16RowChangeEvent(((Voucher16Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher16RowDeleting != null)) {
                    this.Voucher16RowDeleting(this, new Voucher16RowChangeEvent(((Voucher16Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher16Row(Voucher16Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher16DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher17DataTable : global::System.Data.TypedTableBase<Voucher17Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher17DataTable() {
                this.TableName = "Voucher17";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher17DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher17DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher17Row this[int index] {
                get {
                    return ((Voucher17Row)(this.Rows[index]));
                }
            }
            
            public event Voucher17RowChangeEventHandler Voucher17RowChanging;
            
            public event Voucher17RowChangeEventHandler Voucher17RowChanged;
            
            public event Voucher17RowChangeEventHandler Voucher17RowDeleting;
            
            public event Voucher17RowChangeEventHandler Voucher17RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher17Row(Voucher17Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher17Row AddVoucher17Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher17Row rowVoucher17Row = ((Voucher17Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher17Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher17Row);
                return rowVoucher17Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher17DataTable cln = ((Voucher17DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher17DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher17Row NewVoucher17Row() {
                return ((Voucher17Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher17Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher17Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher17RowChanged != null)) {
                    this.Voucher17RowChanged(this, new Voucher17RowChangeEvent(((Voucher17Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher17RowChanging != null)) {
                    this.Voucher17RowChanging(this, new Voucher17RowChangeEvent(((Voucher17Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher17RowDeleted != null)) {
                    this.Voucher17RowDeleted(this, new Voucher17RowChangeEvent(((Voucher17Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher17RowDeleting != null)) {
                    this.Voucher17RowDeleting(this, new Voucher17RowChangeEvent(((Voucher17Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher17Row(Voucher17Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher17DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher18DataTable : global::System.Data.TypedTableBase<Voucher18Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher18DataTable() {
                this.TableName = "Voucher18";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher18DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher18DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher18Row this[int index] {
                get {
                    return ((Voucher18Row)(this.Rows[index]));
                }
            }
            
            public event Voucher18RowChangeEventHandler Voucher18RowChanging;
            
            public event Voucher18RowChangeEventHandler Voucher18RowChanged;
            
            public event Voucher18RowChangeEventHandler Voucher18RowDeleting;
            
            public event Voucher18RowChangeEventHandler Voucher18RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher18Row(Voucher18Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher18Row AddVoucher18Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher18Row rowVoucher18Row = ((Voucher18Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher18Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher18Row);
                return rowVoucher18Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher18DataTable cln = ((Voucher18DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher18DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher18Row NewVoucher18Row() {
                return ((Voucher18Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher18Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher18Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher18RowChanged != null)) {
                    this.Voucher18RowChanged(this, new Voucher18RowChangeEvent(((Voucher18Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher18RowChanging != null)) {
                    this.Voucher18RowChanging(this, new Voucher18RowChangeEvent(((Voucher18Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher18RowDeleted != null)) {
                    this.Voucher18RowDeleted(this, new Voucher18RowChangeEvent(((Voucher18Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher18RowDeleting != null)) {
                    this.Voucher18RowDeleting(this, new Voucher18RowChangeEvent(((Voucher18Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher18Row(Voucher18Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher18DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher19DataTable : global::System.Data.TypedTableBase<Voucher19Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher19DataTable() {
                this.TableName = "Voucher19";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher19DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher19DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher19Row this[int index] {
                get {
                    return ((Voucher19Row)(this.Rows[index]));
                }
            }
            
            public event Voucher19RowChangeEventHandler Voucher19RowChanging;
            
            public event Voucher19RowChangeEventHandler Voucher19RowChanged;
            
            public event Voucher19RowChangeEventHandler Voucher19RowDeleting;
            
            public event Voucher19RowChangeEventHandler Voucher19RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher19Row(Voucher19Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher19Row AddVoucher19Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher19Row rowVoucher19Row = ((Voucher19Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher19Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher19Row);
                return rowVoucher19Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher19DataTable cln = ((Voucher19DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher19DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher19Row NewVoucher19Row() {
                return ((Voucher19Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher19Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher19Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher19RowChanged != null)) {
                    this.Voucher19RowChanged(this, new Voucher19RowChangeEvent(((Voucher19Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher19RowChanging != null)) {
                    this.Voucher19RowChanging(this, new Voucher19RowChangeEvent(((Voucher19Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher19RowDeleted != null)) {
                    this.Voucher19RowDeleted(this, new Voucher19RowChangeEvent(((Voucher19Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher19RowDeleting != null)) {
                    this.Voucher19RowDeleting(this, new Voucher19RowChangeEvent(((Voucher19Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher19Row(Voucher19Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher19DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Voucher20DataTable : global::System.Data.TypedTableBase<Voucher20Row> {
            
            private global::System.Data.DataColumn columnVoucherSrNo;
            
            private global::System.Data.DataColumn columnIssuedTo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnExpirydate;
            
            private global::System.Data.DataColumn columnIssuedate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher20DataTable() {
                this.TableName = "Voucher20";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher20DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Voucher20DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherSrNoColumn {
                get {
                    return this.columnVoucherSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedToColumn {
                get {
                    return this.columnIssuedTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpirydateColumn {
                get {
                    return this.columnExpirydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuedateColumn {
                get {
                    return this.columnIssuedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher20Row this[int index] {
                get {
                    return ((Voucher20Row)(this.Rows[index]));
                }
            }
            
            public event Voucher20RowChangeEventHandler Voucher20RowChanging;
            
            public event Voucher20RowChangeEventHandler Voucher20RowChanged;
            
            public event Voucher20RowChangeEventHandler Voucher20RowDeleting;
            
            public event Voucher20RowChangeEventHandler Voucher20RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoucher20Row(Voucher20Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher20Row AddVoucher20Row(string VoucherSrNo, string IssuedTo, string Name, string Expirydate, string Issuedate, string Quantity, string ItemId, string ItemName) {
                Voucher20Row rowVoucher20Row = ((Voucher20Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoucherSrNo,
                        IssuedTo,
                        Name,
                        Expirydate,
                        Issuedate,
                        Quantity,
                        ItemId,
                        ItemName};
                rowVoucher20Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoucher20Row);
                return rowVoucher20Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Voucher20DataTable cln = ((Voucher20DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Voucher20DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoucherSrNo = base.Columns["VoucherSrNo"];
                this.columnIssuedTo = base.Columns["IssuedTo"];
                this.columnName = base.Columns["Name"];
                this.columnExpirydate = base.Columns["Expirydate"];
                this.columnIssuedate = base.Columns["Issuedate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoucherSrNo = new global::System.Data.DataColumn("VoucherSrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherSrNo);
                this.columnIssuedTo = new global::System.Data.DataColumn("IssuedTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedTo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnExpirydate = new global::System.Data.DataColumn("Expirydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirydate);
                this.columnIssuedate = new global::System.Data.DataColumn("Issuedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher20Row NewVoucher20Row() {
                return ((Voucher20Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Voucher20Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Voucher20Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Voucher20RowChanged != null)) {
                    this.Voucher20RowChanged(this, new Voucher20RowChangeEvent(((Voucher20Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Voucher20RowChanging != null)) {
                    this.Voucher20RowChanging(this, new Voucher20RowChangeEvent(((Voucher20Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Voucher20RowDeleted != null)) {
                    this.Voucher20RowDeleted(this, new Voucher20RowChangeEvent(((Voucher20Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Voucher20RowDeleting != null)) {
                    this.Voucher20RowDeleting(this, new Voucher20RowChangeEvent(((Voucher20Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoucher20Row(Voucher20Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BonusStatementDirectors ds = new BonusStatementDirectors();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Voucher20DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorInfoRow : global::System.Data.DataRow {
            
            private DistributorInfoDataTable tableDistributorInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorInfo = ((DistributorInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorFirstName {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorFirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorFirstName\' in table \'DistributorInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorFirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorLastName {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorLastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorLastName\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorLastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorPANNumber {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorPANNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorPANNumber\' in table \'DistributorInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorPANNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string businessmonth {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.businessmonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'businessmonth\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.businessmonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UplineDistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.UplineDistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UplineDistributorId\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.UplineDistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorAddress1 {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorAddress1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorAddress1\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorAddress1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorAddress2 {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorAddress2\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorAddress3 {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorAddress3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorAddress3\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorAddress3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorRegistrationDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorRegistrationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorRegistrationDate\' in table \'DistributorInfo\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorRegistrationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DirectorGroup {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DirectorGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectorGroup\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DirectorGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string levelname {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.levelnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'levelname\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.levelnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderAddress {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.HeaderAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderAddress\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.HeaderAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressText {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.AddressTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressText\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.AddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string distributorid {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.distributoridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'distributorid\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.distributoridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorMobNumber {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorMobNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorMobNumber\' in table \'DistributorInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorMobNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorFaxNumber {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.DistributorFaxNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorFaxNumber\' in table \'DistributorInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.DistributorFaxNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateName {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.StateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateName\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.StateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LevelId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorInfo.LevelIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LevelId\' in table \'DistributorInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorInfo.LevelIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorFirstNameNull() {
                return this.IsNull(this.tableDistributorInfo.DistributorFirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorFirstNameNull() {
                this[this.tableDistributorInfo.DistributorFirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorLastNameNull() {
                return this.IsNull(this.tableDistributorInfo.DistributorLastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorLastNameNull() {
                this[this.tableDistributorInfo.DistributorLastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorPANNumberNull() {
                return this.IsNull(this.tableDistributorInfo.DistributorPANNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorPANNumberNull() {
                this[this.tableDistributorInfo.DistributorPANNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbusinessmonthNull() {
                return this.IsNull(this.tableDistributorInfo.businessmonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbusinessmonthNull() {
                this[this.tableDistributorInfo.businessmonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUplineDistributorIdNull() {
                return this.IsNull(this.tableDistributorInfo.UplineDistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUplineDistributorIdNull() {
                this[this.tableDistributorInfo.UplineDistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorAddress1Null() {
                return this.IsNull(this.tableDistributorInfo.DistributorAddress1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorAddress1Null() {
                this[this.tableDistributorInfo.DistributorAddress1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorAddress2Null() {
                return this.IsNull(this.tableDistributorInfo.DistributorAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorAddress2Null() {
                this[this.tableDistributorInfo.DistributorAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorAddress3Null() {
                return this.IsNull(this.tableDistributorInfo.DistributorAddress3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorAddress3Null() {
                this[this.tableDistributorInfo.DistributorAddress3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorRegistrationDateNull() {
                return this.IsNull(this.tableDistributorInfo.DistributorRegistrationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorRegistrationDateNull() {
                this[this.tableDistributorInfo.DistributorRegistrationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectorGroupNull() {
                return this.IsNull(this.tableDistributorInfo.DirectorGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectorGroupNull() {
                this[this.tableDistributorInfo.DirectorGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslevelnameNull() {
                return this.IsNull(this.tableDistributorInfo.levelnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlevelnameNull() {
                this[this.tableDistributorInfo.levelnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderAddressNull() {
                return this.IsNull(this.tableDistributorInfo.HeaderAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderAddressNull() {
                this[this.tableDistributorInfo.HeaderAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressTextNull() {
                return this.IsNull(this.tableDistributorInfo.AddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressTextNull() {
                this[this.tableDistributorInfo.AddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdistributoridNull() {
                return this.IsNull(this.tableDistributorInfo.distributoridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdistributoridNull() {
                this[this.tableDistributorInfo.distributoridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorMobNumberNull() {
                return this.IsNull(this.tableDistributorInfo.DistributorMobNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorMobNumberNull() {
                this[this.tableDistributorInfo.DistributorMobNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorFaxNumberNull() {
                return this.IsNull(this.tableDistributorInfo.DistributorFaxNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorFaxNumberNull() {
                this[this.tableDistributorInfo.DistributorFaxNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableDistributorInfo.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableDistributorInfo.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNameNull() {
                return this.IsNull(this.tableDistributorInfo.StateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNameNull() {
                this[this.tableDistributorInfo.StateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLevelIdNull() {
                return this.IsNull(this.tableDistributorInfo.LevelIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLevelIdNull() {
                this[this.tableDistributorInfo.LevelIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PerformanceBonusRow : global::System.Data.DataRow {
            
            private PerformanceBonusDataTable tablePerformanceBonus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PerformanceBonusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePerformanceBonus = ((PerformanceBonusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfPv {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.SelfPvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfPv\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.SelfPvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfBv {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.SelfBvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfBv\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.SelfBvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BonusPercent {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.BonusPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusPercent\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.BonusPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPV {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.TotalPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPV\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.TotalPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalBV {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.TotalBVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBV\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.TotalBVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUMPV {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.CUMPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUMPV\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.CUMPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUMBV {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.CUMBVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUMBV\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.CUMBVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupPV {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.GroupPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupPV\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.GroupPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupBV {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.GroupBVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupBV\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.GroupBVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalinWords {
                get {
                    try {
                        return ((string)(this[this.tablePerformanceBonus.TotalinWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalinWords\' in table \'PerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformanceBonus.TotalinWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfPvNull() {
                return this.IsNull(this.tablePerformanceBonus.SelfPvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfPvNull() {
                this[this.tablePerformanceBonus.SelfPvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfBvNull() {
                return this.IsNull(this.tablePerformanceBonus.SelfBvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfBvNull() {
                this[this.tablePerformanceBonus.SelfBvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusPercentNull() {
                return this.IsNull(this.tablePerformanceBonus.BonusPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusPercentNull() {
                this[this.tablePerformanceBonus.BonusPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPVNull() {
                return this.IsNull(this.tablePerformanceBonus.TotalPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPVNull() {
                this[this.tablePerformanceBonus.TotalPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBVNull() {
                return this.IsNull(this.tablePerformanceBonus.TotalBVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBVNull() {
                this[this.tablePerformanceBonus.TotalBVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUMPVNull() {
                return this.IsNull(this.tablePerformanceBonus.CUMPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUMPVNull() {
                this[this.tablePerformanceBonus.CUMPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUMBVNull() {
                return this.IsNull(this.tablePerformanceBonus.CUMBVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUMBVNull() {
                this[this.tablePerformanceBonus.CUMBVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupPVNull() {
                return this.IsNull(this.tablePerformanceBonus.GroupPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupPVNull() {
                this[this.tablePerformanceBonus.GroupPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupBVNull() {
                return this.IsNull(this.tablePerformanceBonus.GroupBVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupBVNull() {
                this[this.tablePerformanceBonus.GroupBVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalinWordsNull() {
                return this.IsNull(this.tablePerformanceBonus.TotalinWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalinWordsNull() {
                this[this.tablePerformanceBonus.TotalinWordsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DownlineInfoRow : global::System.Data.DataRow {
            
            private DownlineInfoDataTable tableDownlineInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DownlineInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDownlineInfo = ((DownlineInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorFirstName {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.DistributorFirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorFirstName\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.DistributorFirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorLastName {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.DistributorLastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorLastName\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.DistributorLastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorID {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.DistributorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorID\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.DistributorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PV {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.PVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PV\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.PVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BV {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.BVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BV\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.BVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BonusPercent {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.BonusPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusPercent\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.BonusPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableDownlineInfo.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DownlineInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownlineInfo.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorFirstNameNull() {
                return this.IsNull(this.tableDownlineInfo.DistributorFirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorFirstNameNull() {
                this[this.tableDownlineInfo.DistributorFirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorLastNameNull() {
                return this.IsNull(this.tableDownlineInfo.DistributorLastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorLastNameNull() {
                this[this.tableDownlineInfo.DistributorLastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIDNull() {
                return this.IsNull(this.tableDownlineInfo.DistributorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIDNull() {
                this[this.tableDownlineInfo.DistributorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPVNull() {
                return this.IsNull(this.tableDownlineInfo.PVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPVNull() {
                this[this.tableDownlineInfo.PVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBVNull() {
                return this.IsNull(this.tableDownlineInfo.BVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBVNull() {
                this[this.tableDownlineInfo.BVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusPercentNull() {
                return this.IsNull(this.tableDownlineInfo.BonusPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusPercentNull() {
                this[this.tableDownlineInfo.BonusPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDownlineInfo.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDownlineInfo.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorGroupMonthlyRow : global::System.Data.DataRow {
            
            private DistributorGroupMonthlyDataTable tableDistributorGroupMonthly;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorGroupMonthlyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorGroupMonthly = ((DistributorGroupMonthlyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QualifiedDirect {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.QualifiedDirectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualifiedDirect\' in table \'DistributorGroupMonthly\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.QualifiedDirectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Points {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.PointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Points\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.PointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PointValue {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.PointValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointValue\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.PointValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessMonth {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.BusinessMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessMonth\' in table \'DistributorGroupMonthly\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.BusinessMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalIncome {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.TotalIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalIncome\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.TotalIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxDeducted {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.TaxDeductedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDeducted\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.TaxDeductedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qualified {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.QualifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qualified\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.QualifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BonusCheque {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.BonusChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusCheque\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.BonusChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BonusChequeinWords {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.BonusChequeinWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusChequeinWords\' in table \'DistributorGroupMonthly\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.BonusChequeinWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly.RowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row\' in table \'DistributorGroupMonthly\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly.RowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualifiedDirectNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.QualifiedDirectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualifiedDirectNull() {
                this[this.tableDistributorGroupMonthly.QualifiedDirectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointsNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.PointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointsNull() {
                this[this.tableDistributorGroupMonthly.PointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPointValueNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.PointValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPointValueNull() {
                this[this.tableDistributorGroupMonthly.PointValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDistributorGroupMonthly.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessMonthNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.BusinessMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessMonthNull() {
                this[this.tableDistributorGroupMonthly.BusinessMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalIncomeNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.TotalIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalIncomeNull() {
                this[this.tableDistributorGroupMonthly.TotalIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDeductedNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.TaxDeductedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDeductedNull() {
                this[this.tableDistributorGroupMonthly.TaxDeductedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualifiedNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.QualifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualifiedNull() {
                this[this.tableDistributorGroupMonthly.QualifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusChequeNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.BonusChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusChequeNull() {
                this[this.tableDistributorGroupMonthly.BonusChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusChequeinWordsNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.BonusChequeinWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusChequeinWordsNull() {
                this[this.tableDistributorGroupMonthly.BonusChequeinWordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNull() {
                return this.IsNull(this.tableDistributorGroupMonthly.RowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNull() {
                this[this.tableDistributorGroupMonthly.RowColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorChequeVoucherRow : global::System.Data.DataRow {
            
            private DistributorChequeVoucherDataTable tableDistributorChequeVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorChequeVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorChequeVoucher = ((DistributorChequeVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDistributorChequeVoucher.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DistributorChequeVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorChequeVoucher.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorChequeVoucher.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'DistributorChequeVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorChequeVoucher.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorChequeVoucher.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DistributorChequeVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorChequeVoucher.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpiryDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorChequeVoucher.ExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpiryDate\' in table \'DistributorChequeVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorChequeVoucher.ExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorChequeVoucher.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'DistributorChequeVoucher\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDistributorChequeVoucher.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AmountinWords {
                get {
                    try {
                        return ((string)(this[this.tableDistributorChequeVoucher.AmountinWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountinWords\' in table \'DistributorChequeVoucher\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDistributorChequeVoucher.AmountinWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableDistributorChequeVoucher.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableDistributorChequeVoucher.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tableDistributorChequeVoucher.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueDateNull() {
                this[this.tableDistributorChequeVoucher.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDistributorChequeVoucher.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDistributorChequeVoucher.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpiryDateNull() {
                return this.IsNull(this.tableDistributorChequeVoucher.ExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpiryDateNull() {
                this[this.tableDistributorChequeVoucher.ExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableDistributorChequeVoucher.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableDistributorChequeVoucher.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountinWordsNull() {
                return this.IsNull(this.tableDistributorChequeVoucher.AmountinWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountinWordsNull() {
                this[this.tableDistributorChequeVoucher.AmountinWordsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorPayOrderInfoRow : global::System.Data.DataRow {
            
            private DistributorPayOrderInfoDataTable tableDistributorPayOrderInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorPayOrderInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorPayOrderInfo = ((DistributorPayOrderInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DistributorPayOrderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DistributorPayOrderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpiryDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.ExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpiryDate\' in table \'DistributorPayOrderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.ExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'DistributorPayOrderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'DistributorPayOrderInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChequeNumber {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.ChequeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNumber\' in table \'DistributorPayOrderInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.ChequeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AmountinWords {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPayOrderInfo.AmountinWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountinWords\' in table \'DistributorPayOrderInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDistributorPayOrderInfo.AmountinWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableDistributorPayOrderInfo.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDistributorPayOrderInfo.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpiryDateNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.ExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpiryDateNull() {
                this[this.tableDistributorPayOrderInfo.ExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueDateNull() {
                this[this.tableDistributorPayOrderInfo.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableDistributorPayOrderInfo.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNumberNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.ChequeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNumberNull() {
                this[this.tableDistributorPayOrderInfo.ChequeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountinWordsNull() {
                return this.IsNull(this.tableDistributorPayOrderInfo.AmountinWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountinWordsNull() {
                this[this.tableDistributorPayOrderInfo.AmountinWordsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorTotalRow : global::System.Data.DataRow {
            
            private DistributorTotalDataTable tableDistributorTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorTotal = ((DistributorTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TDSAmount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.TDSAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSAmount\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.TDSAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BalanceUnpaid {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.BalanceUnpaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceUnpaid\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.BalanceUnpaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalIncome {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.TotalIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalIncome\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.TotalIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BonusAmountWord {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.BonusAmountWordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusAmountWord\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.BonusAmountWordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RsAppendWithFig {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.RsAppendWithFigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RsAppendWithFig\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.RsAppendWithFigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TDSPercent {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTotal.TDSPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSPercent\' in table \'DistributorTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTotal.TDSPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDistributorTotal.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDistributorTotal.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSAmountNull() {
                return this.IsNull(this.tableDistributorTotal.TDSAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSAmountNull() {
                this[this.tableDistributorTotal.TDSAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceUnpaidNull() {
                return this.IsNull(this.tableDistributorTotal.BalanceUnpaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceUnpaidNull() {
                this[this.tableDistributorTotal.BalanceUnpaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalIncomeNull() {
                return this.IsNull(this.tableDistributorTotal.TotalIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalIncomeNull() {
                this[this.tableDistributorTotal.TotalIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusAmountWordNull() {
                return this.IsNull(this.tableDistributorTotal.BonusAmountWordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusAmountWordNull() {
                this[this.tableDistributorTotal.BonusAmountWordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRsAppendWithFigNull() {
                return this.IsNull(this.tableDistributorTotal.RsAppendWithFigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRsAppendWithFigNull() {
                this[this.tableDistributorTotal.RsAppendWithFigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSPercentNull() {
                return this.IsNull(this.tableDistributorTotal.TDSPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSPercentNull() {
                this[this.tableDistributorTotal.TDSPercentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorGroupMonthly1Row : global::System.Data.DataRow {
            
            private DistributorGroupMonthly1DataTable tableDistributorGroupMonthly1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorGroupMonthly1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorGroupMonthly1 = ((DistributorGroupMonthly1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string businessmonth {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.businessmonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'businessmonth\' in table \'DistributorGroupMonthly1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.businessmonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Income {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.IncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Income\' in table \'DistributorGroupMonthly1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.IncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxDeducted {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.TaxDeductedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDeducted\' in table \'DistributorGroupMonthly1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.TaxDeductedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPV {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.TotalPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPV\' in table \'DistributorGroupMonthly1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.TotalPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExclPV {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.ExclPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExclPV\' in table \'DistributorGroupMonthly1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.ExclPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NonQualifiedPV {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.NonQualifiedPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonQualifiedPV\' in table \'DistributorGroupMonthly1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.NonQualifiedPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QualifiedDirect {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGroupMonthly1.QualifiedDirectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualifiedDirect\' in table \'DistributorGroupMonthly1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGroupMonthly1.QualifiedDirectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbusinessmonthNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.businessmonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbusinessmonthNull() {
                this[this.tableDistributorGroupMonthly1.businessmonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncomeNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.IncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncomeNull() {
                this[this.tableDistributorGroupMonthly1.IncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDeductedNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.TaxDeductedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDeductedNull() {
                this[this.tableDistributorGroupMonthly1.TaxDeductedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPVNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.TotalPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPVNull() {
                this[this.tableDistributorGroupMonthly1.TotalPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExclPVNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.ExclPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExclPVNull() {
                this[this.tableDistributorGroupMonthly1.ExclPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonQualifiedPVNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.NonQualifiedPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonQualifiedPVNull() {
                this[this.tableDistributorGroupMonthly1.NonQualifiedPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualifiedDirectNull() {
                return this.IsNull(this.tableDistributorGroupMonthly1.QualifiedDirectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualifiedDirectNull() {
                this[this.tableDistributorGroupMonthly1.QualifiedDirectColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorPBAmountInfoRow : global::System.Data.DataRow {
            
            private DistributorPBAmountInfoDataTable tableDistributorPBAmountInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorPBAmountInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorPBAmountInfo = ((DistributorPBAmountInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPBAmountInfo.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'DistributorPBAmountInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDistributorPBAmountInfo.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorPBAmountInfo.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DistributorPBAmountInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorPBAmountInfo.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableDistributorPBAmountInfo.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableDistributorPBAmountInfo.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDistributorPBAmountInfo.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDistributorPBAmountInfo.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorCarInfoRow : global::System.Data.DataRow {
            
            private DistributorCarInfoDataTable tableDistributorCarInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorCarInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorCarInfo = ((DistributorCarInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulativeCarFund {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarInfo.CumulativeCarFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CumulativeCarFund\' in table \'DistributorCarInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorCarInfo.CumulativeCarFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidAmount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarInfo.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'DistributorCarInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCarInfo.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPayable {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarInfo.TotalPayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayable\' in table \'DistributorCarInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCarInfo.TotalPayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCumulativeCarFundNull() {
                return this.IsNull(this.tableDistributorCarInfo.CumulativeCarFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCumulativeCarFundNull() {
                this[this.tableDistributorCarInfo.CumulativeCarFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableDistributorCarInfo.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableDistributorCarInfo.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPayableNull() {
                return this.IsNull(this.tableDistributorCarInfo.TotalPayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPayableNull() {
                this[this.tableDistributorCarInfo.TotalPayableColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorCurrentMnthCarInfoRow : global::System.Data.DataRow {
            
            private DistributorCurrentMnthCarInfoDataTable tableDistributorCurrentMnthCarInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorCurrentMnthCarInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorCurrentMnthCarInfo = ((DistributorCurrentMnthCarInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentCarBonus {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCurrentMnthCarInfo.CurrentCarBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentCarBonus\' in table \'DistributorCurrentMnthCarInfo\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCurrentMnthCarInfo.CurrentCarBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentCarBonusNull() {
                return this.IsNull(this.tableDistributorCurrentMnthCarInfo.CurrentCarBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentCarBonusNull() {
                this[this.tableDistributorCurrentMnthCarInfo.CurrentCarBonusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorViaChequeInfoRow : global::System.Data.DataRow {
            
            private DistributorViaChequeInfoDataTable tableDistributorViaChequeInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorViaChequeInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorViaChequeInfo = ((DistributorViaChequeInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ViaCheque {
                get {
                    try {
                        return ((string)(this[this.tableDistributorViaChequeInfo.ViaChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ViaCheque\' in table \'DistributorViaChequeInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorViaChequeInfo.ViaChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsViaChequeNull() {
                return this.IsNull(this.tableDistributorViaChequeInfo.ViaChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetViaChequeNull() {
                this[this.tableDistributorViaChequeInfo.ViaChequeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistPerformanceBonusRow : global::System.Data.DataRow {
            
            private DistPerformanceBonusDataTable tableDistPerformanceBonus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistPerformanceBonusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistPerformanceBonus = ((DistPerformanceBonusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PB {
                get {
                    try {
                        return ((string)(this[this.tableDistPerformanceBonus.PBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PB\' in table \'DistPerformanceBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistPerformanceBonus.PBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBNull() {
                return this.IsNull(this.tableDistPerformanceBonus.PBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBNull() {
                this[this.tableDistPerformanceBonus.PBColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BonusChkVoucherRow : global::System.Data.DataRow {
            
            private BonusChkVoucherDataTable tableBonusChkVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BonusChkVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBonusChkVoucher = ((BonusChkVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BonusChkVoucher {
                get {
                    try {
                        return ((string)(this[this.tableBonusChkVoucher.BonusChkVoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusChkVoucher\' in table \'BonusChkVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBonusChkVoucher.BonusChkVoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBonusChkVoucherNull() {
                return this.IsNull(this.tableBonusChkVoucher.BonusChkVoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBonusChkVoucherNull() {
                this[this.tableBonusChkVoucher.BonusChkVoucherColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductVoucherRow : global::System.Data.DataRow {
            
            private ProductVoucherDataTable tableProductVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductVoucher = ((ProductVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductVoucher {
                get {
                    try {
                        return ((string)(this[this.tableProductVoucher.ProductVoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductVoucher\' in table \'ProductVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductVoucher.ProductVoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductVoucherNull() {
                return this.IsNull(this.tableProductVoucher.ProductVoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductVoucherNull() {
                this[this.tableProductVoucher.ProductVoucherColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QualPvNonPVRow : global::System.Data.DataRow {
            
            private QualPvNonPVDataTable tableQualPvNonPV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QualPvNonPVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQualPvNonPV = ((QualPvNonPVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxDeducted {
                get {
                    try {
                        return ((string)(this[this.tableQualPvNonPV.TaxDeductedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxDeducted\' in table \'QualPvNonPV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQualPvNonPV.TaxDeductedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPV {
                get {
                    try {
                        return ((string)(this[this.tableQualPvNonPV.TotalPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPV\' in table \'QualPvNonPV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQualPvNonPV.TotalPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExclPV {
                get {
                    try {
                        return ((string)(this[this.tableQualPvNonPV.ExclPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExclPV\' in table \'QualPvNonPV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQualPvNonPV.ExclPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NonQualifiedPV {
                get {
                    try {
                        return ((string)(this[this.tableQualPvNonPV.NonQualifiedPVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonQualifiedPV\' in table \'QualPvNonPV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQualPvNonPV.NonQualifiedPVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QualifiedDirect {
                get {
                    try {
                        return ((string)(this[this.tableQualPvNonPV.QualifiedDirectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualifiedDirect\' in table \'QualPvNonPV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQualPvNonPV.QualifiedDirectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Businessmonth {
                get {
                    try {
                        return ((string)(this[this.tableQualPvNonPV.BusinessmonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Businessmonth\' in table \'QualPvNonPV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQualPvNonPV.BusinessmonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxDeductedNull() {
                return this.IsNull(this.tableQualPvNonPV.TaxDeductedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxDeductedNull() {
                this[this.tableQualPvNonPV.TaxDeductedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPVNull() {
                return this.IsNull(this.tableQualPvNonPV.TotalPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPVNull() {
                this[this.tableQualPvNonPV.TotalPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExclPVNull() {
                return this.IsNull(this.tableQualPvNonPV.ExclPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExclPVNull() {
                this[this.tableQualPvNonPV.ExclPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonQualifiedPVNull() {
                return this.IsNull(this.tableQualPvNonPV.NonQualifiedPVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonQualifiedPVNull() {
                this[this.tableQualPvNonPV.NonQualifiedPVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualifiedDirectNull() {
                return this.IsNull(this.tableQualPvNonPV.QualifiedDirectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualifiedDirectNull() {
                this[this.tableQualPvNonPV.QualifiedDirectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessmonthNull() {
                return this.IsNull(this.tableQualPvNonPV.BusinessmonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessmonthNull() {
                this[this.tableQualPvNonPV.BusinessmonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GroupArchiveSummaryRow : global::System.Data.DataRow {
            
            private GroupArchiveSummaryDataTable tableGroupArchiveSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GroupArchiveSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGroupArchiveSummary = ((GroupArchiveSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupSummary {
                get {
                    try {
                        return ((string)(this[this.tableGroupArchiveSummary.GroupSummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupSummary\' in table \'GroupArchiveSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGroupArchiveSummary.GroupSummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupSummaryNull() {
                return this.IsNull(this.tableGroupArchiveSummary.GroupSummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupSummaryNull() {
                this[this.tableGroupArchiveSummary.GroupSummaryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorTFInfoRow : global::System.Data.DataRow {
            
            private DistributorTFInfoDataTable tableDistributorTFInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorTFInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorTFInfo = ((DistributorTFInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulativeTravelFund {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTFInfo.CumulativeTravelFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CumulativeTravelFund\' in table \'DistributorTFInfo\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDistributorTFInfo.CumulativeTravelFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidTravelFund {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTFInfo.PaidTravelFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidTravelFund\' in table \'DistributorTFInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTFInfo.PaidTravelFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayableTravelFund {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTFInfo.PayableTravelFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayableTravelFund\' in table \'DistributorTFInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTFInfo.PayableTravelFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentTravelFund {
                get {
                    try {
                        return ((string)(this[this.tableDistributorTFInfo.CurrentTravelFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentTravelFund\' in table \'DistributorTFInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorTFInfo.CurrentTravelFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCumulativeTravelFundNull() {
                return this.IsNull(this.tableDistributorTFInfo.CumulativeTravelFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCumulativeTravelFundNull() {
                this[this.tableDistributorTFInfo.CumulativeTravelFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidTravelFundNull() {
                return this.IsNull(this.tableDistributorTFInfo.PaidTravelFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidTravelFundNull() {
                this[this.tableDistributorTFInfo.PaidTravelFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayableTravelFundNull() {
                return this.IsNull(this.tableDistributorTFInfo.PayableTravelFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayableTravelFundNull() {
                this[this.tableDistributorTFInfo.PayableTravelFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentTravelFundNull() {
                return this.IsNull(this.tableDistributorTFInfo.CurrentTravelFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentTravelFundNull() {
                this[this.tableDistributorTFInfo.CurrentTravelFundColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeclarationRow : global::System.Data.DataRow {
            
            private DeclarationDataTable tableDeclaration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeclarationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeclaration = ((DeclarationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Declaration {
                get {
                    try {
                        return ((string)(this[this.tableDeclaration.DeclarationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Declaration\' in table \'Declaration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeclaration.DeclarationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableDeclaration.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Declaration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeclaration.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableDeclaration.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Declaration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeclaration.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeclarationNull() {
                return this.IsNull(this.tableDeclaration.DeclarationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeclarationNull() {
                this[this.tableDeclaration.DeclarationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableDeclaration.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableDeclaration.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableDeclaration.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableDeclaration.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TotalBvAmountRow : global::System.Data.DataRow {
            
            private TotalBvAmountDataTable tableTotalBvAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TotalBvAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTotalBvAmount = ((TotalBvAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalBvAmount {
                get {
                    try {
                        return ((string)(this[this.tableTotalBvAmount.TotalBvAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBvAmount\' in table \'TotalBvAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotalBvAmount.TotalBvAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBvAmountNull() {
                return this.IsNull(this.tableTotalBvAmount.TotalBvAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBvAmountNull() {
                this[this.tableTotalBvAmount.TotalBvAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorGiftVoucherInfoRow : global::System.Data.DataRow {
            
            private DistributorGiftVoucherInfoDataTable tableDistributorGiftVoucherInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorGiftVoucherInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorGiftVoucherInfo = ((DistributorGiftVoucherInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGiftVoucherInfo.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'DistributorGiftVoucherInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorGiftVoucherInfo.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGiftVoucherInfo.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'DistributorGiftVoucherInfo\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGiftVoucherInfo.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGiftVoucherInfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'DistributorGiftVoucherInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorGiftVoucherInfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGiftVoucherInfo.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'DistributorGiftVoucherInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDistributorGiftVoucherInfo.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpiryDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorGiftVoucherInfo.ExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpiryDate\' in table \'DistributorGiftVoucherInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDistributorGiftVoucherInfo.ExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tableDistributorGiftVoucherInfo.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tableDistributorGiftVoucherInfo.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableDistributorGiftVoucherInfo.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableDistributorGiftVoucherInfo.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableDistributorGiftVoucherInfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableDistributorGiftVoucherInfo.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tableDistributorGiftVoucherInfo.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueDateNull() {
                this[this.tableDistributorGiftVoucherInfo.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpiryDateNull() {
                return this.IsNull(this.tableDistributorGiftVoucherInfo.ExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpiryDateNull() {
                this[this.tableDistributorGiftVoucherInfo.ExpiryDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher1Row : global::System.Data.DataRow {
            
            private Voucher1DataTable tableVoucher1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher1 = ((Voucher1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher1.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher1.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher1.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher1.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher1.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher1.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher1.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher1.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher1.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher1.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher1.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher1.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher1.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher1.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher1.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher1.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher1.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher1.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher2Row : global::System.Data.DataRow {
            
            private Voucher2DataTable tableVoucher2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher2 = ((Voucher2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher2.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher2.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher2.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher2.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher2.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher2.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher2.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher2.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher2.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher2.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher2.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher2.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher2.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher2.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher2.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher2.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher2.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher2.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher3Row : global::System.Data.DataRow {
            
            private Voucher3DataTable tableVoucher3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher3 = ((Voucher3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher3.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher3.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher3.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher3.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher3.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher3.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher3.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher3.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher3.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher3.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher3.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher3.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher3.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher3.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher3.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher3.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher3.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher3.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher4Row : global::System.Data.DataRow {
            
            private Voucher4DataTable tableVoucher4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher4 = ((Voucher4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher4.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher4.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher4.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher4.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher4.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher4.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher4.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher4.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher4.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher4.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher4.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher4.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher4.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher4.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher4.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher4.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher4.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher4.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher5Row : global::System.Data.DataRow {
            
            private Voucher5DataTable tableVoucher5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher5 = ((Voucher5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher5.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher5.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher5.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher5.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher5.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher5.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher5.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher5.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher5.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher5.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher5.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher5.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher5.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher5.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher5.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher5.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher5.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher5.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher6Row : global::System.Data.DataRow {
            
            private Voucher6DataTable tableVoucher6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher6 = ((Voucher6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher6.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher6.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher6.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher6.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher6.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher6.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher6.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher6.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher6.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher6.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher6.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher6.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher6.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher6.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher6.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher6.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher6.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher6.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher7Row : global::System.Data.DataRow {
            
            private Voucher7DataTable tableVoucher7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher7Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher7 = ((Voucher7DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher7.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher7.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher7.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher7.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher7.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher7.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher7.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher7.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher7.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher7.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher7.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher7.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher7.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher7.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher7.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher7.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher7.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher7.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher8Row : global::System.Data.DataRow {
            
            private Voucher8DataTable tableVoucher8;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher8Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher8 = ((Voucher8DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher8.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher8.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher8.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher8.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher8.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher8.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher8.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher8.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher8.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher8.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher8.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher8.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher8.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher8.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher8.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher8.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher8.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher8.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher9Row : global::System.Data.DataRow {
            
            private Voucher9DataTable tableVoucher9;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher9Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher9 = ((Voucher9DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher9.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher9\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher9.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher9.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher9.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher9.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher9.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher9.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher9.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher9.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher9.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher9.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher9.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher9.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher9.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher9.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher9.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher9.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher9.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher10Row : global::System.Data.DataRow {
            
            private Voucher10DataTable tableVoucher10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher10Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher10 = ((Voucher10DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher10.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher10\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher10.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher10.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher10.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher10.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher10.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher10.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher10.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher10.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher10.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher10.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher10.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher10.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher10.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher10.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher10.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher10.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher10.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher11Row : global::System.Data.DataRow {
            
            private Voucher11DataTable tableVoucher11;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher11Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher11 = ((Voucher11DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher11.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher11.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher11.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher11.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher11.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher11.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher11.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher11.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher11.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher11.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher11.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher11.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher11.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher11.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher11.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher11.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher11.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher11.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher12Row : global::System.Data.DataRow {
            
            private Voucher12DataTable tableVoucher12;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher12Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher12 = ((Voucher12DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher12.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher12.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher12.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher12.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher12.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher12.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher12.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher12.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher12.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher12.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher12.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher12.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher12.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher12.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher12.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher12.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher12.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher12.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher13Row : global::System.Data.DataRow {
            
            private Voucher13DataTable tableVoucher13;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher13Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher13 = ((Voucher13DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher13.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher13\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher13.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher13.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher13.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher13.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher13.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher13.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher13.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher13.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher13.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher13.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher13.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher13.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher13.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher13.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher13.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher13.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher13.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher14Row : global::System.Data.DataRow {
            
            private Voucher14DataTable tableVoucher14;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher14Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher14 = ((Voucher14DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher14.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher14\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher14.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher14.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher14.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher14.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher14.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher14.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher14.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher14.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher14.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher14.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher14.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher14.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher14.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher14.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher14.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher14.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher14.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher15Row : global::System.Data.DataRow {
            
            private Voucher15DataTable tableVoucher15;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher15Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher15 = ((Voucher15DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher15.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher15\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher15.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher15.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher15.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher15.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher15.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher15.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher15.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher15.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher15.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher15.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher15.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher15.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher15.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher15.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher15.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher15.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher15.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher16Row : global::System.Data.DataRow {
            
            private Voucher16DataTable tableVoucher16;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher16Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher16 = ((Voucher16DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher16.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher16\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher16.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher16.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher16.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher16.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher16.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher16.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher16.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher16.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher16.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher16.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher16.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher16.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher16.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher16.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher16.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher16.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher16.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher17Row : global::System.Data.DataRow {
            
            private Voucher17DataTable tableVoucher17;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher17Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher17 = ((Voucher17DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher17.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher17\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher17.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher17.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher17.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher17.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher17.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher17.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher17.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher17.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher17.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher17.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher17.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher17.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher17.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher17.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher17.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher17.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher17.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher18Row : global::System.Data.DataRow {
            
            private Voucher18DataTable tableVoucher18;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher18Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher18 = ((Voucher18DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher18.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher18\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher18.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher18.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher18.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher18.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher18.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher18.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher18.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher18.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher18.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher18.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher18.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher18.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher18.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher18.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher18.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher18.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher18.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher19Row : global::System.Data.DataRow {
            
            private Voucher19DataTable tableVoucher19;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher19Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher19 = ((Voucher19DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher19.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher19\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher19.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher19.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher19.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher19.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher19.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher19.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher19.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher19.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher19.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher19.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher19.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher19.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher19.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher19.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher19.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher19.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher19.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Voucher20Row : global::System.Data.DataRow {
            
            private Voucher20DataTable tableVoucher20;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Voucher20Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoucher20 = ((Voucher20DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherSrNo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.VoucherSrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherSrNo\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.VoucherSrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuedTo {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.IssuedToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedTo\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.IssuedToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expirydate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.ExpirydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expirydate\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.ExpirydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Issuedate {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.IssuedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Issuedate\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.IssuedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.ItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemId\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableVoucher20.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Voucher20\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoucher20.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherSrNoNull() {
                return this.IsNull(this.tableVoucher20.VoucherSrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherSrNoNull() {
                this[this.tableVoucher20.VoucherSrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedToNull() {
                return this.IsNull(this.tableVoucher20.IssuedToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedToNull() {
                this[this.tableVoucher20.IssuedToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVoucher20.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVoucher20.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpirydateNull() {
                return this.IsNull(this.tableVoucher20.ExpirydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpirydateNull() {
                this[this.tableVoucher20.ExpirydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuedateNull() {
                return this.IsNull(this.tableVoucher20.IssuedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuedateNull() {
                this[this.tableVoucher20.IssuedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableVoucher20.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableVoucher20.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIdNull() {
                return this.IsNull(this.tableVoucher20.ItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIdNull() {
                this[this.tableVoucher20.ItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableVoucher20.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableVoucher20.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorInfoRowChangeEvent(DistributorInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PerformanceBonusRowChangeEvent : global::System.EventArgs {
            
            private PerformanceBonusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PerformanceBonusRowChangeEvent(PerformanceBonusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PerformanceBonusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DownlineInfoRowChangeEvent : global::System.EventArgs {
            
            private DownlineInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DownlineInfoRowChangeEvent(DownlineInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DownlineInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorGroupMonthlyRowChangeEvent : global::System.EventArgs {
            
            private DistributorGroupMonthlyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthlyRowChangeEvent(DistributorGroupMonthlyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthlyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorChequeVoucherRowChangeEvent : global::System.EventArgs {
            
            private DistributorChequeVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorChequeVoucherRowChangeEvent(DistributorChequeVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorChequeVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorPayOrderInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorPayOrderInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPayOrderInfoRowChangeEvent(DistributorPayOrderInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPayOrderInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorTotalRowChangeEvent : global::System.EventArgs {
            
            private DistributorTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTotalRowChangeEvent(DistributorTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorGroupMonthly1RowChangeEvent : global::System.EventArgs {
            
            private DistributorGroupMonthly1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthly1RowChangeEvent(DistributorGroupMonthly1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGroupMonthly1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorPBAmountInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorPBAmountInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPBAmountInfoRowChangeEvent(DistributorPBAmountInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorPBAmountInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorCarInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorCarInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarInfoRowChangeEvent(DistributorCarInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorCurrentMnthCarInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorCurrentMnthCarInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCurrentMnthCarInfoRowChangeEvent(DistributorCurrentMnthCarInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCurrentMnthCarInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorViaChequeInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorViaChequeInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorViaChequeInfoRowChangeEvent(DistributorViaChequeInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorViaChequeInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistPerformanceBonusRowChangeEvent : global::System.EventArgs {
            
            private DistPerformanceBonusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistPerformanceBonusRowChangeEvent(DistPerformanceBonusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistPerformanceBonusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BonusChkVoucherRowChangeEvent : global::System.EventArgs {
            
            private BonusChkVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BonusChkVoucherRowChangeEvent(BonusChkVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BonusChkVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductVoucherRowChangeEvent : global::System.EventArgs {
            
            private ProductVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductVoucherRowChangeEvent(ProductVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QualPvNonPVRowChangeEvent : global::System.EventArgs {
            
            private QualPvNonPVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QualPvNonPVRowChangeEvent(QualPvNonPVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QualPvNonPVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GroupArchiveSummaryRowChangeEvent : global::System.EventArgs {
            
            private GroupArchiveSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GroupArchiveSummaryRowChangeEvent(GroupArchiveSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GroupArchiveSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorTFInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorTFInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTFInfoRowChangeEvent(DistributorTFInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorTFInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeclarationRowChangeEvent : global::System.EventArgs {
            
            private DeclarationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeclarationRowChangeEvent(DeclarationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeclarationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TotalBvAmountRowChangeEvent : global::System.EventArgs {
            
            private TotalBvAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TotalBvAmountRowChangeEvent(TotalBvAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TotalBvAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorGiftVoucherInfoRowChangeEvent : global::System.EventArgs {
            
            private DistributorGiftVoucherInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGiftVoucherInfoRowChangeEvent(DistributorGiftVoucherInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorGiftVoucherInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher1RowChangeEvent : global::System.EventArgs {
            
            private Voucher1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher1RowChangeEvent(Voucher1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher2RowChangeEvent : global::System.EventArgs {
            
            private Voucher2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher2RowChangeEvent(Voucher2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher3RowChangeEvent : global::System.EventArgs {
            
            private Voucher3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher3RowChangeEvent(Voucher3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher4RowChangeEvent : global::System.EventArgs {
            
            private Voucher4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher4RowChangeEvent(Voucher4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher5RowChangeEvent : global::System.EventArgs {
            
            private Voucher5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher5RowChangeEvent(Voucher5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher6RowChangeEvent : global::System.EventArgs {
            
            private Voucher6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher6RowChangeEvent(Voucher6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher7RowChangeEvent : global::System.EventArgs {
            
            private Voucher7Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher7RowChangeEvent(Voucher7Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher7Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher8RowChangeEvent : global::System.EventArgs {
            
            private Voucher8Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher8RowChangeEvent(Voucher8Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher8Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher9RowChangeEvent : global::System.EventArgs {
            
            private Voucher9Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher9RowChangeEvent(Voucher9Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher9Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher10RowChangeEvent : global::System.EventArgs {
            
            private Voucher10Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher10RowChangeEvent(Voucher10Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher10Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher11RowChangeEvent : global::System.EventArgs {
            
            private Voucher11Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher11RowChangeEvent(Voucher11Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher12RowChangeEvent : global::System.EventArgs {
            
            private Voucher12Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher12RowChangeEvent(Voucher12Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher12Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher13RowChangeEvent : global::System.EventArgs {
            
            private Voucher13Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher13RowChangeEvent(Voucher13Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher13Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher14RowChangeEvent : global::System.EventArgs {
            
            private Voucher14Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher14RowChangeEvent(Voucher14Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher14Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher15RowChangeEvent : global::System.EventArgs {
            
            private Voucher15Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher15RowChangeEvent(Voucher15Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher15Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher16RowChangeEvent : global::System.EventArgs {
            
            private Voucher16Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher16RowChangeEvent(Voucher16Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher16Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher17RowChangeEvent : global::System.EventArgs {
            
            private Voucher17Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher17RowChangeEvent(Voucher17Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher17Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher18RowChangeEvent : global::System.EventArgs {
            
            private Voucher18Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher18RowChangeEvent(Voucher18Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher18Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher19RowChangeEvent : global::System.EventArgs {
            
            private Voucher19Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher19RowChangeEvent(Voucher19Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher19Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Voucher20RowChangeEvent : global::System.EventArgs {
            
            private Voucher20Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher20RowChangeEvent(Voucher20Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Voucher20Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591