//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet.ScreenReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("POScreen")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class POScreen : global::System.Data.DataSet {
        
        private POScreenHeaderDataTableDataTable tablePOScreenHeaderDataTable;
        
        private POScreenDetailDataTableDataTable tablePOScreenDetailDataTable;
        
        private POScreenTaxTotalDataTableDataTable tablePOScreenTaxTotalDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POScreen() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected POScreen(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["POScreenHeaderDataTable"] != null)) {
                    base.Tables.Add(new POScreenHeaderDataTableDataTable(ds.Tables["POScreenHeaderDataTable"]));
                }
                if ((ds.Tables["POScreenDetailDataTable"] != null)) {
                    base.Tables.Add(new POScreenDetailDataTableDataTable(ds.Tables["POScreenDetailDataTable"]));
                }
                if ((ds.Tables["POScreenTaxTotalDataTable"] != null)) {
                    base.Tables.Add(new POScreenTaxTotalDataTableDataTable(ds.Tables["POScreenTaxTotalDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POScreenHeaderDataTableDataTable POScreenHeaderDataTable {
            get {
                return this.tablePOScreenHeaderDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POScreenDetailDataTableDataTable POScreenDetailDataTable {
            get {
                return this.tablePOScreenDetailDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POScreenTaxTotalDataTableDataTable POScreenTaxTotalDataTable {
            get {
                return this.tablePOScreenTaxTotalDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            POScreen cln = ((POScreen)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["POScreenHeaderDataTable"] != null)) {
                    base.Tables.Add(new POScreenHeaderDataTableDataTable(ds.Tables["POScreenHeaderDataTable"]));
                }
                if ((ds.Tables["POScreenDetailDataTable"] != null)) {
                    base.Tables.Add(new POScreenDetailDataTableDataTable(ds.Tables["POScreenDetailDataTable"]));
                }
                if ((ds.Tables["POScreenTaxTotalDataTable"] != null)) {
                    base.Tables.Add(new POScreenTaxTotalDataTableDataTable(ds.Tables["POScreenTaxTotalDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePOScreenHeaderDataTable = ((POScreenHeaderDataTableDataTable)(base.Tables["POScreenHeaderDataTable"]));
            if ((initTable == true)) {
                if ((this.tablePOScreenHeaderDataTable != null)) {
                    this.tablePOScreenHeaderDataTable.InitVars();
                }
            }
            this.tablePOScreenDetailDataTable = ((POScreenDetailDataTableDataTable)(base.Tables["POScreenDetailDataTable"]));
            if ((initTable == true)) {
                if ((this.tablePOScreenDetailDataTable != null)) {
                    this.tablePOScreenDetailDataTable.InitVars();
                }
            }
            this.tablePOScreenTaxTotalDataTable = ((POScreenTaxTotalDataTableDataTable)(base.Tables["POScreenTaxTotalDataTable"]));
            if ((initTable == true)) {
                if ((this.tablePOScreenTaxTotalDataTable != null)) {
                    this.tablePOScreenTaxTotalDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "POScreen";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/POScreen.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePOScreenHeaderDataTable = new POScreenHeaderDataTableDataTable();
            base.Tables.Add(this.tablePOScreenHeaderDataTable);
            this.tablePOScreenDetailDataTable = new POScreenDetailDataTableDataTable();
            base.Tables.Add(this.tablePOScreenDetailDataTable);
            this.tablePOScreenTaxTotalDataTable = new POScreenTaxTotalDataTableDataTable();
            base.Tables.Add(this.tablePOScreenTaxTotalDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOScreenHeaderDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOScreenDetailDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOScreenTaxTotalDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            POScreen ds = new POScreen();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void POScreenHeaderDataTableRowChangeEventHandler(object sender, POScreenHeaderDataTableRowChangeEvent e);
        
        public delegate void POScreenDetailDataTableRowChangeEventHandler(object sender, POScreenDetailDataTableRowChangeEvent e);
        
        public delegate void POScreenTaxTotalDataTableRowChangeEventHandler(object sender, POScreenTaxTotalDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POScreenHeaderDataTableDataTable : global::System.Data.TypedTableBase<POScreenHeaderDataTableRow> {
            
            private global::System.Data.DataColumn columnPoNumber;
            
            private global::System.Data.DataColumn columnAmendmentNumber;
            
            private global::System.Data.DataColumn columnPoType;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnDestinationLocation;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnVendorAddress1;
            
            private global::System.Data.DataColumn columnDestinationAddress1;
            
            private global::System.Data.DataColumn columnPoDate;
            
            private global::System.Data.DataColumn columnExpectedDeliveryDate;
            
            private global::System.Data.DataColumn columnMaxDeliveryDate;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnFormCApplicable;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnTotalTaxAmount;
            
            private global::System.Data.DataColumn columnShippingDetails;
            
            private global::System.Data.DataColumn columnPaymentDetails;
            
            private global::System.Data.DataColumn columnTotalPoAmount;
            
            private global::System.Data.DataColumn columnVendorCity;
            
            private global::System.Data.DataColumn columnVendorState;
            
            private global::System.Data.DataColumn columnVendorPinCode;
            
            private global::System.Data.DataColumn columnVendorPhone;
            
            private global::System.Data.DataColumn columnDestinationCity;
            
            private global::System.Data.DataColumn columnDestinationState;
            
            private global::System.Data.DataColumn columnDestinationPinCode;
            
            private global::System.Data.DataColumn columnDestinationPhone;
            
            private global::System.Data.DataColumn columnVendorAddress2;
            
            private global::System.Data.DataColumn columnDestinationAddress2;
            
            private global::System.Data.DataColumn columnVendorAddress3;
            
            private global::System.Data.DataColumn columnVendorAddress4;
            
            private global::System.Data.DataColumn columnDestinationAddress3;
            
            private global::System.Data.DataColumn columnDestinationAddress4;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnPrintedBy;
            
            private global::System.Data.DataColumn columnVendorTINNo;
            
            private global::System.Data.DataColumn columnVendorCSTNo;
            
            private global::System.Data.DataColumn columnLocationTINNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenHeaderDataTableDataTable() {
                this.TableName = "POScreenHeaderDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POScreenHeaderDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POScreenHeaderDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoNumberColumn {
                get {
                    return this.columnPoNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmendmentNumberColumn {
                get {
                    return this.columnAmendmentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoTypeColumn {
                get {
                    return this.columnPoType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationLocationColumn {
                get {
                    return this.columnDestinationLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorAddress1Column {
                get {
                    return this.columnVendorAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationAddress1Column {
                get {
                    return this.columnDestinationAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoDateColumn {
                get {
                    return this.columnPoDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpectedDeliveryDateColumn {
                get {
                    return this.columnExpectedDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxDeliveryDateColumn {
                get {
                    return this.columnMaxDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormCApplicableColumn {
                get {
                    return this.columnFormCApplicable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTaxAmountColumn {
                get {
                    return this.columnTotalTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippingDetailsColumn {
                get {
                    return this.columnShippingDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentDetailsColumn {
                get {
                    return this.columnPaymentDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPoAmountColumn {
                get {
                    return this.columnTotalPoAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCityColumn {
                get {
                    return this.columnVendorCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorStateColumn {
                get {
                    return this.columnVendorState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorPinCodeColumn {
                get {
                    return this.columnVendorPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorPhoneColumn {
                get {
                    return this.columnVendorPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationCityColumn {
                get {
                    return this.columnDestinationCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationStateColumn {
                get {
                    return this.columnDestinationState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationPinCodeColumn {
                get {
                    return this.columnDestinationPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationPhoneColumn {
                get {
                    return this.columnDestinationPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorAddress2Column {
                get {
                    return this.columnVendorAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationAddress2Column {
                get {
                    return this.columnDestinationAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorAddress3Column {
                get {
                    return this.columnVendorAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorAddress4Column {
                get {
                    return this.columnVendorAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationAddress3Column {
                get {
                    return this.columnDestinationAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationAddress4Column {
                get {
                    return this.columnDestinationAddress4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintedByColumn {
                get {
                    return this.columnPrintedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorTINNoColumn {
                get {
                    return this.columnVendorTINNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCSTNoColumn {
                get {
                    return this.columnVendorCSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationTINNoColumn {
                get {
                    return this.columnLocationTINNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenHeaderDataTableRow this[int index] {
                get {
                    return ((POScreenHeaderDataTableRow)(this.Rows[index]));
                }
            }
            
            public event POScreenHeaderDataTableRowChangeEventHandler POScreenHeaderDataTableRowChanging;
            
            public event POScreenHeaderDataTableRowChangeEventHandler POScreenHeaderDataTableRowChanged;
            
            public event POScreenHeaderDataTableRowChangeEventHandler POScreenHeaderDataTableRowDeleting;
            
            public event POScreenHeaderDataTableRowChangeEventHandler POScreenHeaderDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOScreenHeaderDataTableRow(POScreenHeaderDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenHeaderDataTableRow AddPOScreenHeaderDataTableRow(
                        string PoNumber, 
                        string AmendmentNumber, 
                        string PoType, 
                        string VendorCode, 
                        string VendorName, 
                        string DestinationLocation, 
                        string CreatedDate, 
                        string VendorAddress1, 
                        string DestinationAddress1, 
                        string PoDate, 
                        string ExpectedDeliveryDate, 
                        string MaxDeliveryDate, 
                        string Status, 
                        string FormCApplicable, 
                        string Remarks, 
                        string TotalTaxAmount, 
                        string ShippingDetails, 
                        string PaymentDetails, 
                        string TotalPoAmount, 
                        string VendorCity, 
                        string VendorState, 
                        string VendorPinCode, 
                        string VendorPhone, 
                        string DestinationCity, 
                        string DestinationState, 
                        string DestinationPinCode, 
                        string DestinationPhone, 
                        string VendorAddress2, 
                        string DestinationAddress2, 
                        string VendorAddress3, 
                        string VendorAddress4, 
                        string DestinationAddress3, 
                        string DestinationAddress4, 
                        string CreatedBy, 
                        string PrintedBy, 
                        string VendorTINNo, 
                        string VendorCSTNo, 
                        string LocationTINNo) {
                POScreenHeaderDataTableRow rowPOScreenHeaderDataTableRow = ((POScreenHeaderDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PoNumber,
                        AmendmentNumber,
                        PoType,
                        VendorCode,
                        VendorName,
                        DestinationLocation,
                        CreatedDate,
                        VendorAddress1,
                        DestinationAddress1,
                        PoDate,
                        ExpectedDeliveryDate,
                        MaxDeliveryDate,
                        Status,
                        FormCApplicable,
                        Remarks,
                        TotalTaxAmount,
                        ShippingDetails,
                        PaymentDetails,
                        TotalPoAmount,
                        VendorCity,
                        VendorState,
                        VendorPinCode,
                        VendorPhone,
                        DestinationCity,
                        DestinationState,
                        DestinationPinCode,
                        DestinationPhone,
                        VendorAddress2,
                        DestinationAddress2,
                        VendorAddress3,
                        VendorAddress4,
                        DestinationAddress3,
                        DestinationAddress4,
                        CreatedBy,
                        PrintedBy,
                        VendorTINNo,
                        VendorCSTNo,
                        LocationTINNo};
                rowPOScreenHeaderDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOScreenHeaderDataTableRow);
                return rowPOScreenHeaderDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POScreenHeaderDataTableDataTable cln = ((POScreenHeaderDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POScreenHeaderDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPoNumber = base.Columns["PoNumber"];
                this.columnAmendmentNumber = base.Columns["AmendmentNumber"];
                this.columnPoType = base.Columns["PoType"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnDestinationLocation = base.Columns["DestinationLocation"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnVendorAddress1 = base.Columns["VendorAddress1"];
                this.columnDestinationAddress1 = base.Columns["DestinationAddress1"];
                this.columnPoDate = base.Columns["PoDate"];
                this.columnExpectedDeliveryDate = base.Columns["ExpectedDeliveryDate"];
                this.columnMaxDeliveryDate = base.Columns["MaxDeliveryDate"];
                this.columnStatus = base.Columns["Status"];
                this.columnFormCApplicable = base.Columns["FormCApplicable"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnTotalTaxAmount = base.Columns["TotalTaxAmount"];
                this.columnShippingDetails = base.Columns["ShippingDetails"];
                this.columnPaymentDetails = base.Columns["PaymentDetails"];
                this.columnTotalPoAmount = base.Columns["TotalPoAmount"];
                this.columnVendorCity = base.Columns["VendorCity"];
                this.columnVendorState = base.Columns["VendorState"];
                this.columnVendorPinCode = base.Columns["VendorPinCode"];
                this.columnVendorPhone = base.Columns["VendorPhone"];
                this.columnDestinationCity = base.Columns["DestinationCity"];
                this.columnDestinationState = base.Columns["DestinationState"];
                this.columnDestinationPinCode = base.Columns["DestinationPinCode"];
                this.columnDestinationPhone = base.Columns["DestinationPhone"];
                this.columnVendorAddress2 = base.Columns["VendorAddress2"];
                this.columnDestinationAddress2 = base.Columns["DestinationAddress2"];
                this.columnVendorAddress3 = base.Columns["VendorAddress3"];
                this.columnVendorAddress4 = base.Columns["VendorAddress4"];
                this.columnDestinationAddress3 = base.Columns["DestinationAddress3"];
                this.columnDestinationAddress4 = base.Columns["DestinationAddress4"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnPrintedBy = base.Columns["PrintedBy"];
                this.columnVendorTINNo = base.Columns["VendorTINNo"];
                this.columnVendorCSTNo = base.Columns["VendorCSTNo"];
                this.columnLocationTINNo = base.Columns["LocationTINNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPoNumber = new global::System.Data.DataColumn("PoNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoNumber);
                this.columnAmendmentNumber = new global::System.Data.DataColumn("AmendmentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmendmentNumber);
                this.columnPoType = new global::System.Data.DataColumn("PoType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoType);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnDestinationLocation = new global::System.Data.DataColumn("DestinationLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationLocation);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnVendorAddress1 = new global::System.Data.DataColumn("VendorAddress1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress1);
                this.columnDestinationAddress1 = new global::System.Data.DataColumn("DestinationAddress1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationAddress1);
                this.columnPoDate = new global::System.Data.DataColumn("PoDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoDate);
                this.columnExpectedDeliveryDate = new global::System.Data.DataColumn("ExpectedDeliveryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectedDeliveryDate);
                this.columnMaxDeliveryDate = new global::System.Data.DataColumn("MaxDeliveryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDeliveryDate);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnFormCApplicable = new global::System.Data.DataColumn("FormCApplicable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormCApplicable);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnTotalTaxAmount = new global::System.Data.DataColumn("TotalTaxAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTaxAmount);
                this.columnShippingDetails = new global::System.Data.DataColumn("ShippingDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDetails);
                this.columnPaymentDetails = new global::System.Data.DataColumn("PaymentDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDetails);
                this.columnTotalPoAmount = new global::System.Data.DataColumn("TotalPoAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPoAmount);
                this.columnVendorCity = new global::System.Data.DataColumn("VendorCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCity);
                this.columnVendorState = new global::System.Data.DataColumn("VendorState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorState);
                this.columnVendorPinCode = new global::System.Data.DataColumn("VendorPinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPinCode);
                this.columnVendorPhone = new global::System.Data.DataColumn("VendorPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPhone);
                this.columnDestinationCity = new global::System.Data.DataColumn("DestinationCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationCity);
                this.columnDestinationState = new global::System.Data.DataColumn("DestinationState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationState);
                this.columnDestinationPinCode = new global::System.Data.DataColumn("DestinationPinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationPinCode);
                this.columnDestinationPhone = new global::System.Data.DataColumn("DestinationPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationPhone);
                this.columnVendorAddress2 = new global::System.Data.DataColumn("VendorAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress2);
                this.columnDestinationAddress2 = new global::System.Data.DataColumn("DestinationAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationAddress2);
                this.columnVendorAddress3 = new global::System.Data.DataColumn("VendorAddress3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress3);
                this.columnVendorAddress4 = new global::System.Data.DataColumn("VendorAddress4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress4);
                this.columnDestinationAddress3 = new global::System.Data.DataColumn("DestinationAddress3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationAddress3);
                this.columnDestinationAddress4 = new global::System.Data.DataColumn("DestinationAddress4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationAddress4);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnPrintedBy = new global::System.Data.DataColumn("PrintedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintedBy);
                this.columnVendorTINNo = new global::System.Data.DataColumn("VendorTINNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorTINNo);
                this.columnVendorCSTNo = new global::System.Data.DataColumn("VendorCSTNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCSTNo);
                this.columnLocationTINNo = new global::System.Data.DataColumn("LocationTINNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationTINNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenHeaderDataTableRow NewPOScreenHeaderDataTableRow() {
                return ((POScreenHeaderDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POScreenHeaderDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POScreenHeaderDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POScreenHeaderDataTableRowChanged != null)) {
                    this.POScreenHeaderDataTableRowChanged(this, new POScreenHeaderDataTableRowChangeEvent(((POScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POScreenHeaderDataTableRowChanging != null)) {
                    this.POScreenHeaderDataTableRowChanging(this, new POScreenHeaderDataTableRowChangeEvent(((POScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POScreenHeaderDataTableRowDeleted != null)) {
                    this.POScreenHeaderDataTableRowDeleted(this, new POScreenHeaderDataTableRowChangeEvent(((POScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POScreenHeaderDataTableRowDeleting != null)) {
                    this.POScreenHeaderDataTableRowDeleting(this, new POScreenHeaderDataTableRowChangeEvent(((POScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOScreenHeaderDataTableRow(POScreenHeaderDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POScreen ds = new POScreen();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POScreenHeaderDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POScreenDetailDataTableDataTable : global::System.Data.TypedTableBase<POScreenDetailDataTableRow> {
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemDescription;
            
            private global::System.Data.DataColumn columnPurchaseUOMName;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnUnitQty;
            
            private global::System.Data.DataColumn columnTaxGroupCode;
            
            private global::System.Data.DataColumn columnLineTaxAmount;
            
            private global::System.Data.DataColumn columnLineAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenDetailDataTableDataTable() {
                this.TableName = "POScreenDetailDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POScreenDetailDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POScreenDetailDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseUOMNameColumn {
                get {
                    return this.columnPurchaseUOMName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitQtyColumn {
                get {
                    return this.columnUnitQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxGroupCodeColumn {
                get {
                    return this.columnTaxGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineTaxAmountColumn {
                get {
                    return this.columnLineTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineAmountColumn {
                get {
                    return this.columnLineAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenDetailDataTableRow this[int index] {
                get {
                    return ((POScreenDetailDataTableRow)(this.Rows[index]));
                }
            }
            
            public event POScreenDetailDataTableRowChangeEventHandler POScreenDetailDataTableRowChanging;
            
            public event POScreenDetailDataTableRowChangeEventHandler POScreenDetailDataTableRowChanged;
            
            public event POScreenDetailDataTableRowChangeEventHandler POScreenDetailDataTableRowDeleting;
            
            public event POScreenDetailDataTableRowChangeEventHandler POScreenDetailDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOScreenDetailDataTableRow(POScreenDetailDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenDetailDataTableRow AddPOScreenDetailDataTableRow(string ItemCode, string ItemDescription, string PurchaseUOMName, string UnitPrice, string UnitQty, string TaxGroupCode, string LineTaxAmount, string LineAmount) {
                POScreenDetailDataTableRow rowPOScreenDetailDataTableRow = ((POScreenDetailDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemCode,
                        ItemDescription,
                        PurchaseUOMName,
                        UnitPrice,
                        UnitQty,
                        TaxGroupCode,
                        LineTaxAmount,
                        LineAmount};
                rowPOScreenDetailDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOScreenDetailDataTableRow);
                return rowPOScreenDetailDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POScreenDetailDataTableDataTable cln = ((POScreenDetailDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POScreenDetailDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnPurchaseUOMName = base.Columns["PurchaseUOMName"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnUnitQty = base.Columns["UnitQty"];
                this.columnTaxGroupCode = base.Columns["TaxGroupCode"];
                this.columnLineTaxAmount = base.Columns["LineTaxAmount"];
                this.columnLineAmount = base.Columns["LineAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemDescription = new global::System.Data.DataColumn("ItemDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnPurchaseUOMName = new global::System.Data.DataColumn("PurchaseUOMName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseUOMName);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnUnitQty = new global::System.Data.DataColumn("UnitQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitQty);
                this.columnTaxGroupCode = new global::System.Data.DataColumn("TaxGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxGroupCode);
                this.columnLineTaxAmount = new global::System.Data.DataColumn("LineTaxAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineTaxAmount);
                this.columnLineAmount = new global::System.Data.DataColumn("LineAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenDetailDataTableRow NewPOScreenDetailDataTableRow() {
                return ((POScreenDetailDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POScreenDetailDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POScreenDetailDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POScreenDetailDataTableRowChanged != null)) {
                    this.POScreenDetailDataTableRowChanged(this, new POScreenDetailDataTableRowChangeEvent(((POScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POScreenDetailDataTableRowChanging != null)) {
                    this.POScreenDetailDataTableRowChanging(this, new POScreenDetailDataTableRowChangeEvent(((POScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POScreenDetailDataTableRowDeleted != null)) {
                    this.POScreenDetailDataTableRowDeleted(this, new POScreenDetailDataTableRowChangeEvent(((POScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POScreenDetailDataTableRowDeleting != null)) {
                    this.POScreenDetailDataTableRowDeleting(this, new POScreenDetailDataTableRowChangeEvent(((POScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOScreenDetailDataTableRow(POScreenDetailDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POScreen ds = new POScreen();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POScreenDetailDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POScreenTaxTotalDataTableDataTable : global::System.Data.TypedTableBase<POScreenTaxTotalDataTableRow> {
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnTaxPercent;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenTaxTotalDataTableDataTable() {
                this.TableName = "POScreenTaxTotalDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POScreenTaxTotalDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POScreenTaxTotalDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxPercentColumn {
                get {
                    return this.columnTaxPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenTaxTotalDataTableRow this[int index] {
                get {
                    return ((POScreenTaxTotalDataTableRow)(this.Rows[index]));
                }
            }
            
            public event POScreenTaxTotalDataTableRowChangeEventHandler POScreenTaxTotalDataTableRowChanging;
            
            public event POScreenTaxTotalDataTableRowChangeEventHandler POScreenTaxTotalDataTableRowChanged;
            
            public event POScreenTaxTotalDataTableRowChangeEventHandler POScreenTaxTotalDataTableRowDeleting;
            
            public event POScreenTaxTotalDataTableRowChangeEventHandler POScreenTaxTotalDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOScreenTaxTotalDataTableRow(POScreenTaxTotalDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenTaxTotalDataTableRow AddPOScreenTaxTotalDataTableRow(string Description, string Amount, string TaxPercent, string SubTotal) {
                POScreenTaxTotalDataTableRow rowPOScreenTaxTotalDataTableRow = ((POScreenTaxTotalDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Description,
                        Amount,
                        TaxPercent,
                        SubTotal};
                rowPOScreenTaxTotalDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOScreenTaxTotalDataTableRow);
                return rowPOScreenTaxTotalDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POScreenTaxTotalDataTableDataTable cln = ((POScreenTaxTotalDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POScreenTaxTotalDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDescription = base.Columns["Description"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTaxPercent = base.Columns["TaxPercent"];
                this.columnSubTotal = base.Columns["SubTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTaxPercent = new global::System.Data.DataColumn("TaxPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPercent);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenTaxTotalDataTableRow NewPOScreenTaxTotalDataTableRow() {
                return ((POScreenTaxTotalDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POScreenTaxTotalDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POScreenTaxTotalDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POScreenTaxTotalDataTableRowChanged != null)) {
                    this.POScreenTaxTotalDataTableRowChanged(this, new POScreenTaxTotalDataTableRowChangeEvent(((POScreenTaxTotalDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POScreenTaxTotalDataTableRowChanging != null)) {
                    this.POScreenTaxTotalDataTableRowChanging(this, new POScreenTaxTotalDataTableRowChangeEvent(((POScreenTaxTotalDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POScreenTaxTotalDataTableRowDeleted != null)) {
                    this.POScreenTaxTotalDataTableRowDeleted(this, new POScreenTaxTotalDataTableRowChangeEvent(((POScreenTaxTotalDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POScreenTaxTotalDataTableRowDeleting != null)) {
                    this.POScreenTaxTotalDataTableRowDeleting(this, new POScreenTaxTotalDataTableRowChangeEvent(((POScreenTaxTotalDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOScreenTaxTotalDataTableRow(POScreenTaxTotalDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POScreen ds = new POScreen();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POScreenTaxTotalDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POScreenHeaderDataTableRow : global::System.Data.DataRow {
            
            private POScreenHeaderDataTableDataTable tablePOScreenHeaderDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POScreenHeaderDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOScreenHeaderDataTable = ((POScreenHeaderDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoNumber {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.PoNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoNumber\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.PoNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AmendmentNumber {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.AmendmentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmendmentNumber\' in table \'POScreenHeaderDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.AmendmentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoType {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.PoTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoType\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.PoTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationLocation {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationLocation\' in table \'POScreenHeaderDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedDate {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress1 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorAddress1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAddress1\' in table \'POScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorAddress1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationAddress1 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationAddress1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationAddress1\' in table \'POScreenHeaderDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationAddress1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoDate {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.PoDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoDate\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.PoDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpectedDeliveryDate {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.ExpectedDeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpectedDeliveryDate\' in table \'POScreenHeaderDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.ExpectedDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxDeliveryDate {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.MaxDeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDeliveryDate\' in table \'POScreenHeaderDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.MaxDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormCApplicable {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.FormCApplicableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormCApplicable\' in table \'POScreenHeaderDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.FormCApplicableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalTaxAmount {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.TotalTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTaxAmount\' in table \'POScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.TotalTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippingDetails {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.ShippingDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDetails\' in table \'POScreenHeaderDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.ShippingDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentDetails {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.PaymentDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDetails\' in table \'POScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.PaymentDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPoAmount {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.TotalPoAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPoAmount\' in table \'POScreenHeaderDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.TotalPoAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCity {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCity\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorState {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorState\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorPinCode {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorPinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPinCode\' in table \'POScreenHeaderDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorPinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorPhone {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPhone\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationCity {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationCity\' in table \'POScreenHeaderDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationState {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationState\' in table \'POScreenHeaderDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationPinCode {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationPinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationPinCode\' in table \'POScreenHeaderDataTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationPinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationPhone {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationPhone\' in table \'POScreenHeaderDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress2 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAddress2\' in table \'POScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationAddress2 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationAddress2\' in table \'POScreenHeaderDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress3 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorAddress3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAddress3\' in table \'POScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorAddress3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress4 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorAddress4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAddress4\' in table \'POScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorAddress4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationAddress3 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationAddress3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationAddress3\' in table \'POScreenHeaderDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationAddress3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationAddress4 {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.DestinationAddress4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationAddress4\' in table \'POScreenHeaderDataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.DestinationAddress4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrintedBy {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.PrintedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintedBy\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.PrintedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorTINNo {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorTINNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorTINNo\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorTINNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCSTNo {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.VendorCSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCSTNo\' in table \'POScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.VendorCSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationTINNo {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenHeaderDataTable.LocationTINNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationTINNo\' in table \'POScreenHeaderDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePOScreenHeaderDataTable.LocationTINNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoNumberNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.PoNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoNumberNull() {
                this[this.tablePOScreenHeaderDataTable.PoNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmendmentNumberNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.AmendmentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmendmentNumberNull() {
                this[this.tablePOScreenHeaderDataTable.AmendmentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoTypeNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.PoTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoTypeNull() {
                this[this.tablePOScreenHeaderDataTable.PoTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tablePOScreenHeaderDataTable.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tablePOScreenHeaderDataTable.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationLocationNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationLocationNull() {
                this[this.tablePOScreenHeaderDataTable.DestinationLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tablePOScreenHeaderDataTable.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorAddress1Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorAddress1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorAddress1Null() {
                this[this.tablePOScreenHeaderDataTable.VendorAddress1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationAddress1Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationAddress1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationAddress1Null() {
                this[this.tablePOScreenHeaderDataTable.DestinationAddress1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoDateNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.PoDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoDateNull() {
                this[this.tablePOScreenHeaderDataTable.PoDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpectedDeliveryDateNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.ExpectedDeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpectedDeliveryDateNull() {
                this[this.tablePOScreenHeaderDataTable.ExpectedDeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxDeliveryDateNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.MaxDeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxDeliveryDateNull() {
                this[this.tablePOScreenHeaderDataTable.MaxDeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tablePOScreenHeaderDataTable.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormCApplicableNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.FormCApplicableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormCApplicableNull() {
                this[this.tablePOScreenHeaderDataTable.FormCApplicableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tablePOScreenHeaderDataTable.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalTaxAmountNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.TotalTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalTaxAmountNull() {
                this[this.tablePOScreenHeaderDataTable.TotalTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippingDetailsNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.ShippingDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippingDetailsNull() {
                this[this.tablePOScreenHeaderDataTable.ShippingDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentDetailsNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.PaymentDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentDetailsNull() {
                this[this.tablePOScreenHeaderDataTable.PaymentDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPoAmountNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.TotalPoAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPoAmountNull() {
                this[this.tablePOScreenHeaderDataTable.TotalPoAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCityNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCityNull() {
                this[this.tablePOScreenHeaderDataTable.VendorCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorStateNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorStateNull() {
                this[this.tablePOScreenHeaderDataTable.VendorStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorPinCodeNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorPinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorPinCodeNull() {
                this[this.tablePOScreenHeaderDataTable.VendorPinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorPhoneNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorPhoneNull() {
                this[this.tablePOScreenHeaderDataTable.VendorPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationCityNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationCityNull() {
                this[this.tablePOScreenHeaderDataTable.DestinationCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationStateNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationStateNull() {
                this[this.tablePOScreenHeaderDataTable.DestinationStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationPinCodeNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationPinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationPinCodeNull() {
                this[this.tablePOScreenHeaderDataTable.DestinationPinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationPhoneNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationPhoneNull() {
                this[this.tablePOScreenHeaderDataTable.DestinationPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorAddress2Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorAddress2Null() {
                this[this.tablePOScreenHeaderDataTable.VendorAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationAddress2Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationAddress2Null() {
                this[this.tablePOScreenHeaderDataTable.DestinationAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorAddress3Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorAddress3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorAddress3Null() {
                this[this.tablePOScreenHeaderDataTable.VendorAddress3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorAddress4Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorAddress4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorAddress4Null() {
                this[this.tablePOScreenHeaderDataTable.VendorAddress4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationAddress3Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationAddress3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationAddress3Null() {
                this[this.tablePOScreenHeaderDataTable.DestinationAddress3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationAddress4Null() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.DestinationAddress4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationAddress4Null() {
                this[this.tablePOScreenHeaderDataTable.DestinationAddress4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tablePOScreenHeaderDataTable.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintedByNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.PrintedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintedByNull() {
                this[this.tablePOScreenHeaderDataTable.PrintedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorTINNoNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorTINNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorTINNoNull() {
                this[this.tablePOScreenHeaderDataTable.VendorTINNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCSTNoNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.VendorCSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCSTNoNull() {
                this[this.tablePOScreenHeaderDataTable.VendorCSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationTINNoNull() {
                return this.IsNull(this.tablePOScreenHeaderDataTable.LocationTINNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationTINNoNull() {
                this[this.tablePOScreenHeaderDataTable.LocationTINNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POScreenDetailDataTableRow : global::System.Data.DataRow {
            
            private POScreenDetailDataTableDataTable tablePOScreenDetailDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POScreenDetailDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOScreenDetailDataTable = ((POScreenDetailDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'POScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.ItemDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDescription\' in table \'POScreenDetailDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.ItemDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseUOMName {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.PurchaseUOMNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseUOMName\' in table \'POScreenDetailDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.PurchaseUOMNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitPrice {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'POScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitQty {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.UnitQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitQty\' in table \'POScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.UnitQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxGroupCode {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.TaxGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxGroupCode\' in table \'POScreenDetailDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.TaxGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineTaxAmount {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.LineTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineTaxAmount\' in table \'POScreenDetailDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.LineTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LineAmount {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenDetailDataTable.LineAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineAmount\' in table \'POScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenDetailDataTable.LineAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tablePOScreenDetailDataTable.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescriptionNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.ItemDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescriptionNull() {
                this[this.tablePOScreenDetailDataTable.ItemDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseUOMNameNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.PurchaseUOMNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseUOMNameNull() {
                this[this.tablePOScreenDetailDataTable.PurchaseUOMNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tablePOScreenDetailDataTable.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitQtyNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.UnitQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitQtyNull() {
                this[this.tablePOScreenDetailDataTable.UnitQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxGroupCodeNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.TaxGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxGroupCodeNull() {
                this[this.tablePOScreenDetailDataTable.TaxGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineTaxAmountNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.LineTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineTaxAmountNull() {
                this[this.tablePOScreenDetailDataTable.LineTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineAmountNull() {
                return this.IsNull(this.tablePOScreenDetailDataTable.LineAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineAmountNull() {
                this[this.tablePOScreenDetailDataTable.LineAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POScreenTaxTotalDataTableRow : global::System.Data.DataRow {
            
            private POScreenTaxTotalDataTableDataTable tablePOScreenTaxTotalDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POScreenTaxTotalDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOScreenTaxTotalDataTable = ((POScreenTaxTotalDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenTaxTotalDataTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'POScreenTaxTotalDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePOScreenTaxTotalDataTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenTaxTotalDataTable.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'POScreenTaxTotalDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenTaxTotalDataTable.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxPercent {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenTaxTotalDataTable.TaxPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPercent\' in table \'POScreenTaxTotalDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePOScreenTaxTotalDataTable.TaxPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubTotal {
                get {
                    try {
                        return ((string)(this[this.tablePOScreenTaxTotalDataTable.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'POScreenTaxTotalDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOScreenTaxTotalDataTable.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablePOScreenTaxTotalDataTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablePOScreenTaxTotalDataTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePOScreenTaxTotalDataTable.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePOScreenTaxTotalDataTable.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxPercentNull() {
                return this.IsNull(this.tablePOScreenTaxTotalDataTable.TaxPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxPercentNull() {
                this[this.tablePOScreenTaxTotalDataTable.TaxPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tablePOScreenTaxTotalDataTable.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tablePOScreenTaxTotalDataTable.SubTotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POScreenHeaderDataTableRowChangeEvent : global::System.EventArgs {
            
            private POScreenHeaderDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenHeaderDataTableRowChangeEvent(POScreenHeaderDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenHeaderDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POScreenDetailDataTableRowChangeEvent : global::System.EventArgs {
            
            private POScreenDetailDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenDetailDataTableRowChangeEvent(POScreenDetailDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenDetailDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POScreenTaxTotalDataTableRowChangeEvent : global::System.EventArgs {
            
            private POScreenTaxTotalDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenTaxTotalDataTableRowChangeEvent(POScreenTaxTotalDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POScreenTaxTotalDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591