//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet.ScreenReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RTVScreen")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RTVScreen : global::System.Data.DataSet {
        
        private RTVScreenHeaderDataTableDataTable tableRTVScreenHeaderDataTable;
        
        private RTVScreenDetailDataTableDataTable tableRTVScreenDetailDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RTVScreen() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RTVScreen(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RTVScreenHeaderDataTable"] != null)) {
                    base.Tables.Add(new RTVScreenHeaderDataTableDataTable(ds.Tables["RTVScreenHeaderDataTable"]));
                }
                if ((ds.Tables["RTVScreenDetailDataTable"] != null)) {
                    base.Tables.Add(new RTVScreenDetailDataTableDataTable(ds.Tables["RTVScreenDetailDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RTVScreenHeaderDataTableDataTable RTVScreenHeaderDataTable {
            get {
                return this.tableRTVScreenHeaderDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RTVScreenDetailDataTableDataTable RTVScreenDetailDataTable {
            get {
                return this.tableRTVScreenDetailDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RTVScreen cln = ((RTVScreen)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RTVScreenHeaderDataTable"] != null)) {
                    base.Tables.Add(new RTVScreenHeaderDataTableDataTable(ds.Tables["RTVScreenHeaderDataTable"]));
                }
                if ((ds.Tables["RTVScreenDetailDataTable"] != null)) {
                    base.Tables.Add(new RTVScreenDetailDataTableDataTable(ds.Tables["RTVScreenDetailDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRTVScreenHeaderDataTable = ((RTVScreenHeaderDataTableDataTable)(base.Tables["RTVScreenHeaderDataTable"]));
            if ((initTable == true)) {
                if ((this.tableRTVScreenHeaderDataTable != null)) {
                    this.tableRTVScreenHeaderDataTable.InitVars();
                }
            }
            this.tableRTVScreenDetailDataTable = ((RTVScreenDetailDataTableDataTable)(base.Tables["RTVScreenDetailDataTable"]));
            if ((initTable == true)) {
                if ((this.tableRTVScreenDetailDataTable != null)) {
                    this.tableRTVScreenDetailDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RTVScreen";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RTVScreen.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRTVScreenHeaderDataTable = new RTVScreenHeaderDataTableDataTable();
            base.Tables.Add(this.tableRTVScreenHeaderDataTable);
            this.tableRTVScreenDetailDataTable = new RTVScreenDetailDataTableDataTable();
            base.Tables.Add(this.tableRTVScreenDetailDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRTVScreenHeaderDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRTVScreenDetailDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RTVScreen ds = new RTVScreen();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RTVScreenHeaderDataTableRowChangeEventHandler(object sender, RTVScreenHeaderDataTableRowChangeEvent e);
        
        public delegate void RTVScreenDetailDataTableRowChangeEventHandler(object sender, RTVScreenDetailDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RTVScreenHeaderDataTableDataTable : global::System.Data.TypedTableBase<RTVScreenHeaderDataTableRow> {
            
            private global::System.Data.DataColumn columnReturnNumber;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnReturnDate;
            
            private global::System.Data.DataColumn columnCurrentStatus;
            
            private global::System.Data.DataColumn columnTotalReturnQty;
            
            private global::System.Data.DataColumn columnTotalReturnCost;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnShipmentDate;
            
            private global::System.Data.DataColumn columnShipmentDetails;
            
            private global::System.Data.DataColumn columnDebitNoteNumber;
            
            private global::System.Data.DataColumn columnDebitNoteAmount;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnVendorAddress;
            
            private global::System.Data.DataColumn columnAmountInWords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenHeaderDataTableDataTable() {
                this.TableName = "RTVScreenHeaderDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RTVScreenHeaderDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RTVScreenHeaderDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnNumberColumn {
                get {
                    return this.columnReturnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnDateColumn {
                get {
                    return this.columnReturnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentStatusColumn {
                get {
                    return this.columnCurrentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalReturnQtyColumn {
                get {
                    return this.columnTotalReturnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalReturnCostColumn {
                get {
                    return this.columnTotalReturnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentDateColumn {
                get {
                    return this.columnShipmentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentDetailsColumn {
                get {
                    return this.columnShipmentDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteNumberColumn {
                get {
                    return this.columnDebitNoteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteAmountColumn {
                get {
                    return this.columnDebitNoteAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorAddressColumn {
                get {
                    return this.columnVendorAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountInWordsColumn {
                get {
                    return this.columnAmountInWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenHeaderDataTableRow this[int index] {
                get {
                    return ((RTVScreenHeaderDataTableRow)(this.Rows[index]));
                }
            }
            
            public event RTVScreenHeaderDataTableRowChangeEventHandler RTVScreenHeaderDataTableRowChanging;
            
            public event RTVScreenHeaderDataTableRowChangeEventHandler RTVScreenHeaderDataTableRowChanged;
            
            public event RTVScreenHeaderDataTableRowChangeEventHandler RTVScreenHeaderDataTableRowDeleting;
            
            public event RTVScreenHeaderDataTableRowChangeEventHandler RTVScreenHeaderDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRTVScreenHeaderDataTableRow(RTVScreenHeaderDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenHeaderDataTableRow AddRTVScreenHeaderDataTableRow(string ReturnNumber, string Location, string VendorCode, string ReturnDate, string CurrentStatus, string TotalReturnQty, string TotalReturnCost, string Remarks, string ShipmentDate, string ShipmentDetails, string DebitNoteNumber, string DebitNoteAmount, string VendorName, string VendorAddress, string AmountInWords) {
                RTVScreenHeaderDataTableRow rowRTVScreenHeaderDataTableRow = ((RTVScreenHeaderDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReturnNumber,
                        Location,
                        VendorCode,
                        ReturnDate,
                        CurrentStatus,
                        TotalReturnQty,
                        TotalReturnCost,
                        Remarks,
                        ShipmentDate,
                        ShipmentDetails,
                        DebitNoteNumber,
                        DebitNoteAmount,
                        VendorName,
                        VendorAddress,
                        AmountInWords};
                rowRTVScreenHeaderDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRTVScreenHeaderDataTableRow);
                return rowRTVScreenHeaderDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RTVScreenHeaderDataTableDataTable cln = ((RTVScreenHeaderDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RTVScreenHeaderDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReturnNumber = base.Columns["ReturnNumber"];
                this.columnLocation = base.Columns["Location"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnReturnDate = base.Columns["ReturnDate"];
                this.columnCurrentStatus = base.Columns["CurrentStatus"];
                this.columnTotalReturnQty = base.Columns["TotalReturnQty"];
                this.columnTotalReturnCost = base.Columns["TotalReturnCost"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnShipmentDate = base.Columns["ShipmentDate"];
                this.columnShipmentDetails = base.Columns["ShipmentDetails"];
                this.columnDebitNoteNumber = base.Columns["DebitNoteNumber"];
                this.columnDebitNoteAmount = base.Columns["DebitNoteAmount"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnVendorAddress = base.Columns["VendorAddress"];
                this.columnAmountInWords = base.Columns["AmountInWords"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReturnNumber = new global::System.Data.DataColumn("ReturnNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnNumber);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnReturnDate = new global::System.Data.DataColumn("ReturnDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnDate);
                this.columnCurrentStatus = new global::System.Data.DataColumn("CurrentStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentStatus);
                this.columnTotalReturnQty = new global::System.Data.DataColumn("TotalReturnQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalReturnQty);
                this.columnTotalReturnCost = new global::System.Data.DataColumn("TotalReturnCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalReturnCost);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnShipmentDate = new global::System.Data.DataColumn("ShipmentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentDate);
                this.columnShipmentDetails = new global::System.Data.DataColumn("ShipmentDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentDetails);
                this.columnDebitNoteNumber = new global::System.Data.DataColumn("DebitNoteNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteNumber);
                this.columnDebitNoteAmount = new global::System.Data.DataColumn("DebitNoteAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteAmount);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnVendorAddress = new global::System.Data.DataColumn("VendorAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress);
                this.columnAmountInWords = new global::System.Data.DataColumn("AmountInWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountInWords);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenHeaderDataTableRow NewRTVScreenHeaderDataTableRow() {
                return ((RTVScreenHeaderDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RTVScreenHeaderDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RTVScreenHeaderDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RTVScreenHeaderDataTableRowChanged != null)) {
                    this.RTVScreenHeaderDataTableRowChanged(this, new RTVScreenHeaderDataTableRowChangeEvent(((RTVScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RTVScreenHeaderDataTableRowChanging != null)) {
                    this.RTVScreenHeaderDataTableRowChanging(this, new RTVScreenHeaderDataTableRowChangeEvent(((RTVScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RTVScreenHeaderDataTableRowDeleted != null)) {
                    this.RTVScreenHeaderDataTableRowDeleted(this, new RTVScreenHeaderDataTableRowChangeEvent(((RTVScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RTVScreenHeaderDataTableRowDeleting != null)) {
                    this.RTVScreenHeaderDataTableRowDeleting(this, new RTVScreenHeaderDataTableRowChangeEvent(((RTVScreenHeaderDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRTVScreenHeaderDataTableRow(RTVScreenHeaderDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RTVScreen ds = new RTVScreen();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RTVScreenHeaderDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RTVScreenDetailDataTableDataTable : global::System.Data.TypedTableBase<RTVScreenDetailDataTableRow> {
            
            private global::System.Data.DataColumn columnItemcode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnBucket;
            
            private global::System.Data.DataColumn columnPONumber;
            
            private global::System.Data.DataColumn columnPoQty;
            
            private global::System.Data.DataColumn columnPODateText;
            
            private global::System.Data.DataColumn columnReturnQty;
            
            private global::System.Data.DataColumn columnReturnReason;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenDetailDataTableDataTable() {
                this.TableName = "RTVScreenDetailDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RTVScreenDetailDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RTVScreenDetailDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemcodeColumn {
                get {
                    return this.columnItemcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BucketColumn {
                get {
                    return this.columnBucket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONumberColumn {
                get {
                    return this.columnPONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoQtyColumn {
                get {
                    return this.columnPoQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODateTextColumn {
                get {
                    return this.columnPODateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnQtyColumn {
                get {
                    return this.columnReturnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnReasonColumn {
                get {
                    return this.columnReturnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenDetailDataTableRow this[int index] {
                get {
                    return ((RTVScreenDetailDataTableRow)(this.Rows[index]));
                }
            }
            
            public event RTVScreenDetailDataTableRowChangeEventHandler RTVScreenDetailDataTableRowChanging;
            
            public event RTVScreenDetailDataTableRowChangeEventHandler RTVScreenDetailDataTableRowChanged;
            
            public event RTVScreenDetailDataTableRowChangeEventHandler RTVScreenDetailDataTableRowDeleting;
            
            public event RTVScreenDetailDataTableRowChangeEventHandler RTVScreenDetailDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRTVScreenDetailDataTableRow(RTVScreenDetailDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenDetailDataTableRow AddRTVScreenDetailDataTableRow(string Itemcode, string ItemName, string Bucket, string PONumber, string PoQty, string PODateText, string ReturnQty, string ReturnReason) {
                RTVScreenDetailDataTableRow rowRTVScreenDetailDataTableRow = ((RTVScreenDetailDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Itemcode,
                        ItemName,
                        Bucket,
                        PONumber,
                        PoQty,
                        PODateText,
                        ReturnQty,
                        ReturnReason};
                rowRTVScreenDetailDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRTVScreenDetailDataTableRow);
                return rowRTVScreenDetailDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RTVScreenDetailDataTableDataTable cln = ((RTVScreenDetailDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RTVScreenDetailDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemcode = base.Columns["Itemcode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnBucket = base.Columns["Bucket"];
                this.columnPONumber = base.Columns["PONumber"];
                this.columnPoQty = base.Columns["PoQty"];
                this.columnPODateText = base.Columns["PODateText"];
                this.columnReturnQty = base.Columns["ReturnQty"];
                this.columnReturnReason = base.Columns["ReturnReason"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemcode = new global::System.Data.DataColumn("Itemcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemcode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnBucket = new global::System.Data.DataColumn("Bucket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBucket);
                this.columnPONumber = new global::System.Data.DataColumn("PONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONumber);
                this.columnPoQty = new global::System.Data.DataColumn("PoQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoQty);
                this.columnPODateText = new global::System.Data.DataColumn("PODateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODateText);
                this.columnReturnQty = new global::System.Data.DataColumn("ReturnQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnQty);
                this.columnReturnReason = new global::System.Data.DataColumn("ReturnReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnReason);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenDetailDataTableRow NewRTVScreenDetailDataTableRow() {
                return ((RTVScreenDetailDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RTVScreenDetailDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RTVScreenDetailDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RTVScreenDetailDataTableRowChanged != null)) {
                    this.RTVScreenDetailDataTableRowChanged(this, new RTVScreenDetailDataTableRowChangeEvent(((RTVScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RTVScreenDetailDataTableRowChanging != null)) {
                    this.RTVScreenDetailDataTableRowChanging(this, new RTVScreenDetailDataTableRowChangeEvent(((RTVScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RTVScreenDetailDataTableRowDeleted != null)) {
                    this.RTVScreenDetailDataTableRowDeleted(this, new RTVScreenDetailDataTableRowChangeEvent(((RTVScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RTVScreenDetailDataTableRowDeleting != null)) {
                    this.RTVScreenDetailDataTableRowDeleting(this, new RTVScreenDetailDataTableRowChangeEvent(((RTVScreenDetailDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRTVScreenDetailDataTableRow(RTVScreenDetailDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RTVScreen ds = new RTVScreen();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RTVScreenDetailDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RTVScreenHeaderDataTableRow : global::System.Data.DataRow {
            
            private RTVScreenHeaderDataTableDataTable tableRTVScreenHeaderDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RTVScreenHeaderDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRTVScreenHeaderDataTable = ((RTVScreenHeaderDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnNumber {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.ReturnNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnNumber\' in table \'RTVScreenHeaderDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.ReturnNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'RTVScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'RTVScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnDate {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.ReturnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnDate\' in table \'RTVScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.ReturnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentStatus {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.CurrentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentStatus\' in table \'RTVScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.CurrentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalReturnQty {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.TotalReturnQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalReturnQty\' in table \'RTVScreenHeaderDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.TotalReturnQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalReturnCost {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.TotalReturnCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalReturnCost\' in table \'RTVScreenHeaderDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.TotalReturnCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'RTVScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentDate {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.ShipmentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipmentDate\' in table \'RTVScreenHeaderDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.ShipmentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentDetails {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.ShipmentDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipmentDetails\' in table \'RTVScreenHeaderDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.ShipmentDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteNumber {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.DebitNoteNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteNumber\' in table \'RTVScreenHeaderDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.DebitNoteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteAmount {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.DebitNoteAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteAmount\' in table \'RTVScreenHeaderDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.DebitNoteAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'RTVScreenHeaderDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.VendorAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAddress\' in table \'RTVScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.VendorAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AmountInWords {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenHeaderDataTable.AmountInWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountInWords\' in table \'RTVScreenHeaderDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenHeaderDataTable.AmountInWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnNumberNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.ReturnNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnNumberNull() {
                this[this.tableRTVScreenHeaderDataTable.ReturnNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableRTVScreenHeaderDataTable.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tableRTVScreenHeaderDataTable.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnDateNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.ReturnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnDateNull() {
                this[this.tableRTVScreenHeaderDataTable.ReturnDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentStatusNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.CurrentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentStatusNull() {
                this[this.tableRTVScreenHeaderDataTable.CurrentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalReturnQtyNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.TotalReturnQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalReturnQtyNull() {
                this[this.tableRTVScreenHeaderDataTable.TotalReturnQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalReturnCostNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.TotalReturnCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalReturnCostNull() {
                this[this.tableRTVScreenHeaderDataTable.TotalReturnCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableRTVScreenHeaderDataTable.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentDateNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.ShipmentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentDateNull() {
                this[this.tableRTVScreenHeaderDataTable.ShipmentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentDetailsNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.ShipmentDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentDetailsNull() {
                this[this.tableRTVScreenHeaderDataTable.ShipmentDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteNumberNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.DebitNoteNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteNumberNull() {
                this[this.tableRTVScreenHeaderDataTable.DebitNoteNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteAmountNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.DebitNoteAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteAmountNull() {
                this[this.tableRTVScreenHeaderDataTable.DebitNoteAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableRTVScreenHeaderDataTable.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorAddressNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.VendorAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorAddressNull() {
                this[this.tableRTVScreenHeaderDataTable.VendorAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountInWordsNull() {
                return this.IsNull(this.tableRTVScreenHeaderDataTable.AmountInWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountInWordsNull() {
                this[this.tableRTVScreenHeaderDataTable.AmountInWordsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RTVScreenDetailDataTableRow : global::System.Data.DataRow {
            
            private RTVScreenDetailDataTableDataTable tableRTVScreenDetailDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RTVScreenDetailDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRTVScreenDetailDataTable = ((RTVScreenDetailDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Itemcode {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.ItemcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Itemcode\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.ItemcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bucket {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.BucketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bucket\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.BucketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONumber {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.PONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONumber\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.PONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoQty {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.PoQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoQty\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.PoQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PODateText {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.PODateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODateText\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.PODateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnQty {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.ReturnQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnQty\' in table \'RTVScreenDetailDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.ReturnQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnReason {
                get {
                    try {
                        return ((string)(this[this.tableRTVScreenDetailDataTable.ReturnReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnReason\' in table \'RTVScreenDetailDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableRTVScreenDetailDataTable.ReturnReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemcodeNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.ItemcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemcodeNull() {
                this[this.tableRTVScreenDetailDataTable.ItemcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableRTVScreenDetailDataTable.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBucketNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.BucketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBucketNull() {
                this[this.tableRTVScreenDetailDataTable.BucketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONumberNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.PONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONumberNull() {
                this[this.tableRTVScreenDetailDataTable.PONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoQtyNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.PoQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoQtyNull() {
                this[this.tableRTVScreenDetailDataTable.PoQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODateTextNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.PODateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODateTextNull() {
                this[this.tableRTVScreenDetailDataTable.PODateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnQtyNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.ReturnQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnQtyNull() {
                this[this.tableRTVScreenDetailDataTable.ReturnQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnReasonNull() {
                return this.IsNull(this.tableRTVScreenDetailDataTable.ReturnReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnReasonNull() {
                this[this.tableRTVScreenDetailDataTable.ReturnReasonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RTVScreenHeaderDataTableRowChangeEvent : global::System.EventArgs {
            
            private RTVScreenHeaderDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenHeaderDataTableRowChangeEvent(RTVScreenHeaderDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenHeaderDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RTVScreenDetailDataTableRowChangeEvent : global::System.EventArgs {
            
            private RTVScreenDetailDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenDetailDataTableRowChangeEvent(RTVScreenDetailDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RTVScreenDetailDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591