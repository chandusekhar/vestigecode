//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DistributorEditHistory")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DistributorEditHistory : global::System.Data.DataSet {
        
        private rptDistributorPanBankHistoryDataTable tablerptDistributorPanBankHistory;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DistributorEditHistory() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DistributorEditHistory(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rptDistributorPanBankHistory"] != null)) {
                    base.Tables.Add(new rptDistributorPanBankHistoryDataTable(ds.Tables["rptDistributorPanBankHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptDistributorPanBankHistoryDataTable rptDistributorPanBankHistory {
            get {
                return this.tablerptDistributorPanBankHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DistributorEditHistory cln = ((DistributorEditHistory)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rptDistributorPanBankHistory"] != null)) {
                    base.Tables.Add(new rptDistributorPanBankHistoryDataTable(ds.Tables["rptDistributorPanBankHistory"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablerptDistributorPanBankHistory = ((rptDistributorPanBankHistoryDataTable)(base.Tables["rptDistributorPanBankHistory"]));
            if ((initTable == true)) {
                if ((this.tablerptDistributorPanBankHistory != null)) {
                    this.tablerptDistributorPanBankHistory.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DistributorEditHistory";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DistributorEditHistory.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerptDistributorPanBankHistory = new rptDistributorPanBankHistoryDataTable();
            base.Tables.Add(this.tablerptDistributorPanBankHistory);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerptDistributorPanBankHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DistributorEditHistory ds = new DistributorEditHistory();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void rptDistributorPanBankHistoryRowChangeEventHandler(object sender, rptDistributorPanBankHistoryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptDistributorPanBankHistoryDataTable : global::System.Data.TypedTableBase<rptDistributorPanBankHistoryRow> {
            
            private global::System.Data.DataColumn columnRefId;
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnoldFullName;
            
            private global::System.Data.DataColumn columnNewFullName;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnOldPanNo;
            
            private global::System.Data.DataColumn columnNewPanNO;
            
            private global::System.Data.DataColumn columnOldAccountNo;
            
            private global::System.Data.DataColumn columnNewAccountNo;
            
            private global::System.Data.DataColumn columnOldBankName;
            
            private global::System.Data.DataColumn columnNewBankName;
            
            private global::System.Data.DataColumn columnOldIFSCCode;
            
            private global::System.Data.DataColumn columnNewIFSCCode;
            
            private global::System.Data.DataColumn columnOldBranchName;
            
            private global::System.Data.DataColumn columnNewBranchName;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnHeaderAddress;
            
            private global::System.Data.DataColumn columnAddressText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDistributorPanBankHistoryDataTable() {
                this.TableName = "rptDistributorPanBankHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDistributorPanBankHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected rptDistributorPanBankHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefIdColumn {
                get {
                    return this.columnRefId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oldFullNameColumn {
                get {
                    return this.columnoldFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewFullNameColumn {
                get {
                    return this.columnNewFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldPanNoColumn {
                get {
                    return this.columnOldPanNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewPanNOColumn {
                get {
                    return this.columnNewPanNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldAccountNoColumn {
                get {
                    return this.columnOldAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewAccountNoColumn {
                get {
                    return this.columnNewAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldBankNameColumn {
                get {
                    return this.columnOldBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewBankNameColumn {
                get {
                    return this.columnNewBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldIFSCCodeColumn {
                get {
                    return this.columnOldIFSCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewIFSCCodeColumn {
                get {
                    return this.columnNewIFSCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldBranchNameColumn {
                get {
                    return this.columnOldBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewBranchNameColumn {
                get {
                    return this.columnNewBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderAddressColumn {
                get {
                    return this.columnHeaderAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressTextColumn {
                get {
                    return this.columnAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDistributorPanBankHistoryRow this[int index] {
                get {
                    return ((rptDistributorPanBankHistoryRow)(this.Rows[index]));
                }
            }
            
            public event rptDistributorPanBankHistoryRowChangeEventHandler rptDistributorPanBankHistoryRowChanging;
            
            public event rptDistributorPanBankHistoryRowChangeEventHandler rptDistributorPanBankHistoryRowChanged;
            
            public event rptDistributorPanBankHistoryRowChangeEventHandler rptDistributorPanBankHistoryRowDeleting;
            
            public event rptDistributorPanBankHistoryRowChangeEventHandler rptDistributorPanBankHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddrptDistributorPanBankHistoryRow(rptDistributorPanBankHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDistributorPanBankHistoryRow AddrptDistributorPanBankHistoryRow(
                        string RefId, 
                        string DistributorId, 
                        string oldFullName, 
                        string NewFullName, 
                        string Date, 
                        string OldPanNo, 
                        string NewPanNO, 
                        string OldAccountNo, 
                        string NewAccountNo, 
                        string OldBankName, 
                        string NewBankName, 
                        string OldIFSCCode, 
                        string NewIFSCCode, 
                        string OldBranchName, 
                        string NewBranchName, 
                        string Remarks, 
                        string HeaderAddress, 
                        string AddressText) {
                rptDistributorPanBankHistoryRow rowrptDistributorPanBankHistoryRow = ((rptDistributorPanBankHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RefId,
                        DistributorId,
                        oldFullName,
                        NewFullName,
                        Date,
                        OldPanNo,
                        NewPanNO,
                        OldAccountNo,
                        NewAccountNo,
                        OldBankName,
                        NewBankName,
                        OldIFSCCode,
                        NewIFSCCode,
                        OldBranchName,
                        NewBranchName,
                        Remarks,
                        HeaderAddress,
                        AddressText};
                rowrptDistributorPanBankHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptDistributorPanBankHistoryRow);
                return rowrptDistributorPanBankHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                rptDistributorPanBankHistoryDataTable cln = ((rptDistributorPanBankHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptDistributorPanBankHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRefId = base.Columns["RefId"];
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnoldFullName = base.Columns["oldFullName"];
                this.columnNewFullName = base.Columns["NewFullName"];
                this.columnDate = base.Columns["Date"];
                this.columnOldPanNo = base.Columns["OldPanNo"];
                this.columnNewPanNO = base.Columns["NewPanNO"];
                this.columnOldAccountNo = base.Columns["OldAccountNo"];
                this.columnNewAccountNo = base.Columns["NewAccountNo"];
                this.columnOldBankName = base.Columns["OldBankName"];
                this.columnNewBankName = base.Columns["NewBankName"];
                this.columnOldIFSCCode = base.Columns["OldIFSCCode"];
                this.columnNewIFSCCode = base.Columns["NewIFSCCode"];
                this.columnOldBranchName = base.Columns["OldBranchName"];
                this.columnNewBranchName = base.Columns["NewBranchName"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnHeaderAddress = base.Columns["HeaderAddress"];
                this.columnAddressText = base.Columns["AddressText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRefId = new global::System.Data.DataColumn("RefId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefId);
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnoldFullName = new global::System.Data.DataColumn("oldFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoldFullName);
                this.columnNewFullName = new global::System.Data.DataColumn("NewFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewFullName);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnOldPanNo = new global::System.Data.DataColumn("OldPanNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldPanNo);
                this.columnNewPanNO = new global::System.Data.DataColumn("NewPanNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewPanNO);
                this.columnOldAccountNo = new global::System.Data.DataColumn("OldAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldAccountNo);
                this.columnNewAccountNo = new global::System.Data.DataColumn("NewAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewAccountNo);
                this.columnOldBankName = new global::System.Data.DataColumn("OldBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldBankName);
                this.columnNewBankName = new global::System.Data.DataColumn("NewBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewBankName);
                this.columnOldIFSCCode = new global::System.Data.DataColumn("OldIFSCCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldIFSCCode);
                this.columnNewIFSCCode = new global::System.Data.DataColumn("NewIFSCCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewIFSCCode);
                this.columnOldBranchName = new global::System.Data.DataColumn("OldBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldBranchName);
                this.columnNewBranchName = new global::System.Data.DataColumn("NewBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewBranchName);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnHeaderAddress = new global::System.Data.DataColumn("HeaderAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderAddress);
                this.columnAddressText = new global::System.Data.DataColumn("AddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressText);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDistributorPanBankHistoryRow NewrptDistributorPanBankHistoryRow() {
                return ((rptDistributorPanBankHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptDistributorPanBankHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(rptDistributorPanBankHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptDistributorPanBankHistoryRowChanged != null)) {
                    this.rptDistributorPanBankHistoryRowChanged(this, new rptDistributorPanBankHistoryRowChangeEvent(((rptDistributorPanBankHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptDistributorPanBankHistoryRowChanging != null)) {
                    this.rptDistributorPanBankHistoryRowChanging(this, new rptDistributorPanBankHistoryRowChangeEvent(((rptDistributorPanBankHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptDistributorPanBankHistoryRowDeleted != null)) {
                    this.rptDistributorPanBankHistoryRowDeleted(this, new rptDistributorPanBankHistoryRowChangeEvent(((rptDistributorPanBankHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptDistributorPanBankHistoryRowDeleting != null)) {
                    this.rptDistributorPanBankHistoryRowDeleting(this, new rptDistributorPanBankHistoryRowChangeEvent(((rptDistributorPanBankHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoverptDistributorPanBankHistoryRow(rptDistributorPanBankHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DistributorEditHistory ds = new DistributorEditHistory();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptDistributorPanBankHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class rptDistributorPanBankHistoryRow : global::System.Data.DataRow {
            
            private rptDistributorPanBankHistoryDataTable tablerptDistributorPanBankHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal rptDistributorPanBankHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptDistributorPanBankHistory = ((rptDistributorPanBankHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefId {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.RefIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefId\' in table \'rptDistributorPanBankHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.RefIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'rptDistributorPanBankHistory\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oldFullName {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.oldFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oldFullName\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.oldFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewFullName {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.NewFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewFullName\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.NewFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'rptDistributorPanBankHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldPanNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.OldPanNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldPanNo\' in table \'rptDistributorPanBankHistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.OldPanNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewPanNO {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.NewPanNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewPanNO\' in table \'rptDistributorPanBankHistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.NewPanNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldAccountNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.OldAccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldAccountNo\' in table \'rptDistributorPanBankHistory\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.OldAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewAccountNo {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.NewAccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewAccountNo\' in table \'rptDistributorPanBankHistory\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.NewAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldBankName {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.OldBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldBankName\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.OldBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewBankName {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.NewBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewBankName\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.NewBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldIFSCCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.OldIFSCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldIFSCCode\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.OldIFSCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewIFSCCode {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.NewIFSCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewIFSCCode\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.NewIFSCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldBranchName {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.OldBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldBranchName\' in table \'rptDistributorPanBankHistory\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.OldBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewBranchName {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.NewBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewBranchName\' in table \'rptDistributorPanBankHistory\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.NewBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'rptDistributorPanBankHistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderAddress {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.HeaderAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderAddress\' in table \'rptDistributorPanBankHistory\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.HeaderAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressText {
                get {
                    try {
                        return ((string)(this[this.tablerptDistributorPanBankHistory.AddressTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressText\' in table \'rptDistributorPanBankHistory\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablerptDistributorPanBankHistory.AddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefIdNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.RefIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefIdNull() {
                this[this.tablerptDistributorPanBankHistory.RefIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tablerptDistributorPanBankHistory.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoldFullNameNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.oldFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoldFullNameNull() {
                this[this.tablerptDistributorPanBankHistory.oldFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewFullNameNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.NewFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewFullNameNull() {
                this[this.tablerptDistributorPanBankHistory.NewFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tablerptDistributorPanBankHistory.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldPanNoNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.OldPanNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldPanNoNull() {
                this[this.tablerptDistributorPanBankHistory.OldPanNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewPanNONull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.NewPanNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewPanNONull() {
                this[this.tablerptDistributorPanBankHistory.NewPanNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldAccountNoNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.OldAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldAccountNoNull() {
                this[this.tablerptDistributorPanBankHistory.OldAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewAccountNoNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.NewAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewAccountNoNull() {
                this[this.tablerptDistributorPanBankHistory.NewAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldBankNameNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.OldBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldBankNameNull() {
                this[this.tablerptDistributorPanBankHistory.OldBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewBankNameNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.NewBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewBankNameNull() {
                this[this.tablerptDistributorPanBankHistory.NewBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldIFSCCodeNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.OldIFSCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldIFSCCodeNull() {
                this[this.tablerptDistributorPanBankHistory.OldIFSCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewIFSCCodeNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.NewIFSCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewIFSCCodeNull() {
                this[this.tablerptDistributorPanBankHistory.NewIFSCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldBranchNameNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.OldBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldBranchNameNull() {
                this[this.tablerptDistributorPanBankHistory.OldBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewBranchNameNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.NewBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewBranchNameNull() {
                this[this.tablerptDistributorPanBankHistory.NewBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tablerptDistributorPanBankHistory.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderAddressNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.HeaderAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderAddressNull() {
                this[this.tablerptDistributorPanBankHistory.HeaderAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressTextNull() {
                return this.IsNull(this.tablerptDistributorPanBankHistory.AddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressTextNull() {
                this[this.tablerptDistributorPanBankHistory.AddressTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class rptDistributorPanBankHistoryRowChangeEvent : global::System.EventArgs {
            
            private rptDistributorPanBankHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDistributorPanBankHistoryRowChangeEvent(rptDistributorPanBankHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public rptDistributorPanBankHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591