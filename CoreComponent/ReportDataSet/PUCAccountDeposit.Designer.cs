//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PUCAccountDeposit")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PUCAccountDeposit : global::System.Data.DataSet {
        
        private PUCAccountDeposit_DataTableDataTable tablePUCAccountDeposit_DataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PUCAccountDeposit() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PUCAccountDeposit(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PUCAccountDeposit_DataTable"] != null)) {
                    base.Tables.Add(new PUCAccountDeposit_DataTableDataTable(ds.Tables["PUCAccountDeposit_DataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PUCAccountDeposit_DataTableDataTable PUCAccountDeposit_DataTable {
            get {
                return this.tablePUCAccountDeposit_DataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PUCAccountDeposit cln = ((PUCAccountDeposit)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PUCAccountDeposit_DataTable"] != null)) {
                    base.Tables.Add(new PUCAccountDeposit_DataTableDataTable(ds.Tables["PUCAccountDeposit_DataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePUCAccountDeposit_DataTable = ((PUCAccountDeposit_DataTableDataTable)(base.Tables["PUCAccountDeposit_DataTable"]));
            if ((initTable == true)) {
                if ((this.tablePUCAccountDeposit_DataTable != null)) {
                    this.tablePUCAccountDeposit_DataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PUCAccountDeposit";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PUCAccountDeposit.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePUCAccountDeposit_DataTable = new PUCAccountDeposit_DataTableDataTable();
            base.Tables.Add(this.tablePUCAccountDeposit_DataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePUCAccountDeposit_DataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PUCAccountDeposit ds = new PUCAccountDeposit();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PUCAccountDeposit_DataTableRowChangeEventHandler(object sender, PUCAccountDeposit_DataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PUCAccountDeposit_DataTableDataTable : global::System.Data.TypedTableBase<PUCAccountDeposit_DataTableRow> {
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnDistributorName;
            
            private global::System.Data.DataColumn columnPCId;
            
            private global::System.Data.DataColumn columnPCName;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnFromDateText;
            
            private global::System.Data.DataColumn columnToDateText;
            
            private global::System.Data.DataColumn columnHeaderAddress;
            
            private global::System.Data.DataColumn columnAddressText;
            
            private global::System.Data.DataColumn columnPayDateText;
            
            private global::System.Data.DataColumn columnMode;
            
            private global::System.Data.DataColumn columnTransactionNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PUCAccountDeposit_DataTableDataTable() {
                this.TableName = "PUCAccountDeposit_DataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PUCAccountDeposit_DataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PUCAccountDeposit_DataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorNameColumn {
                get {
                    return this.columnDistributorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCIdColumn {
                get {
                    return this.columnPCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCNameColumn {
                get {
                    return this.columnPCName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateTextColumn {
                get {
                    return this.columnFromDateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateTextColumn {
                get {
                    return this.columnToDateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderAddressColumn {
                get {
                    return this.columnHeaderAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressTextColumn {
                get {
                    return this.columnAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayDateTextColumn {
                get {
                    return this.columnPayDateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModeColumn {
                get {
                    return this.columnMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransactionNoColumn {
                get {
                    return this.columnTransactionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PUCAccountDeposit_DataTableRow this[int index] {
                get {
                    return ((PUCAccountDeposit_DataTableRow)(this.Rows[index]));
                }
            }
            
            public event PUCAccountDeposit_DataTableRowChangeEventHandler PUCAccountDeposit_DataTableRowChanging;
            
            public event PUCAccountDeposit_DataTableRowChangeEventHandler PUCAccountDeposit_DataTableRowChanged;
            
            public event PUCAccountDeposit_DataTableRowChangeEventHandler PUCAccountDeposit_DataTableRowDeleting;
            
            public event PUCAccountDeposit_DataTableRowChangeEventHandler PUCAccountDeposit_DataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPUCAccountDeposit_DataTableRow(PUCAccountDeposit_DataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PUCAccountDeposit_DataTableRow AddPUCAccountDeposit_DataTableRow(string DistributorId, string DistributorName, string PCId, string PCName, string Amount, string FromDateText, string ToDateText, string HeaderAddress, string AddressText, string PayDateText, string Mode, string TransactionNo) {
                PUCAccountDeposit_DataTableRow rowPUCAccountDeposit_DataTableRow = ((PUCAccountDeposit_DataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorId,
                        DistributorName,
                        PCId,
                        PCName,
                        Amount,
                        FromDateText,
                        ToDateText,
                        HeaderAddress,
                        AddressText,
                        PayDateText,
                        Mode,
                        TransactionNo};
                rowPUCAccountDeposit_DataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPUCAccountDeposit_DataTableRow);
                return rowPUCAccountDeposit_DataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PUCAccountDeposit_DataTableDataTable cln = ((PUCAccountDeposit_DataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PUCAccountDeposit_DataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnDistributorName = base.Columns["DistributorName"];
                this.columnPCId = base.Columns["PCId"];
                this.columnPCName = base.Columns["PCName"];
                this.columnAmount = base.Columns["Amount"];
                this.columnFromDateText = base.Columns["FromDateText"];
                this.columnToDateText = base.Columns["ToDateText"];
                this.columnHeaderAddress = base.Columns["HeaderAddress"];
                this.columnAddressText = base.Columns["AddressText"];
                this.columnPayDateText = base.Columns["PayDateText"];
                this.columnMode = base.Columns["Mode"];
                this.columnTransactionNo = base.Columns["TransactionNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnDistributorName = new global::System.Data.DataColumn("DistributorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorName);
                this.columnPCId = new global::System.Data.DataColumn("PCId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCId);
                this.columnPCName = new global::System.Data.DataColumn("PCName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCName);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnFromDateText = new global::System.Data.DataColumn("FromDateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDateText);
                this.columnToDateText = new global::System.Data.DataColumn("ToDateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDateText);
                this.columnHeaderAddress = new global::System.Data.DataColumn("HeaderAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderAddress);
                this.columnAddressText = new global::System.Data.DataColumn("AddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressText);
                this.columnPayDateText = new global::System.Data.DataColumn("PayDateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayDateText);
                this.columnMode = new global::System.Data.DataColumn("Mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMode);
                this.columnTransactionNo = new global::System.Data.DataColumn("TransactionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionNo);
                this.columnAmount.Caption = "Cash";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PUCAccountDeposit_DataTableRow NewPUCAccountDeposit_DataTableRow() {
                return ((PUCAccountDeposit_DataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PUCAccountDeposit_DataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PUCAccountDeposit_DataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PUCAccountDeposit_DataTableRowChanged != null)) {
                    this.PUCAccountDeposit_DataTableRowChanged(this, new PUCAccountDeposit_DataTableRowChangeEvent(((PUCAccountDeposit_DataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PUCAccountDeposit_DataTableRowChanging != null)) {
                    this.PUCAccountDeposit_DataTableRowChanging(this, new PUCAccountDeposit_DataTableRowChangeEvent(((PUCAccountDeposit_DataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PUCAccountDeposit_DataTableRowDeleted != null)) {
                    this.PUCAccountDeposit_DataTableRowDeleted(this, new PUCAccountDeposit_DataTableRowChangeEvent(((PUCAccountDeposit_DataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PUCAccountDeposit_DataTableRowDeleting != null)) {
                    this.PUCAccountDeposit_DataTableRowDeleting(this, new PUCAccountDeposit_DataTableRowChangeEvent(((PUCAccountDeposit_DataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePUCAccountDeposit_DataTableRow(PUCAccountDeposit_DataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PUCAccountDeposit ds = new PUCAccountDeposit();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PUCAccountDeposit_DataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PUCAccountDeposit_DataTableRow : global::System.Data.DataRow {
            
            private PUCAccountDeposit_DataTableDataTable tablePUCAccountDeposit_DataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PUCAccountDeposit_DataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePUCAccountDeposit_DataTable = ((PUCAccountDeposit_DataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'PUCAccountDeposit_DataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorName {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.DistributorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorName\' in table \'PUCAccountDeposit_DataTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.DistributorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCId {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.PCIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCId\' in table \'PUCAccountDeposit_DataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.PCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCName {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.PCNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCName\' in table \'PUCAccountDeposit_DataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.PCNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PUCAccountDeposit_DataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromDateText {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.FromDateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDateText\' in table \'PUCAccountDeposit_DataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.FromDateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDateText {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.ToDateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDateText\' in table \'PUCAccountDeposit_DataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.ToDateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderAddress {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.HeaderAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderAddress\' in table \'PUCAccountDeposit_DataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.HeaderAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressText {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.AddressTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressText\' in table \'PUCAccountDeposit_DataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.AddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayDateText {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.PayDateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayDateText\' in table \'PUCAccountDeposit_DataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.PayDateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mode {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mode\' in table \'PUCAccountDeposit_DataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransactionNo {
                get {
                    try {
                        return ((string)(this[this.tablePUCAccountDeposit_DataTable.TransactionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionNo\' in table \'PUCAccountDeposit_DataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePUCAccountDeposit_DataTable.TransactionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tablePUCAccountDeposit_DataTable.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorNameNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.DistributorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorNameNull() {
                this[this.tablePUCAccountDeposit_DataTable.DistributorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCIdNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.PCIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCIdNull() {
                this[this.tablePUCAccountDeposit_DataTable.PCIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCNameNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.PCNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCNameNull() {
                this[this.tablePUCAccountDeposit_DataTable.PCNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePUCAccountDeposit_DataTable.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateTextNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.FromDateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateTextNull() {
                this[this.tablePUCAccountDeposit_DataTable.FromDateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateTextNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.ToDateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateTextNull() {
                this[this.tablePUCAccountDeposit_DataTable.ToDateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderAddressNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.HeaderAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderAddressNull() {
                this[this.tablePUCAccountDeposit_DataTable.HeaderAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressTextNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.AddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressTextNull() {
                this[this.tablePUCAccountDeposit_DataTable.AddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayDateTextNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.PayDateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayDateTextNull() {
                this[this.tablePUCAccountDeposit_DataTable.PayDateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModeNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModeNull() {
                this[this.tablePUCAccountDeposit_DataTable.ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransactionNoNull() {
                return this.IsNull(this.tablePUCAccountDeposit_DataTable.TransactionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransactionNoNull() {
                this[this.tablePUCAccountDeposit_DataTable.TransactionNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PUCAccountDeposit_DataTableRowChangeEvent : global::System.EventArgs {
            
            private PUCAccountDeposit_DataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PUCAccountDeposit_DataTableRowChangeEvent(PUCAccountDeposit_DataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PUCAccountDeposit_DataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591