//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CarBonusReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CarBonusReport : global::System.Data.DataSet {
        
        private CarBonusDataTable tableCarBonus;
        
        private CarBonusPartPaymentDataTable tableCarBonusPartPayment;
        
        private DistributorCarMaxAllowedAmountDataTable tableDistributorCarMaxAllowedAmount;
        
        private DistriCarFundDataTable tableDistriCarFund;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CarBonusReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CarBonusReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CarBonus"] != null)) {
                    base.Tables.Add(new CarBonusDataTable(ds.Tables["CarBonus"]));
                }
                if ((ds.Tables["CarBonusPartPayment"] != null)) {
                    base.Tables.Add(new CarBonusPartPaymentDataTable(ds.Tables["CarBonusPartPayment"]));
                }
                if ((ds.Tables["DistributorCarMaxAllowedAmount"] != null)) {
                    base.Tables.Add(new DistributorCarMaxAllowedAmountDataTable(ds.Tables["DistributorCarMaxAllowedAmount"]));
                }
                if ((ds.Tables["DistriCarFund"] != null)) {
                    base.Tables.Add(new DistriCarFundDataTable(ds.Tables["DistriCarFund"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CarBonusDataTable CarBonus {
            get {
                return this.tableCarBonus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CarBonusPartPaymentDataTable CarBonusPartPayment {
            get {
                return this.tableCarBonusPartPayment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistributorCarMaxAllowedAmountDataTable DistributorCarMaxAllowedAmount {
            get {
                return this.tableDistributorCarMaxAllowedAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DistriCarFundDataTable DistriCarFund {
            get {
                return this.tableDistriCarFund;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CarBonusReport cln = ((CarBonusReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CarBonus"] != null)) {
                    base.Tables.Add(new CarBonusDataTable(ds.Tables["CarBonus"]));
                }
                if ((ds.Tables["CarBonusPartPayment"] != null)) {
                    base.Tables.Add(new CarBonusPartPaymentDataTable(ds.Tables["CarBonusPartPayment"]));
                }
                if ((ds.Tables["DistributorCarMaxAllowedAmount"] != null)) {
                    base.Tables.Add(new DistributorCarMaxAllowedAmountDataTable(ds.Tables["DistributorCarMaxAllowedAmount"]));
                }
                if ((ds.Tables["DistriCarFund"] != null)) {
                    base.Tables.Add(new DistriCarFundDataTable(ds.Tables["DistriCarFund"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCarBonus = ((CarBonusDataTable)(base.Tables["CarBonus"]));
            if ((initTable == true)) {
                if ((this.tableCarBonus != null)) {
                    this.tableCarBonus.InitVars();
                }
            }
            this.tableCarBonusPartPayment = ((CarBonusPartPaymentDataTable)(base.Tables["CarBonusPartPayment"]));
            if ((initTable == true)) {
                if ((this.tableCarBonusPartPayment != null)) {
                    this.tableCarBonusPartPayment.InitVars();
                }
            }
            this.tableDistributorCarMaxAllowedAmount = ((DistributorCarMaxAllowedAmountDataTable)(base.Tables["DistributorCarMaxAllowedAmount"]));
            if ((initTable == true)) {
                if ((this.tableDistributorCarMaxAllowedAmount != null)) {
                    this.tableDistributorCarMaxAllowedAmount.InitVars();
                }
            }
            this.tableDistriCarFund = ((DistriCarFundDataTable)(base.Tables["DistriCarFund"]));
            if ((initTable == true)) {
                if ((this.tableDistriCarFund != null)) {
                    this.tableDistriCarFund.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CarBonusReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CarBonusReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCarBonus = new CarBonusDataTable();
            base.Tables.Add(this.tableCarBonus);
            this.tableCarBonusPartPayment = new CarBonusPartPaymentDataTable();
            base.Tables.Add(this.tableCarBonusPartPayment);
            this.tableDistributorCarMaxAllowedAmount = new DistributorCarMaxAllowedAmountDataTable();
            base.Tables.Add(this.tableDistributorCarMaxAllowedAmount);
            this.tableDistriCarFund = new DistriCarFundDataTable();
            base.Tables.Add(this.tableDistriCarFund);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCarBonus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCarBonusPartPayment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistributorCarMaxAllowedAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDistriCarFund() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CarBonusReport ds = new CarBonusReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CarBonusRowChangeEventHandler(object sender, CarBonusRowChangeEvent e);
        
        public delegate void CarBonusPartPaymentRowChangeEventHandler(object sender, CarBonusPartPaymentRowChangeEvent e);
        
        public delegate void DistributorCarMaxAllowedAmountRowChangeEventHandler(object sender, DistributorCarMaxAllowedAmountRowChangeEvent e);
        
        public delegate void DistriCarFundRowChangeEventHandler(object sender, DistriCarFundRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CarBonusDataTable : global::System.Data.TypedTableBase<CarBonusRow> {
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCarValue;
            
            private global::System.Data.DataColumn columnMaximumCarValue;
            
            private global::System.Data.DataColumn columnCarPurchaseDate;
            
            private global::System.Data.DataColumn columnFirstPayoutValue;
            
            private global::System.Data.DataColumn columnFirstPayoutBusinessMonth;
            
            private global::System.Data.DataColumn columnCarNumber;
            
            private global::System.Data.DataColumn columnOpening;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnOpeningBusinessMonth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusDataTable() {
                this.TableName = "CarBonus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarBonusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CarBonusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarValueColumn {
                get {
                    return this.columnCarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumCarValueColumn {
                get {
                    return this.columnMaximumCarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarPurchaseDateColumn {
                get {
                    return this.columnCarPurchaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPayoutValueColumn {
                get {
                    return this.columnFirstPayoutValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstPayoutBusinessMonthColumn {
                get {
                    return this.columnFirstPayoutBusinessMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarNumberColumn {
                get {
                    return this.columnCarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningColumn {
                get {
                    return this.columnOpening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningBusinessMonthColumn {
                get {
                    return this.columnOpeningBusinessMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusRow this[int index] {
                get {
                    return ((CarBonusRow)(this.Rows[index]));
                }
            }
            
            public event CarBonusRowChangeEventHandler CarBonusRowChanging;
            
            public event CarBonusRowChangeEventHandler CarBonusRowChanged;
            
            public event CarBonusRowChangeEventHandler CarBonusRowDeleting;
            
            public event CarBonusRowChangeEventHandler CarBonusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCarBonusRow(CarBonusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusRow AddCarBonusRow(string DistributorId, string Name, string CarValue, string MaximumCarValue, string CarPurchaseDate, string FirstPayoutValue, string FirstPayoutBusinessMonth, string CarNumber, string Opening, string Balance, string PaidAmount, string OpeningBusinessMonth) {
                CarBonusRow rowCarBonusRow = ((CarBonusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorId,
                        Name,
                        CarValue,
                        MaximumCarValue,
                        CarPurchaseDate,
                        FirstPayoutValue,
                        FirstPayoutBusinessMonth,
                        CarNumber,
                        Opening,
                        Balance,
                        PaidAmount,
                        OpeningBusinessMonth};
                rowCarBonusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCarBonusRow);
                return rowCarBonusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CarBonusDataTable cln = ((CarBonusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CarBonusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnName = base.Columns["Name"];
                this.columnCarValue = base.Columns["CarValue"];
                this.columnMaximumCarValue = base.Columns["MaximumCarValue"];
                this.columnCarPurchaseDate = base.Columns["CarPurchaseDate"];
                this.columnFirstPayoutValue = base.Columns["FirstPayoutValue"];
                this.columnFirstPayoutBusinessMonth = base.Columns["FirstPayoutBusinessMonth"];
                this.columnCarNumber = base.Columns["CarNumber"];
                this.columnOpening = base.Columns["Opening"];
                this.columnBalance = base.Columns["Balance"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnOpeningBusinessMonth = base.Columns["OpeningBusinessMonth"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCarValue = new global::System.Data.DataColumn("CarValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarValue);
                this.columnMaximumCarValue = new global::System.Data.DataColumn("MaximumCarValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumCarValue);
                this.columnCarPurchaseDate = new global::System.Data.DataColumn("CarPurchaseDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarPurchaseDate);
                this.columnFirstPayoutValue = new global::System.Data.DataColumn("FirstPayoutValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPayoutValue);
                this.columnFirstPayoutBusinessMonth = new global::System.Data.DataColumn("FirstPayoutBusinessMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstPayoutBusinessMonth);
                this.columnCarNumber = new global::System.Data.DataColumn("CarNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarNumber);
                this.columnOpening = new global::System.Data.DataColumn("Opening", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpening);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnOpeningBusinessMonth = new global::System.Data.DataColumn("OpeningBusinessMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningBusinessMonth);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusRow NewCarBonusRow() {
                return ((CarBonusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CarBonusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CarBonusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CarBonusRowChanged != null)) {
                    this.CarBonusRowChanged(this, new CarBonusRowChangeEvent(((CarBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CarBonusRowChanging != null)) {
                    this.CarBonusRowChanging(this, new CarBonusRowChangeEvent(((CarBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CarBonusRowDeleted != null)) {
                    this.CarBonusRowDeleted(this, new CarBonusRowChangeEvent(((CarBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CarBonusRowDeleting != null)) {
                    this.CarBonusRowDeleting(this, new CarBonusRowChangeEvent(((CarBonusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCarBonusRow(CarBonusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CarBonusReport ds = new CarBonusReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CarBonusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CarBonusPartPaymentDataTable : global::System.Data.TypedTableBase<CarBonusPartPaymentRow> {
            
            private global::System.Data.DataColumn columnDistributorID;
            
            private global::System.Data.DataColumn columnPartPaymentAmount;
            
            private global::System.Data.DataColumn columnPaymentMode;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnPartPaymentDate;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusPartPaymentDataTable() {
                this.TableName = "CarBonusPartPayment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarBonusPartPaymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CarBonusPartPaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIDColumn {
                get {
                    return this.columnDistributorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartPaymentAmountColumn {
                get {
                    return this.columnPartPaymentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentModeColumn {
                get {
                    return this.columnPaymentMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartPaymentDateColumn {
                get {
                    return this.columnPartPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusPartPaymentRow this[int index] {
                get {
                    return ((CarBonusPartPaymentRow)(this.Rows[index]));
                }
            }
            
            public event CarBonusPartPaymentRowChangeEventHandler CarBonusPartPaymentRowChanging;
            
            public event CarBonusPartPaymentRowChangeEventHandler CarBonusPartPaymentRowChanged;
            
            public event CarBonusPartPaymentRowChangeEventHandler CarBonusPartPaymentRowDeleting;
            
            public event CarBonusPartPaymentRowChangeEventHandler CarBonusPartPaymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCarBonusPartPaymentRow(CarBonusPartPaymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusPartPaymentRow AddCarBonusPartPaymentRow(string DistributorID, string PartPaymentAmount, string PaymentMode, string Remarks, string PartPaymentDate, string CreatedBy, string CreatedDate) {
                CarBonusPartPaymentRow rowCarBonusPartPaymentRow = ((CarBonusPartPaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorID,
                        PartPaymentAmount,
                        PaymentMode,
                        Remarks,
                        PartPaymentDate,
                        CreatedBy,
                        CreatedDate};
                rowCarBonusPartPaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCarBonusPartPaymentRow);
                return rowCarBonusPartPaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CarBonusPartPaymentDataTable cln = ((CarBonusPartPaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CarBonusPartPaymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorID = base.Columns["DistributorID"];
                this.columnPartPaymentAmount = base.Columns["PartPaymentAmount"];
                this.columnPaymentMode = base.Columns["PaymentMode"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnPartPaymentDate = base.Columns["PartPaymentDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorID = new global::System.Data.DataColumn("DistributorID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorID);
                this.columnPartPaymentAmount = new global::System.Data.DataColumn("PartPaymentAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartPaymentAmount);
                this.columnPaymentMode = new global::System.Data.DataColumn("PaymentMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMode);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnPartPaymentDate = new global::System.Data.DataColumn("PartPaymentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartPaymentDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusPartPaymentRow NewCarBonusPartPaymentRow() {
                return ((CarBonusPartPaymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CarBonusPartPaymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CarBonusPartPaymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CarBonusPartPaymentRowChanged != null)) {
                    this.CarBonusPartPaymentRowChanged(this, new CarBonusPartPaymentRowChangeEvent(((CarBonusPartPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CarBonusPartPaymentRowChanging != null)) {
                    this.CarBonusPartPaymentRowChanging(this, new CarBonusPartPaymentRowChangeEvent(((CarBonusPartPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CarBonusPartPaymentRowDeleted != null)) {
                    this.CarBonusPartPaymentRowDeleted(this, new CarBonusPartPaymentRowChangeEvent(((CarBonusPartPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CarBonusPartPaymentRowDeleting != null)) {
                    this.CarBonusPartPaymentRowDeleting(this, new CarBonusPartPaymentRowChangeEvent(((CarBonusPartPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCarBonusPartPaymentRow(CarBonusPartPaymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CarBonusReport ds = new CarBonusReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CarBonusPartPaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistributorCarMaxAllowedAmountDataTable : global::System.Data.TypedTableBase<DistributorCarMaxAllowedAmountRow> {
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnCarRegistrationNo;
            
            private global::System.Data.DataColumn columnMaxAllowedAmount;
            
            private global::System.Data.DataColumn columnCarPurchaseDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarMaxAllowedAmountDataTable() {
                this.TableName = "DistributorCarMaxAllowedAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorCarMaxAllowedAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistributorCarMaxAllowedAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarRegistrationNoColumn {
                get {
                    return this.columnCarRegistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaxAllowedAmountColumn {
                get {
                    return this.columnMaxAllowedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarPurchaseDateColumn {
                get {
                    return this.columnCarPurchaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarMaxAllowedAmountRow this[int index] {
                get {
                    return ((DistributorCarMaxAllowedAmountRow)(this.Rows[index]));
                }
            }
            
            public event DistributorCarMaxAllowedAmountRowChangeEventHandler DistributorCarMaxAllowedAmountRowChanging;
            
            public event DistributorCarMaxAllowedAmountRowChangeEventHandler DistributorCarMaxAllowedAmountRowChanged;
            
            public event DistributorCarMaxAllowedAmountRowChangeEventHandler DistributorCarMaxAllowedAmountRowDeleting;
            
            public event DistributorCarMaxAllowedAmountRowChangeEventHandler DistributorCarMaxAllowedAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistributorCarMaxAllowedAmountRow(DistributorCarMaxAllowedAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarMaxAllowedAmountRow AddDistributorCarMaxAllowedAmountRow(string DistributorId, string CarRegistrationNo, string MaxAllowedAmount, string CarPurchaseDate) {
                DistributorCarMaxAllowedAmountRow rowDistributorCarMaxAllowedAmountRow = ((DistributorCarMaxAllowedAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorId,
                        CarRegistrationNo,
                        MaxAllowedAmount,
                        CarPurchaseDate};
                rowDistributorCarMaxAllowedAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistributorCarMaxAllowedAmountRow);
                return rowDistributorCarMaxAllowedAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistributorCarMaxAllowedAmountDataTable cln = ((DistributorCarMaxAllowedAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistributorCarMaxAllowedAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnCarRegistrationNo = base.Columns["CarRegistrationNo"];
                this.columnMaxAllowedAmount = base.Columns["MaxAllowedAmount"];
                this.columnCarPurchaseDate = base.Columns["CarPurchaseDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnCarRegistrationNo = new global::System.Data.DataColumn("CarRegistrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarRegistrationNo);
                this.columnMaxAllowedAmount = new global::System.Data.DataColumn("MaxAllowedAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAllowedAmount);
                this.columnCarPurchaseDate = new global::System.Data.DataColumn("CarPurchaseDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarPurchaseDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarMaxAllowedAmountRow NewDistributorCarMaxAllowedAmountRow() {
                return ((DistributorCarMaxAllowedAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistributorCarMaxAllowedAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistributorCarMaxAllowedAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistributorCarMaxAllowedAmountRowChanged != null)) {
                    this.DistributorCarMaxAllowedAmountRowChanged(this, new DistributorCarMaxAllowedAmountRowChangeEvent(((DistributorCarMaxAllowedAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistributorCarMaxAllowedAmountRowChanging != null)) {
                    this.DistributorCarMaxAllowedAmountRowChanging(this, new DistributorCarMaxAllowedAmountRowChangeEvent(((DistributorCarMaxAllowedAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistributorCarMaxAllowedAmountRowDeleted != null)) {
                    this.DistributorCarMaxAllowedAmountRowDeleted(this, new DistributorCarMaxAllowedAmountRowChangeEvent(((DistributorCarMaxAllowedAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistributorCarMaxAllowedAmountRowDeleting != null)) {
                    this.DistributorCarMaxAllowedAmountRowDeleting(this, new DistributorCarMaxAllowedAmountRowChangeEvent(((DistributorCarMaxAllowedAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistributorCarMaxAllowedAmountRow(DistributorCarMaxAllowedAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CarBonusReport ds = new CarBonusReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistributorCarMaxAllowedAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DistriCarFundDataTable : global::System.Data.TypedTableBase<DistriCarFundRow> {
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnCumulativeCarFund;
            
            private global::System.Data.DataColumn columnBusinessMonth;
            
            private global::System.Data.DataColumn columnBalanceAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistriCarFundDataTable() {
                this.TableName = "DistriCarFund";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistriCarFundDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DistriCarFundDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CumulativeCarFundColumn {
                get {
                    return this.columnCumulativeCarFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessMonthColumn {
                get {
                    return this.columnBusinessMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceAmountColumn {
                get {
                    return this.columnBalanceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistriCarFundRow this[int index] {
                get {
                    return ((DistriCarFundRow)(this.Rows[index]));
                }
            }
            
            public event DistriCarFundRowChangeEventHandler DistriCarFundRowChanging;
            
            public event DistriCarFundRowChangeEventHandler DistriCarFundRowChanged;
            
            public event DistriCarFundRowChangeEventHandler DistriCarFundRowDeleting;
            
            public event DistriCarFundRowChangeEventHandler DistriCarFundRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDistriCarFundRow(DistriCarFundRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistriCarFundRow AddDistriCarFundRow(string DistributorId, string CumulativeCarFund, string BusinessMonth, string BalanceAmount, string PaidAmount) {
                DistriCarFundRow rowDistriCarFundRow = ((DistriCarFundRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DistributorId,
                        CumulativeCarFund,
                        BusinessMonth,
                        BalanceAmount,
                        PaidAmount};
                rowDistriCarFundRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDistriCarFundRow);
                return rowDistriCarFundRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DistriCarFundDataTable cln = ((DistriCarFundDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DistriCarFundDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnCumulativeCarFund = base.Columns["CumulativeCarFund"];
                this.columnBusinessMonth = base.Columns["BusinessMonth"];
                this.columnBalanceAmount = base.Columns["BalanceAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnCumulativeCarFund = new global::System.Data.DataColumn("CumulativeCarFund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulativeCarFund);
                this.columnBusinessMonth = new global::System.Data.DataColumn("BusinessMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessMonth);
                this.columnBalanceAmount = new global::System.Data.DataColumn("BalanceAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistriCarFundRow NewDistriCarFundRow() {
                return ((DistriCarFundRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DistriCarFundRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DistriCarFundRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DistriCarFundRowChanged != null)) {
                    this.DistriCarFundRowChanged(this, new DistriCarFundRowChangeEvent(((DistriCarFundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DistriCarFundRowChanging != null)) {
                    this.DistriCarFundRowChanging(this, new DistriCarFundRowChangeEvent(((DistriCarFundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DistriCarFundRowDeleted != null)) {
                    this.DistriCarFundRowDeleted(this, new DistriCarFundRowChangeEvent(((DistriCarFundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DistriCarFundRowDeleting != null)) {
                    this.DistriCarFundRowDeleting(this, new DistriCarFundRowChangeEvent(((DistriCarFundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDistriCarFundRow(DistriCarFundRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CarBonusReport ds = new CarBonusReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DistriCarFundDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CarBonusRow : global::System.Data.DataRow {
            
            private CarBonusDataTable tableCarBonus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarBonusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCarBonus = ((CarBonusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarValue {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.CarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarValue\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.CarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaximumCarValue {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.MaximumCarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaximumCarValue\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.MaximumCarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarPurchaseDate {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.CarPurchaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarPurchaseDate\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.CarPurchaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstPayoutValue {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.FirstPayoutValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPayoutValue\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.FirstPayoutValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstPayoutBusinessMonth {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.FirstPayoutBusinessMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstPayoutBusinessMonth\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.FirstPayoutBusinessMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarNumber {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.CarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarNumber\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.CarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Opening {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.OpeningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Opening\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.OpeningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Balance {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidAmount {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OpeningBusinessMonth {
                get {
                    try {
                        return ((string)(this[this.tableCarBonus.OpeningBusinessMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningBusinessMonth\' in table \'CarBonus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonus.OpeningBusinessMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableCarBonus.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableCarBonus.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableCarBonus.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableCarBonus.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarValueNull() {
                return this.IsNull(this.tableCarBonus.CarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarValueNull() {
                this[this.tableCarBonus.CarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumCarValueNull() {
                return this.IsNull(this.tableCarBonus.MaximumCarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumCarValueNull() {
                this[this.tableCarBonus.MaximumCarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarPurchaseDateNull() {
                return this.IsNull(this.tableCarBonus.CarPurchaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarPurchaseDateNull() {
                this[this.tableCarBonus.CarPurchaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPayoutValueNull() {
                return this.IsNull(this.tableCarBonus.FirstPayoutValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPayoutValueNull() {
                this[this.tableCarBonus.FirstPayoutValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstPayoutBusinessMonthNull() {
                return this.IsNull(this.tableCarBonus.FirstPayoutBusinessMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstPayoutBusinessMonthNull() {
                this[this.tableCarBonus.FirstPayoutBusinessMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarNumberNull() {
                return this.IsNull(this.tableCarBonus.CarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarNumberNull() {
                this[this.tableCarBonus.CarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningNull() {
                return this.IsNull(this.tableCarBonus.OpeningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningNull() {
                this[this.tableCarBonus.OpeningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tableCarBonus.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tableCarBonus.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableCarBonus.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableCarBonus.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningBusinessMonthNull() {
                return this.IsNull(this.tableCarBonus.OpeningBusinessMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningBusinessMonthNull() {
                this[this.tableCarBonus.OpeningBusinessMonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CarBonusPartPaymentRow : global::System.Data.DataRow {
            
            private CarBonusPartPaymentDataTable tableCarBonusPartPayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarBonusPartPaymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCarBonusPartPayment = ((CarBonusPartPaymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorID {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.DistributorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorID\' in table \'CarBonusPartPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.DistributorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartPaymentAmount {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.PartPaymentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartPaymentAmount\' in table \'CarBonusPartPayment\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.PartPaymentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentMode {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.PaymentModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMode\' in table \'CarBonusPartPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.PaymentModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'CarBonusPartPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartPaymentDate {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.PartPaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartPaymentDate\' in table \'CarBonusPartPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.PartPaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'CarBonusPartPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedDate {
                get {
                    try {
                        return ((string)(this[this.tableCarBonusPartPayment.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'CarBonusPartPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarBonusPartPayment.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIDNull() {
                return this.IsNull(this.tableCarBonusPartPayment.DistributorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIDNull() {
                this[this.tableCarBonusPartPayment.DistributorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartPaymentAmountNull() {
                return this.IsNull(this.tableCarBonusPartPayment.PartPaymentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartPaymentAmountNull() {
                this[this.tableCarBonusPartPayment.PartPaymentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentModeNull() {
                return this.IsNull(this.tableCarBonusPartPayment.PaymentModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentModeNull() {
                this[this.tableCarBonusPartPayment.PaymentModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableCarBonusPartPayment.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableCarBonusPartPayment.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartPaymentDateNull() {
                return this.IsNull(this.tableCarBonusPartPayment.PartPaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartPaymentDateNull() {
                this[this.tableCarBonusPartPayment.PartPaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableCarBonusPartPayment.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableCarBonusPartPayment.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCarBonusPartPayment.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableCarBonusPartPayment.CreatedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistributorCarMaxAllowedAmountRow : global::System.Data.DataRow {
            
            private DistributorCarMaxAllowedAmountDataTable tableDistributorCarMaxAllowedAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistributorCarMaxAllowedAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistributorCarMaxAllowedAmount = ((DistributorCarMaxAllowedAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarMaxAllowedAmount.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'DistributorCarMaxAllowedAmount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCarMaxAllowedAmount.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarRegistrationNo {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarMaxAllowedAmount.CarRegistrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarRegistrationNo\' in table \'DistributorCarMaxAllowedAmount" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCarMaxAllowedAmount.CarRegistrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaxAllowedAmount {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarMaxAllowedAmount.MaxAllowedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxAllowedAmount\' in table \'DistributorCarMaxAllowedAmount\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCarMaxAllowedAmount.MaxAllowedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarPurchaseDate {
                get {
                    try {
                        return ((string)(this[this.tableDistributorCarMaxAllowedAmount.CarPurchaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarPurchaseDate\' in table \'DistributorCarMaxAllowedAmount\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistributorCarMaxAllowedAmount.CarPurchaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableDistributorCarMaxAllowedAmount.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableDistributorCarMaxAllowedAmount.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarRegistrationNoNull() {
                return this.IsNull(this.tableDistributorCarMaxAllowedAmount.CarRegistrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarRegistrationNoNull() {
                this[this.tableDistributorCarMaxAllowedAmount.CarRegistrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaxAllowedAmountNull() {
                return this.IsNull(this.tableDistributorCarMaxAllowedAmount.MaxAllowedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaxAllowedAmountNull() {
                this[this.tableDistributorCarMaxAllowedAmount.MaxAllowedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarPurchaseDateNull() {
                return this.IsNull(this.tableDistributorCarMaxAllowedAmount.CarPurchaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarPurchaseDateNull() {
                this[this.tableDistributorCarMaxAllowedAmount.CarPurchaseDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DistriCarFundRow : global::System.Data.DataRow {
            
            private DistriCarFundDataTable tableDistriCarFund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DistriCarFundRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDistriCarFund = ((DistriCarFundDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableDistriCarFund.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'DistriCarFund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistriCarFund.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CumulativeCarFund {
                get {
                    try {
                        return ((string)(this[this.tableDistriCarFund.CumulativeCarFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CumulativeCarFund\' in table \'DistriCarFund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistriCarFund.CumulativeCarFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessMonth {
                get {
                    try {
                        return ((string)(this[this.tableDistriCarFund.BusinessMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessMonth\' in table \'DistriCarFund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistriCarFund.BusinessMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BalanceAmount {
                get {
                    try {
                        return ((string)(this[this.tableDistriCarFund.BalanceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceAmount\' in table \'DistriCarFund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistriCarFund.BalanceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidAmount {
                get {
                    try {
                        return ((string)(this[this.tableDistriCarFund.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'DistriCarFund\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDistriCarFund.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableDistriCarFund.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableDistriCarFund.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCumulativeCarFundNull() {
                return this.IsNull(this.tableDistriCarFund.CumulativeCarFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCumulativeCarFundNull() {
                this[this.tableDistriCarFund.CumulativeCarFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessMonthNull() {
                return this.IsNull(this.tableDistriCarFund.BusinessMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessMonthNull() {
                this[this.tableDistriCarFund.BusinessMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceAmountNull() {
                return this.IsNull(this.tableDistriCarFund.BalanceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceAmountNull() {
                this[this.tableDistriCarFund.BalanceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableDistriCarFund.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableDistriCarFund.PaidAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CarBonusRowChangeEvent : global::System.EventArgs {
            
            private CarBonusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusRowChangeEvent(CarBonusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CarBonusPartPaymentRowChangeEvent : global::System.EventArgs {
            
            private CarBonusPartPaymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusPartPaymentRowChangeEvent(CarBonusPartPaymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarBonusPartPaymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistributorCarMaxAllowedAmountRowChangeEvent : global::System.EventArgs {
            
            private DistributorCarMaxAllowedAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarMaxAllowedAmountRowChangeEvent(DistributorCarMaxAllowedAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistributorCarMaxAllowedAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DistriCarFundRowChangeEvent : global::System.EventArgs {
            
            private DistriCarFundRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistriCarFundRowChangeEvent(DistriCarFundRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DistriCarFundRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591