//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CoreComponent.ReportDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockistLogRptDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockistLogRptDataSet : global::System.Data.DataSet {
        
        private StockistLogRptDataTableDataTable tableStockistLogRptDataTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockistLogRptDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockistLogRptDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StockistLogRptDataTable"] != null)) {
                    base.Tables.Add(new StockistLogRptDataTableDataTable(ds.Tables["StockistLogRptDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockistLogRptDataTableDataTable StockistLogRptDataTable {
            get {
                return this.tableStockistLogRptDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockistLogRptDataSet cln = ((StockistLogRptDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StockistLogRptDataTable"] != null)) {
                    base.Tables.Add(new StockistLogRptDataTableDataTable(ds.Tables["StockistLogRptDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStockistLogRptDataTable = ((StockistLogRptDataTableDataTable)(base.Tables["StockistLogRptDataTable"]));
            if ((initTable == true)) {
                if ((this.tableStockistLogRptDataTable != null)) {
                    this.tableStockistLogRptDataTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockistLogRptDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockistLogRptDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStockistLogRptDataTable = new StockistLogRptDataTableDataTable();
            base.Tables.Add(this.tableStockistLogRptDataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockistLogRptDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockistLogRptDataSet ds = new StockistLogRptDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StockistLogRptDataTableRowChangeEventHandler(object sender, StockistLogRptDataTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockistLogRptDataTableDataTable : global::System.Data.TypedTableBase<StockistLogRptDataTableRow> {
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnDistributorPrice;
            
            private global::System.Data.DataColumn columnLogNo;
            
            private global::System.Data.DataColumn columnHeaderAddress;
            
            private global::System.Data.DataColumn columnAddressText;
            
            private global::System.Data.DataColumn columnFromDateText;
            
            private global::System.Data.DataColumn columnToDateText;
            
            private global::System.Data.DataColumn columnBOId;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnLocationName;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnDistributorId;
            
            private global::System.Data.DataColumn columnDistributorName;
            
            private global::System.Data.DataColumn columnPUCAddress1;
            
            private global::System.Data.DataColumn columnPUCAddress2;
            
            private global::System.Data.DataColumn columnPUCAddress3;
            
            private global::System.Data.DataColumn columnPUCCityName;
            
            private global::System.Data.DataColumn columnPUCStateName;
            
            private global::System.Data.DataColumn columnPUCCountryName;
            
            private global::System.Data.DataColumn columnPUCPINCode;
            
            private global::System.Data.DataColumn columnLogType;
            
            private global::System.Data.DataColumn columnTeamOrderDistName;
            
            private global::System.Data.DataColumn columnWeight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockistLogRptDataTableDataTable() {
                this.TableName = "StockistLogRptDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockistLogRptDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockistLogRptDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorPriceColumn {
                get {
                    return this.columnDistributorPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogNoColumn {
                get {
                    return this.columnLogNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderAddressColumn {
                get {
                    return this.columnHeaderAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressTextColumn {
                get {
                    return this.columnAddressText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateTextColumn {
                get {
                    return this.columnFromDateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateTextColumn {
                get {
                    return this.columnToDateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOIdColumn {
                get {
                    return this.columnBOId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationNameColumn {
                get {
                    return this.columnLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorIdColumn {
                get {
                    return this.columnDistributorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistributorNameColumn {
                get {
                    return this.columnDistributorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCAddress1Column {
                get {
                    return this.columnPUCAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCAddress2Column {
                get {
                    return this.columnPUCAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCAddress3Column {
                get {
                    return this.columnPUCAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCCityNameColumn {
                get {
                    return this.columnPUCCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCStateNameColumn {
                get {
                    return this.columnPUCStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCCountryNameColumn {
                get {
                    return this.columnPUCCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PUCPINCodeColumn {
                get {
                    return this.columnPUCPINCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogTypeColumn {
                get {
                    return this.columnLogType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamOrderDistNameColumn {
                get {
                    return this.columnTeamOrderDistName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockistLogRptDataTableRow this[int index] {
                get {
                    return ((StockistLogRptDataTableRow)(this.Rows[index]));
                }
            }
            
            public event StockistLogRptDataTableRowChangeEventHandler StockistLogRptDataTableRowChanging;
            
            public event StockistLogRptDataTableRowChangeEventHandler StockistLogRptDataTableRowChanged;
            
            public event StockistLogRptDataTableRowChangeEventHandler StockistLogRptDataTableRowDeleting;
            
            public event StockistLogRptDataTableRowChangeEventHandler StockistLogRptDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockistLogRptDataTableRow(StockistLogRptDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockistLogRptDataTableRow AddStockistLogRptDataTableRow(
                        string ItemCode, 
                        string ItemName, 
                        string Quantity, 
                        string DistributorPrice, 
                        string LogNo, 
                        string HeaderAddress, 
                        string AddressText, 
                        string FromDateText, 
                        string ToDateText, 
                        string BOId, 
                        string Amount, 
                        string FromDate, 
                        string ToDate, 
                        string LocationName, 
                        string CityName, 
                        string DistributorId, 
                        string DistributorName, 
                        string PUCAddress1, 
                        string PUCAddress2, 
                        string PUCAddress3, 
                        string PUCCityName, 
                        string PUCStateName, 
                        string PUCCountryName, 
                        string PUCPINCode, 
                        string LogType, 
                        string TeamOrderDistName, 
                        string Weight) {
                StockistLogRptDataTableRow rowStockistLogRptDataTableRow = ((StockistLogRptDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemCode,
                        ItemName,
                        Quantity,
                        DistributorPrice,
                        LogNo,
                        HeaderAddress,
                        AddressText,
                        FromDateText,
                        ToDateText,
                        BOId,
                        Amount,
                        FromDate,
                        ToDate,
                        LocationName,
                        CityName,
                        DistributorId,
                        DistributorName,
                        PUCAddress1,
                        PUCAddress2,
                        PUCAddress3,
                        PUCCityName,
                        PUCStateName,
                        PUCCountryName,
                        PUCPINCode,
                        LogType,
                        TeamOrderDistName,
                        Weight};
                rowStockistLogRptDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockistLogRptDataTableRow);
                return rowStockistLogRptDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockistLogRptDataTableDataTable cln = ((StockistLogRptDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockistLogRptDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnDistributorPrice = base.Columns["DistributorPrice"];
                this.columnLogNo = base.Columns["LogNo"];
                this.columnHeaderAddress = base.Columns["HeaderAddress"];
                this.columnAddressText = base.Columns["AddressText"];
                this.columnFromDateText = base.Columns["FromDateText"];
                this.columnToDateText = base.Columns["ToDateText"];
                this.columnBOId = base.Columns["BOId"];
                this.columnAmount = base.Columns["Amount"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnLocationName = base.Columns["LocationName"];
                this.columnCityName = base.Columns["CityName"];
                this.columnDistributorId = base.Columns["DistributorId"];
                this.columnDistributorName = base.Columns["DistributorName"];
                this.columnPUCAddress1 = base.Columns["PUCAddress1"];
                this.columnPUCAddress2 = base.Columns["PUCAddress2"];
                this.columnPUCAddress3 = base.Columns["PUCAddress3"];
                this.columnPUCCityName = base.Columns["PUCCityName"];
                this.columnPUCStateName = base.Columns["PUCStateName"];
                this.columnPUCCountryName = base.Columns["PUCCountryName"];
                this.columnPUCPINCode = base.Columns["PUCPINCode"];
                this.columnLogType = base.Columns["LogType"];
                this.columnTeamOrderDistName = base.Columns["TeamOrderDistName"];
                this.columnWeight = base.Columns["Weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnDistributorPrice = new global::System.Data.DataColumn("DistributorPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorPrice);
                this.columnLogNo = new global::System.Data.DataColumn("LogNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogNo);
                this.columnHeaderAddress = new global::System.Data.DataColumn("HeaderAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderAddress);
                this.columnAddressText = new global::System.Data.DataColumn("AddressText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddressText);
                this.columnFromDateText = new global::System.Data.DataColumn("FromDateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDateText);
                this.columnToDateText = new global::System.Data.DataColumn("ToDateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDateText);
                this.columnBOId = new global::System.Data.DataColumn("BOId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOId);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnLocationName = new global::System.Data.DataColumn("LocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationName);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnDistributorId = new global::System.Data.DataColumn("DistributorId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorId);
                this.columnDistributorName = new global::System.Data.DataColumn("DistributorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorName);
                this.columnPUCAddress1 = new global::System.Data.DataColumn("PUCAddress1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCAddress1);
                this.columnPUCAddress2 = new global::System.Data.DataColumn("PUCAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCAddress2);
                this.columnPUCAddress3 = new global::System.Data.DataColumn("PUCAddress3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCAddress3);
                this.columnPUCCityName = new global::System.Data.DataColumn("PUCCityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCCityName);
                this.columnPUCStateName = new global::System.Data.DataColumn("PUCStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCStateName);
                this.columnPUCCountryName = new global::System.Data.DataColumn("PUCCountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCCountryName);
                this.columnPUCPINCode = new global::System.Data.DataColumn("PUCPINCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUCPINCode);
                this.columnLogType = new global::System.Data.DataColumn("LogType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogType);
                this.columnTeamOrderDistName = new global::System.Data.DataColumn("TeamOrderDistName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamOrderDistName);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockistLogRptDataTableRow NewStockistLogRptDataTableRow() {
                return ((StockistLogRptDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockistLogRptDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockistLogRptDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockistLogRptDataTableRowChanged != null)) {
                    this.StockistLogRptDataTableRowChanged(this, new StockistLogRptDataTableRowChangeEvent(((StockistLogRptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockistLogRptDataTableRowChanging != null)) {
                    this.StockistLogRptDataTableRowChanging(this, new StockistLogRptDataTableRowChangeEvent(((StockistLogRptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockistLogRptDataTableRowDeleted != null)) {
                    this.StockistLogRptDataTableRowDeleted(this, new StockistLogRptDataTableRowChangeEvent(((StockistLogRptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockistLogRptDataTableRowDeleting != null)) {
                    this.StockistLogRptDataTableRowDeleting(this, new StockistLogRptDataTableRowChangeEvent(((StockistLogRptDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockistLogRptDataTableRow(StockistLogRptDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockistLogRptDataSet ds = new StockistLogRptDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockistLogRptDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockistLogRptDataTableRow : global::System.Data.DataRow {
            
            private StockistLogRptDataTableDataTable tableStockistLogRptDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockistLogRptDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockistLogRptDataTable = ((StockistLogRptDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Quantity {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorPrice {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.DistributorPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorPrice\' in table \'StockistLogRptDataTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.DistributorPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LogNo {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.LogNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogNo\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.LogNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderAddress {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.HeaderAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderAddress\' in table \'StockistLogRptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.HeaderAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddressText {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.AddressTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddressText\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.AddressTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromDateText {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.FromDateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDateText\' in table \'StockistLogRptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.FromDateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDateText {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.ToDateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDateText\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.ToDateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOId {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.BOIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOId\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.BOIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromDate {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDate {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.LocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationName\' in table \'StockistLogRptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.LocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorId {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.DistributorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorId\' in table \'StockistLogRptDataTable\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.DistributorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistributorName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.DistributorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistributorName\' in table \'StockistLogRptDataTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.DistributorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCAddress1 {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCAddress1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCAddress1\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCAddress1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCAddress2 {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCAddress2\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCAddress3 {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCAddress3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCAddress3\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCAddress3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCCityName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCCityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCCityName\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCCityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCStateName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCStateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCStateName\' in table \'StockistLogRptDataTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCCountryName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCCountryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCCountryName\' in table \'StockistLogRptDataTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCCountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PUCPINCode {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.PUCPINCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUCPINCode\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.PUCPINCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LogType {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.LogTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogType\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.LogTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeamOrderDistName {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.TeamOrderDistNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamOrderDistName\' in table \'StockistLogRptDataTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.TeamOrderDistNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Weight {
                get {
                    try {
                        return ((string)(this[this.tableStockistLogRptDataTable.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'StockistLogRptDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockistLogRptDataTable.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableStockistLogRptDataTable.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableStockistLogRptDataTable.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableStockistLogRptDataTable.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorPriceNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.DistributorPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorPriceNull() {
                this[this.tableStockistLogRptDataTable.DistributorPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogNoNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.LogNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogNoNull() {
                this[this.tableStockistLogRptDataTable.LogNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderAddressNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.HeaderAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderAddressNull() {
                this[this.tableStockistLogRptDataTable.HeaderAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressTextNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.AddressTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressTextNull() {
                this[this.tableStockistLogRptDataTable.AddressTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateTextNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.FromDateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateTextNull() {
                this[this.tableStockistLogRptDataTable.FromDateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateTextNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.ToDateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateTextNull() {
                this[this.tableStockistLogRptDataTable.ToDateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOIdNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.BOIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOIdNull() {
                this[this.tableStockistLogRptDataTable.BOIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableStockistLogRptDataTable.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableStockistLogRptDataTable.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tableStockistLogRptDataTable.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.LocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNameNull() {
                this[this.tableStockistLogRptDataTable.LocationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableStockistLogRptDataTable.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorIdNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.DistributorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorIdNull() {
                this[this.tableStockistLogRptDataTable.DistributorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributorNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.DistributorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributorNameNull() {
                this[this.tableStockistLogRptDataTable.DistributorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCAddress1Null() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCAddress1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCAddress1Null() {
                this[this.tableStockistLogRptDataTable.PUCAddress1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCAddress2Null() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCAddress2Null() {
                this[this.tableStockistLogRptDataTable.PUCAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCAddress3Null() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCAddress3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCAddress3Null() {
                this[this.tableStockistLogRptDataTable.PUCAddress3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCCityNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCCityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCCityNameNull() {
                this[this.tableStockistLogRptDataTable.PUCCityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCStateNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCStateNameNull() {
                this[this.tableStockistLogRptDataTable.PUCStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCCountryNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCCountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCCountryNameNull() {
                this[this.tableStockistLogRptDataTable.PUCCountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPUCPINCodeNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.PUCPINCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPUCPINCodeNull() {
                this[this.tableStockistLogRptDataTable.PUCPINCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogTypeNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.LogTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogTypeNull() {
                this[this.tableStockistLogRptDataTable.LogTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamOrderDistNameNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.TeamOrderDistNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamOrderDistNameNull() {
                this[this.tableStockistLogRptDataTable.TeamOrderDistNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableStockistLogRptDataTable.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableStockistLogRptDataTable.WeightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockistLogRptDataTableRowChangeEvent : global::System.EventArgs {
            
            private StockistLogRptDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockistLogRptDataTableRowChangeEvent(StockistLogRptDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockistLogRptDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591