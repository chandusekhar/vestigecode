@using WSS.InternalApplication.Models
@model WSS.InternalApplication.Models.AccountViewModel

<br />
<div class="row">
    <p class="col-md-6"><strong>Profile:</strong>&nbsp;@Model.PrimaryEmailAddress</p>
</div>
<div class="row">
    <p class="col-md-3"><strong>Account Status:</strong>&nbsp;@Model.StatusDescription</p>
</div>

<div class="panel-group" id="profilePanelGroup">
    @*Restore Account*@
    @if (Model.ShowRestoreAccount)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" data-target="#restoreAccount" data-parent="#profilePanelGroup" href="javascript:void(0);">Restore Account</a>
                </h3>
            </div>
            <div class="panel-body panel-collapse collapse" id="restoreAccount">
                Restore Account Content
            </div>
        </div>
    }
    @*Unlock Account*@
    @if (Model.ShowUnlockAccount)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" data-target="#unlockAccount" data-parent="#profilePanelGroup" href="javascript:void(0);">Unlock Account</a>
                </h3>
            </div>
            <div class="panel-body panel-collapse collapse" id="unlockAccount">
                <div class="container">
                    <div class="form-inline">
                        <div class="row">
                            <div class="col-lg-5">
                                <button class="btn btn-primary" type="submit" value="unlockAccount" title="Unlock Account" id="btnUnlockAccount"><i class="fa fa-check-circle"></i> &nbsp;Unlock Account</button>
                                <label id="lblUnlockConfirmationmsg" class="has-error" style="color: red"></label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @*Resend Activation*@
    @if (Model.ShowResendActivation)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" data-target="#resendAcivationPanelBody" data-parent="#profilePanelGroup" href="javascript:void(0);">Resend Activation</a>
                </h3>
            </div>
            <div class="panel-body panel-collapse collapse" id="resendAcivationPanelBody">
                <div class="container">
                    @*@using (Html.BeginForm("ResendActivation", "Account", FormMethod.Post, new { role = "form" }))
                        {*@
                    <div class="form-inline">
                        <div class="row">
                            <div class="col-lg-5">
                                <label id="lblConfirmationmsg" class="has-error" style="color: red"></label>
                                <button class="btn btn-primary" type="submit" value="resendActivation" title="Resend Activation E-mail" id="btnResendActivation"><i class="fa fa-check-circle"></i> &nbsp;Resend Activation</button>
                            </div>
                        </div>
                    </div>
                    @*}*@
                </div>
            </div>
        </div>
    }

    @*Unsubscribe User*@
    @if (Model.ShowUnSubscribe)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" data-target="#unsubscribePanelBody" data-parent="#profilePanelGroup" href="javascript:void(0);">Unsubscribe User</a>
                </h3>
            </div>
            <div class="panel-body panel-collapse collapse" id="unsubscribePanelBody">
                @*@using (Html.BeginForm("Unsubscribe", "Account", FormMethod.Post))
                    {*@
                <div class="form-group">
                    <div class="form-row">
                        <p>This will prevent you from being able to access self-service until you re-register for the service.</p>
                    </div>
                    <div class="form-row">
                        <b>Are you moving?</b>
                        <p>If you are moving within Winnipeg, your utility account may be the same after you move.  If so, your account will automatically update.  If your utility account changes you can add it to your account.</p>
                    </div>
                    <div class="form-row col-md-12">
                        @Html.LabelFor(x => x.UnsubscribeReasonSelected)
                        <div class="radio">
                            @Html.RadioButtonFor(x => Model.UnsubscribeReasonSelected, AccountViewModel.UnsubscribeReason.NoLongerResponsible) No longer responsible for utility billing
                        </div>
                        <div class="radio">
                            @Html.RadioButtonFor(x => Model.UnsubscribeReasonSelected, AccountViewModel.UnsubscribeReason.UnhappyWithService) Unhappy with online services
                        </div>
                        <div class="radio">
                            @Html.RadioButtonFor(x => Model.UnsubscribeReasonSelected, AccountViewModel.UnsubscribeReason.PreferNotToSay) Prefer not to say
                        </div>
                        <div class="radio form-inline">
                            @Html.RadioButtonFor(x => Model.UnsubscribeReasonSelected, AccountViewModel.UnsubscribeReason.Other, new { @class = "form-control-valign-middle" }) Other @Html.TextBoxFor(x => Model.UnsubscribeReasonOtherText, new { @class = "form-control" })
                        </div>
                    </div>
                    <div>
                        &nbsp;
                    </div>
                    <div class="form-row">
                        @Html.LabelFor(x => x.UnsubscribeComments, new { @class = "form-label" })
                        @Html.TextAreaFor(x => x.UnsubscribeComments, new { @class = "form-control", @style = "-moz-min-width: 100%;-ms-min-width: 100%;-o-min-width: 100%;-webkit-min-width: 100%;min-width: 100%" })
                    </div>
                    <div class="form-row top-buffer">
                        <div class="col-lg-5">
                            <button class="btn btn-link" type="reset" value="Cancel" title="Cancel" id="btnCancelUnsubscribe"><i class="fa fa-times-circle"></i> &nbsp;Cancel</button>
                        </div>
                        <div class="col-lg-5 pull-right">
                            <button class="btn btn-primary" type="submit" value="unsubscribe" title="Unsubscribe" id="btnUnsubscribe"><i class="fa fa-check-circle"></i> &nbsp;Unsubscribe</button>
                        </div>
                    </div>
                </div>
                @*}*@
            </div>
        </div>
    }

    @*Reset Password*@
    @if (Model.ShowResetPassword)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" data-target="#changePasswordPanelBody" data-parent="#profilePanelGroup" href="javascript:void(0);">Reset Password</a>
                </h3>
            </div>
            <div class="panel-body panel-collapse collapse" id="changePasswordPanelBody">
                <button class="btn btn-primary" value="changePassword" title="Send Change Password E-mail" id="btnResetPassword"><i class="fa fa-check-circle"></i> &nbsp;Change Password</button>
                <label id="lblPasswordResetMsg" class="has-error" style="color: red"></label>
            </div>
        </div>
    }

    @*Change Email*@
    @if (Model.ShowChangeEmail)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" data-target="#changeEmailPanelBody" data-parent="#profilePanelGroup" href="javascript:void(0);">Change E-mail</a>
                </h3>
            </div>
            <div class="panel-body panel-collapse collapse" id="changeEmailPanelBody">
                @*@using (Html.BeginForm("ChangeEmail", "Account", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.ValidationSummary(true)*@
                <div class="form-inline">
                    <div class="row">
                        <div class="col-lg-5">
                            <input type="hidden" id="hidAccountId" name="hidAccountId" value="@Model.WssAccountId" />
                            <label for="changeEmail1">Enter new e-mail address</label>
                            <input type="text" id="changeEmail1" name="changeEmail1" class="form-control" placeholder="New e-mail address" title="Enter new e-mail address" value="@ViewBag.ChangeEmail1" />
                            <label id="lblEmailErrorMsg" class="has-error" style="color: red"></label>
                        </div>
                        <div class="col-lg-5">
                            <label for="changeEmail2">Confirm new e-mail address</label>
                            <input type="text" id="changeEmail2" name="changeEmail2" class="form-control" placeholder="Confirm new e-mail address" title="Confirm new e-mail address" value="@ViewBag.ChangeEmail2" />
                        </div>
                    </div>
                    <div class="row top-buffer">
                        <div class="col-lg-5">
                            <button class="btn btn-link" type="reset" value="Cancel" title="Cancel" id="btnCancelChangeemail"><i class="fa fa-times-circle"></i> &nbsp;Cancel</button>
                        </div>
                        <div class="col-lg-5">
                            <button class="btn btn-primary" type="submit" value="changeEmail" title="Change E-mail" id="btnChangeEmail"><i class="fa fa-check-circle"></i> &nbsp;Change E-mail</button>
                        </div>
                    </div>
                </div>
                @*}*@
            </div>
        </div>
    }

    @*Additional Email*@
    @if (Model.ShowAdditionalEmail)
    {
        <div class="panel panel-primary" id="internaldivAdditionalEmail">
            <input type="hidden" id="hidAccountId" name="hidAccountId" value="@Model.WssAccountId" />
            @Html.Partial("_additionalEmailAddresses", (PagedList.IPagedList<WSS.InternalApplication.Models.AdditionalEmailAddressViewModel>)ViewBag.additionalEmailAddressRecords)
        </div>
    }
</div>

<script type="text/javascript">
    $(document).ready(function() {
        $("#btnChangeEmail").click(function() {
            if ($("#changeEmail1").val() == "" || $("#changeEmail2").val() == "") {
                $("#lblEmailErrorMsg").text("please enter email address");
            } else if ($("#changeEmail1").val() != $("#changeEmail2").val()) {
                $("#lblEmailErrorMsg").text(" Email address and Confirm Email address does not match");
            } else if (!isEmail($("#changeEmail1").val())) {
                $("#lblEmailErrorMsg").text("please enter valid email address");
            } else {
                $("#lblEmailErrorMsg").text("");
            }
            if ($("#lblEmailErrorMsg").text() == "") {
                if (confirm('Are you sure want to change the Email ID?')) {
                    var id = @(Model.WssAccountId);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ChangeEmail", "Account")',
                        data: { emailAddress: $("#changeEmail1").val(), wssAccountId: id },
                        success: function(data) {
                            location.reload();
                        },
                        error: function(data) {
                            showNotification(data.responseJSON.Message, "Error!", "Error");
                        }
                    });
                }
            }
        });

        $("#btnResetPassword").click(function() {
            $("#lblPasswordResetMsg").text("");
            if ($("#lblPasswordResetMsg").text() == "") {
                if (confirm('Are you sure you want to send Change Password E-mail?')) {
                    var id = @(Model.WssAccountId);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ChangePassword", "Account")',
                        data: { wssAccountId: id },
                        success: function(data) {
                            if (data.Message == "") {
                                showNotification("Failed to send Reset Password link", "Error!", "Error");
                            } else {
                                showNotification(data.Message, "Success!", "Success");
                            }
                        },
                        error: function(data) {
                            debugger;
                        }
                    });
                }
            }
        });

        $("#btnResendActivation").click(function() {
            $("#lblConfirmationmsg").text("");
            if ($("#lblConfirmationmsg").text() == "") {
                if (confirm('Are you sure you want to resend Activation Email?')) {
                    var id = @(Model.WssAccountId);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ResendActivation", "Account")',
                        data: { wssAccountId: id },
                        success: function(data) {
                            if (data.Message == "") {
                                showNotification("Failed to send Activation link", "Error!", "Error");
                            } else {
                                showNotification(data.Message, "Success!", "Success");
                            }
                        },
                        error: function(data) {debugger;
                        }
                    });
                }
            }
        });

        $("#btnUnlockAccount").click(function() {
            $("#lblUnlockConfirmationmsg").text("");
            if ($("#lblUnlockConfirmationmsg").text() == "") {
                if (confirm('Are you sure you want to Unlock the Account?')) {
                    var id = @(Model.WssAccountId);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("UnlockAccount", "Account")',
                        data: { wssAccountId: id },
                        success: function(data) {
                            if (data.Message == "") {
                                showNotification("Failed to Unlock Account", "Error!", "Error");
                            } else {
                                showNotification(data.Message, "Success!", "Success");
                                location.reload();
                            }
                        },
                        error: function(data) {
                            debugger;
                        }
                    });
                }
            }
        });

        $("#btnAdditionalEmail")
            .click(function(e) {
                if ($("#additionalEmail").val() == "") {
                    $("#lbladditionalEmailErrorMsg").text("please enter email address");
                } else if (!isEmail($("#additionalEmail").val())) {
                    $("#lbladditionalEmailErrorMsg").text("please enter valid email address");
                } else {
                    $("#lbladditionalEmailErrorMsg").text("");
                }
                if ($("#lbladditionalEmailErrorMsg").text() == "") {
                    if (confirm('Are you sure want to add Additional Email Address?')) {
                        var id = @(Model.WssAccountId);
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("AdditionalEmail", "Account")',
                            data: { emailAddress: $("#additionalEmail").val(), wssAccountId: id },
                            success: function(data) {
                                if (data.Message !== '' &&  data.Message !== undefined && data.Message !==null) {
                                    $("#lbladditionalEmailErrorMsg").text(data.Message);
                                } else if (data.Message == '' || data.Message === undefined || data.Message ===null) {
                                    //location.reload();
                                    addAdditionalEmailRecord(e,data);
                                    $("#additionalEmail").val("");
                                    showNotification("Additional Email address was added successfully",
                                        "Success!",
                                        "Success");
                                }
                                else
                                    showNotification(data.Message, "Error!", "Error");
                            },
                            error: function(data) {
                                debugger;
                            }
                        });
                    }
                }
                return false;
            });

        function addAdditionalEmailRecord(e,record) {
            $("#internaldivAdditionalEmail").html(record);        
            //DeleteUrl(e, record);
        }

        function DeleteUrl(e,record) {
            var row=  $("<tr data-EmailId=\"' +record.AdditionalEmailAddressId+'\">").append($("<td>").addClass("email-address").html(record.EmailAddress));
            $(row).attr("data-EmailId", record.AdditionalEmailAddressId);
            var link = $("<td style='text-align: center'><a  href='#'><i class='fa fa-trash'></i></a></td>");
            row.append(link);
            $("#additionalEmailTableBody").append(row);
            $(link).click(function(event) {
                event.preventDefault();
                deleteAdditionaleEmailAddress(record.AdditionalEmailAddressId, record.WssAccountId);
                return false;
            });
            return link;
        }

        $("#btnUnsubscribe")
            .click(function() {
                var reason = $("input[type='radio'][name='UnsubscribeReasonSelected']:checked").val();
                var othersText = jQuery("#UnsubscribeReasonOtherText").val();
                var unsubscribeComments = jQuery("#UnsubscribeComments").val();
                if (reason == "Other" && othersText == "") {
                    alert("Please specify reason for other");
                    return;
                }
                if (confirm('Are you sure you want to UnSubscribe the Account?')) {
                    var utilityAccountId = @(Model.UtilityAccountId);
                    //   var comment=x.comment ;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Unsubscribe", "Account")',
                        data: {
                            utilityAccountId: utilityAccountId,
                            reason: reason,
                            othersText: othersText,
                            unsubscribeComments: unsubscribeComments
                        },
                        success: function(data) {
                            if (data.isDeleted == true) {
                                showNotification("User has been unsubscribed successfylly", "Success!", "Success");
                                window.location = "@Url.Action("Index", "Search")";
                            }
                            else
                                showNotification("There is an error occured while unsubscribing user", "Error!", "Error");
                        },
                        error: function(data) {
                            debugger;
                        }
                    });
                }
                else
                {
                    return false;
                }
            });
        $('#btnCancelUnsubscribe').click(function(){
            var divUnsubscribe=$('div#unsubscribePanelBody');
            if(divUnsubscribe!=undefined)
            {
                divUnsubscribe.attr('class','panel-body panel-collapse collapse');
                divUnsubscribe.attr('aria-expanded','false')
                divUnsubscribe[0].style.height='30px';
            }
        });
        $('#btnCancelChangeemail').click(function() {

            $("#changeEmail1").val("");
            $("#changeEmail2").val("");
            var divUnsubscribe=$('div#changeEmailPanelBody');
            if(divUnsubscribe!=undefined)
            {
                divUnsubscribe.attr('class','panel-body panel-collapse collapse');
                divUnsubscribe.attr('aria-expanded','false')
                divUnsubscribe[0].style.height='30px';
            }
        });
        function isEmail(email) {
            var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            return regex.test(email);
        }
    });
</script>